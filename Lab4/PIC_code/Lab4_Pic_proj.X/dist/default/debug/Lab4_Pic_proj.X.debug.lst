

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Dec 13 02:39:15 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F18857
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 1.42
    49                           ; Generated 13/04/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F18857 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  001C                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0110                     	;# 
   137  0110                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0119                     	;# 
   149  0119                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011A                     	;# 
   153  011A                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011B                     	;# 
   158  011B                     	;# 
   159  011C                     	;# 
   160  011C                     	;# 
   161  011C                     	;# 
   162  011D                     	;# 
   163  011D                     	;# 
   164  011D                     	;# 
   165  011E                     	;# 
   166  011E                     	;# 
   167  011E                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  011F                     	;# 
   172  011F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  018E                     	;# 
   176  018F                     	;# 
   177  0190                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0196                     	;# 
   181  0197                     	;# 
   182  0198                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  020C                     	;# 
   188  020C                     	;# 
   189  020D                     	;# 
   190  020E                     	;# 
   191  020F                     	;# 
   192  020F                     	;# 
   193  0210                     	;# 
   194  0210                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0214                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  0218                     	;# 
   208  0218                     	;# 
   209  0219                     	;# 
   210  021A                     	;# 
   211  021B                     	;# 
   212  021B                     	;# 
   213  021C                     	;# 
   214  021C                     	;# 
   215  021D                     	;# 
   216  021D                     	;# 
   217  021E                     	;# 
   218  021F                     	;# 
   219  028C                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  028D                     	;# 
   223  028E                     	;# 
   224  028F                     	;# 
   225  0290                     	;# 
   226  0290                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0293                     	;# 
   232  0294                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0296                     	;# 
   236  0297                     	;# 
   237  0298                     	;# 
   238  0298                     	;# 
   239  0299                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  029B                     	;# 
   243  029C                     	;# 
   244  029C                     	;# 
   245  029D                     	;# 
   246  030C                     	;# 
   247  030C                     	;# 
   248  030D                     	;# 
   249  030E                     	;# 
   250  030F                     	;# 
   251  0310                     	;# 
   252  0310                     	;# 
   253  0311                     	;# 
   254  0312                     	;# 
   255  0313                     	;# 
   256  0314                     	;# 
   257  0314                     	;# 
   258  0315                     	;# 
   259  0316                     	;# 
   260  0317                     	;# 
   261  0318                     	;# 
   262  0318                     	;# 
   263  0319                     	;# 
   264  031A                     	;# 
   265  031B                     	;# 
   266  031C                     	;# 
   267  031C                     	;# 
   268  031D                     	;# 
   269  031E                     	;# 
   270  031F                     	;# 
   271  038C                     	;# 
   272  038D                     	;# 
   273  038E                     	;# 
   274  0390                     	;# 
   275  0391                     	;# 
   276  0392                     	;# 
   277  040C                     	;# 
   278  040D                     	;# 
   279  040E                     	;# 
   280  040F                     	;# 
   281  0410                     	;# 
   282  0411                     	;# 
   283  0416                     	;# 
   284  0416                     	;# 
   285  0417                     	;# 
   286  0418                     	;# 
   287  0418                     	;# 
   288  0419                     	;# 
   289  041A                     	;# 
   290  041A                     	;# 
   291  041B                     	;# 
   292  041C                     	;# 
   293  041C                     	;# 
   294  041D                     	;# 
   295  041E                     	;# 
   296  041F                     	;# 
   297  048C                     	;# 
   298  048C                     	;# 
   299  048D                     	;# 
   300  048E                     	;# 
   301  048F                     	;# 
   302  048F                     	;# 
   303  0490                     	;# 
   304  0491                     	;# 
   305  0492                     	;# 
   306  0492                     	;# 
   307  0493                     	;# 
   308  0494                     	;# 
   309  0495                     	;# 
   310  0495                     	;# 
   311  0496                     	;# 
   312  0497                     	;# 
   313  0498                     	;# 
   314  0499                     	;# 
   315  049A                     	;# 
   316  049B                     	;# 
   317  049C                     	;# 
   318  049D                     	;# 
   319  050C                     	;# 
   320  050C                     	;# 
   321  050D                     	;# 
   322  050E                     	;# 
   323  050F                     	;# 
   324  050F                     	;# 
   325  0510                     	;# 
   326  0511                     	;# 
   327  0512                     	;# 
   328  0512                     	;# 
   329  0513                     	;# 
   330  0514                     	;# 
   331  0515                     	;# 
   332  0515                     	;# 
   333  0516                     	;# 
   334  0517                     	;# 
   335  0518                     	;# 
   336  0519                     	;# 
   337  051A                     	;# 
   338  051B                     	;# 
   339  051C                     	;# 
   340  051D                     	;# 
   341  058C                     	;# 
   342  058C                     	;# 
   343  058D                     	;# 
   344  058E                     	;# 
   345  058F                     	;# 
   346  058F                     	;# 
   347  0590                     	;# 
   348  0591                     	;# 
   349  0592                     	;# 
   350  0593                     	;# 
   351  060C                     	;# 
   352  060D                     	;# 
   353  060E                     	;# 
   354  060F                     	;# 
   355  0610                     	;# 
   356  0611                     	;# 
   357  0612                     	;# 
   358  0613                     	;# 
   359  0614                     	;# 
   360  0616                     	;# 
   361  0617                     	;# 
   362  0618                     	;# 
   363  0619                     	;# 
   364  061A                     	;# 
   365  061B                     	;# 
   366  061C                     	;# 
   367  061D                     	;# 
   368  061E                     	;# 
   369  068C                     	;# 
   370  068D                     	;# 
   371  068E                     	;# 
   372  068F                     	;# 
   373  0690                     	;# 
   374  0691                     	;# 
   375  0692                     	;# 
   376  0693                     	;# 
   377  0694                     	;# 
   378  070C                     	;# 
   379  070D                     	;# 
   380  070E                     	;# 
   381  070F                     	;# 
   382  0710                     	;# 
   383  0711                     	;# 
   384  0712                     	;# 
   385  0713                     	;# 
   386  0714                     	;# 
   387  0716                     	;# 
   388  0717                     	;# 
   389  0718                     	;# 
   390  0719                     	;# 
   391  071A                     	;# 
   392  071B                     	;# 
   393  071C                     	;# 
   394  071D                     	;# 
   395  071E                     	;# 
   396  0796                     	;# 
   397  0797                     	;# 
   398  0798                     	;# 
   399  0799                     	;# 
   400  079A                     	;# 
   401  079B                     	;# 
   402  080C                     	;# 
   403  080D                     	;# 
   404  080E                     	;# 
   405  080F                     	;# 
   406  0810                     	;# 
   407  0811                     	;# 
   408  0812                     	;# 
   409  0813                     	;# 
   410  0814                     	;# 
   411  081A                     	;# 
   412  081B                     	;# 
   413  081C                     	;# 
   414  081D                     	;# 
   415  081E                     	;# 
   416  081F                     	;# 
   417  088C                     	;# 
   418  088D                     	;# 
   419  088E                     	;# 
   420  088F                     	;# 
   421  0890                     	;# 
   422  0891                     	;# 
   423  0892                     	;# 
   424  0893                     	;# 
   425  0895                     	;# 
   426  0896                     	;# 
   427  0897                     	;# 
   428  0898                     	;# 
   429  0899                     	;# 
   430  089A                     	;# 
   431  089B                     	;# 
   432  090C                     	;# 
   433  090E                     	;# 
   434  090F                     	;# 
   435  091F                     	;# 
   436  098F                     	;# 
   437  098F                     	;# 
   438  0990                     	;# 
   439  0991                     	;# 
   440  0992                     	;# 
   441  0993                     	;# 
   442  0994                     	;# 
   443  0995                     	;# 
   444  0996                     	;# 
   445  0997                     	;# 
   446  1E0F                     	;# 
   447  1E10                     	;# 
   448  1E11                     	;# 
   449  1E12                     	;# 
   450  1E13                     	;# 
   451  1E14                     	;# 
   452  1E15                     	;# 
   453  1E16                     	;# 
   454  1E17                     	;# 
   455  1E18                     	;# 
   456  1E19                     	;# 
   457  1E1A                     	;# 
   458  1E1B                     	;# 
   459  1E1C                     	;# 
   460  1E1D                     	;# 
   461  1E1E                     	;# 
   462  1E1F                     	;# 
   463  1E20                     	;# 
   464  1E21                     	;# 
   465  1E22                     	;# 
   466  1E23                     	;# 
   467  1E24                     	;# 
   468  1E25                     	;# 
   469  1E26                     	;# 
   470  1E27                     	;# 
   471  1E28                     	;# 
   472  1E29                     	;# 
   473  1E2A                     	;# 
   474  1E2B                     	;# 
   475  1E2C                     	;# 
   476  1E2D                     	;# 
   477  1E2E                     	;# 
   478  1E2F                     	;# 
   479  1E30                     	;# 
   480  1E31                     	;# 
   481  1E32                     	;# 
   482  1E33                     	;# 
   483  1E34                     	;# 
   484  1E35                     	;# 
   485  1E36                     	;# 
   486  1E37                     	;# 
   487  1E8F                     	;# 
   488  1E90                     	;# 
   489  1E91                     	;# 
   490  1E92                     	;# 
   491  1E93                     	;# 
   492  1E94                     	;# 
   493  1E95                     	;# 
   494  1E96                     	;# 
   495  1E97                     	;# 
   496  1E9C                     	;# 
   497  1E9D                     	;# 
   498  1E9E                     	;# 
   499  1EA1                     	;# 
   500  1EA2                     	;# 
   501  1EA3                     	;# 
   502  1EA4                     	;# 
   503  1EA5                     	;# 
   504  1EA9                     	;# 
   505  1EAA                     	;# 
   506  1EAB                     	;# 
   507  1EAC                     	;# 
   508  1EB1                     	;# 
   509  1EB2                     	;# 
   510  1EB3                     	;# 
   511  1EB8                     	;# 
   512  1EB9                     	;# 
   513  1EBA                     	;# 
   514  1EBB                     	;# 
   515  1EBC                     	;# 
   516  1EBD                     	;# 
   517  1EBE                     	;# 
   518  1EC3                     	;# 
   519  1EC5                     	;# 
   520  1EC6                     	;# 
   521  1EC7                     	;# 
   522  1EC8                     	;# 
   523  1EC9                     	;# 
   524  1ECA                     	;# 
   525  1ECB                     	;# 
   526  1ECC                     	;# 
   527  1F10                     	;# 
   528  1F11                     	;# 
   529  1F12                     	;# 
   530  1F13                     	;# 
   531  1F14                     	;# 
   532  1F15                     	;# 
   533  1F16                     	;# 
   534  1F17                     	;# 
   535  1F18                     	;# 
   536  1F19                     	;# 
   537  1F1A                     	;# 
   538  1F1B                     	;# 
   539  1F1C                     	;# 
   540  1F1D                     	;# 
   541  1F1E                     	;# 
   542  1F1F                     	;# 
   543  1F20                     	;# 
   544  1F21                     	;# 
   545  1F22                     	;# 
   546  1F23                     	;# 
   547  1F24                     	;# 
   548  1F25                     	;# 
   549  1F26                     	;# 
   550  1F27                     	;# 
   551  1F38                     	;# 
   552  1F39                     	;# 
   553  1F3A                     	;# 
   554  1F3B                     	;# 
   555  1F3C                     	;# 
   556  1F3D                     	;# 
   557  1F3E                     	;# 
   558  1F3F                     	;# 
   559  1F40                     	;# 
   560  1F41                     	;# 
   561  1F43                     	;# 
   562  1F44                     	;# 
   563  1F45                     	;# 
   564  1F46                     	;# 
   565  1F47                     	;# 
   566  1F48                     	;# 
   567  1F49                     	;# 
   568  1F4A                     	;# 
   569  1F4B                     	;# 
   570  1F4C                     	;# 
   571  1F4E                     	;# 
   572  1F4F                     	;# 
   573  1F50                     	;# 
   574  1F51                     	;# 
   575  1F52                     	;# 
   576  1F53                     	;# 
   577  1F54                     	;# 
   578  1F55                     	;# 
   579  1F56                     	;# 
   580  1F57                     	;# 
   581  1F65                     	;# 
   582  1F68                     	;# 
   583  1F69                     	;# 
   584  1F6A                     	;# 
   585  1F6B                     	;# 
   586  1FE4                     	;# 
   587  1FE5                     	;# 
   588  1FE6                     	;# 
   589  1FE7                     	;# 
   590  1FE8                     	;# 
   591  1FE9                     	;# 
   592  1FEA                     	;# 
   593  1FEB                     	;# 
   594  1FED                     	;# 
   595  1FEE                     	;# 
   596  1FEF                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0008                     	;# 
   606  0009                     	;# 
   607  000A                     	;# 
   608  000B                     	;# 
   609  000C                     	;# 
   610  000D                     	;# 
   611  000E                     	;# 
   612  0010                     	;# 
   613  0011                     	;# 
   614  0012                     	;# 
   615  0013                     	;# 
   616  0016                     	;# 
   617  0017                     	;# 
   618  0018                     	;# 
   619  001C                     	;# 
   620  001C                     	;# 
   621  001D                     	;# 
   622  001D                     	;# 
   623  001E                     	;# 
   624  001F                     	;# 
   625  008C                     	;# 
   626  008C                     	;# 
   627  008D                     	;# 
   628  008E                     	;# 
   629  008E                     	;# 
   630  008F                     	;# 
   631  0090                     	;# 
   632  0090                     	;# 
   633  0091                     	;# 
   634  0093                     	;# 
   635  0094                     	;# 
   636  0095                     	;# 
   637  0096                     	;# 
   638  0097                     	;# 
   639  0098                     	;# 
   640  0099                     	;# 
   641  009A                     	;# 
   642  009B                     	;# 
   643  009C                     	;# 
   644  009D                     	;# 
   645  009E                     	;# 
   646  010C                     	;# 
   647  010D                     	;# 
   648  010E                     	;# 
   649  010E                     	;# 
   650  010F                     	;# 
   651  0110                     	;# 
   652  0110                     	;# 
   653  0111                     	;# 
   654  0112                     	;# 
   655  0112                     	;# 
   656  0113                     	;# 
   657  0114                     	;# 
   658  0114                     	;# 
   659  0115                     	;# 
   660  0116                     	;# 
   661  0116                     	;# 
   662  0117                     	;# 
   663  0119                     	;# 
   664  0119                     	;# 
   665  0119                     	;# 
   666  011A                     	;# 
   667  011A                     	;# 
   668  011A                     	;# 
   669  011B                     	;# 
   670  011B                     	;# 
   671  011B                     	;# 
   672  011B                     	;# 
   673  011B                     	;# 
   674  011C                     	;# 
   675  011C                     	;# 
   676  011C                     	;# 
   677  011D                     	;# 
   678  011D                     	;# 
   679  011D                     	;# 
   680  011E                     	;# 
   681  011E                     	;# 
   682  011E                     	;# 
   683  011F                     	;# 
   684  011F                     	;# 
   685  011F                     	;# 
   686  011F                     	;# 
   687  011F                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  018F                     	;# 
   692  0190                     	;# 
   693  0191                     	;# 
   694  0192                     	;# 
   695  0196                     	;# 
   696  0197                     	;# 
   697  0198                     	;# 
   698  0199                     	;# 
   699  019A                     	;# 
   700  019B                     	;# 
   701  019C                     	;# 
   702  020C                     	;# 
   703  020C                     	;# 
   704  020D                     	;# 
   705  020E                     	;# 
   706  020F                     	;# 
   707  020F                     	;# 
   708  0210                     	;# 
   709  0210                     	;# 
   710  0211                     	;# 
   711  0211                     	;# 
   712  0212                     	;# 
   713  0212                     	;# 
   714  0213                     	;# 
   715  0214                     	;# 
   716  0215                     	;# 
   717  0215                     	;# 
   718  0216                     	;# 
   719  0216                     	;# 
   720  0217                     	;# 
   721  0217                     	;# 
   722  0218                     	;# 
   723  0218                     	;# 
   724  0219                     	;# 
   725  021A                     	;# 
   726  021B                     	;# 
   727  021B                     	;# 
   728  021C                     	;# 
   729  021C                     	;# 
   730  021D                     	;# 
   731  021D                     	;# 
   732  021E                     	;# 
   733  021F                     	;# 
   734  028C                     	;# 
   735  028C                     	;# 
   736  028D                     	;# 
   737  028D                     	;# 
   738  028E                     	;# 
   739  028F                     	;# 
   740  0290                     	;# 
   741  0290                     	;# 
   742  0291                     	;# 
   743  0292                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0293                     	;# 
   747  0294                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0296                     	;# 
   751  0297                     	;# 
   752  0298                     	;# 
   753  0298                     	;# 
   754  0299                     	;# 
   755  0299                     	;# 
   756  029A                     	;# 
   757  029B                     	;# 
   758  029C                     	;# 
   759  029C                     	;# 
   760  029D                     	;# 
   761  030C                     	;# 
   762  030C                     	;# 
   763  030D                     	;# 
   764  030E                     	;# 
   765  030F                     	;# 
   766  0310                     	;# 
   767  0310                     	;# 
   768  0311                     	;# 
   769  0312                     	;# 
   770  0313                     	;# 
   771  0314                     	;# 
   772  0314                     	;# 
   773  0315                     	;# 
   774  0316                     	;# 
   775  0317                     	;# 
   776  0318                     	;# 
   777  0318                     	;# 
   778  0319                     	;# 
   779  031A                     	;# 
   780  031B                     	;# 
   781  031C                     	;# 
   782  031C                     	;# 
   783  031D                     	;# 
   784  031E                     	;# 
   785  031F                     	;# 
   786  038C                     	;# 
   787  038D                     	;# 
   788  038E                     	;# 
   789  0390                     	;# 
   790  0391                     	;# 
   791  0392                     	;# 
   792  040C                     	;# 
   793  040D                     	;# 
   794  040E                     	;# 
   795  040F                     	;# 
   796  0410                     	;# 
   797  0411                     	;# 
   798  0416                     	;# 
   799  0416                     	;# 
   800  0417                     	;# 
   801  0418                     	;# 
   802  0418                     	;# 
   803  0419                     	;# 
   804  041A                     	;# 
   805  041A                     	;# 
   806  041B                     	;# 
   807  041C                     	;# 
   808  041C                     	;# 
   809  041D                     	;# 
   810  041E                     	;# 
   811  041F                     	;# 
   812  048C                     	;# 
   813  048C                     	;# 
   814  048D                     	;# 
   815  048E                     	;# 
   816  048F                     	;# 
   817  048F                     	;# 
   818  0490                     	;# 
   819  0491                     	;# 
   820  0492                     	;# 
   821  0492                     	;# 
   822  0493                     	;# 
   823  0494                     	;# 
   824  0495                     	;# 
   825  0495                     	;# 
   826  0496                     	;# 
   827  0497                     	;# 
   828  0498                     	;# 
   829  0499                     	;# 
   830  049A                     	;# 
   831  049B                     	;# 
   832  049C                     	;# 
   833  049D                     	;# 
   834  050C                     	;# 
   835  050C                     	;# 
   836  050D                     	;# 
   837  050E                     	;# 
   838  050F                     	;# 
   839  050F                     	;# 
   840  0510                     	;# 
   841  0511                     	;# 
   842  0512                     	;# 
   843  0512                     	;# 
   844  0513                     	;# 
   845  0514                     	;# 
   846  0515                     	;# 
   847  0515                     	;# 
   848  0516                     	;# 
   849  0517                     	;# 
   850  0518                     	;# 
   851  0519                     	;# 
   852  051A                     	;# 
   853  051B                     	;# 
   854  051C                     	;# 
   855  051D                     	;# 
   856  058C                     	;# 
   857  058C                     	;# 
   858  058D                     	;# 
   859  058E                     	;# 
   860  058F                     	;# 
   861  058F                     	;# 
   862  0590                     	;# 
   863  0591                     	;# 
   864  0592                     	;# 
   865  0593                     	;# 
   866  060C                     	;# 
   867  060D                     	;# 
   868  060E                     	;# 
   869  060F                     	;# 
   870  0610                     	;# 
   871  0611                     	;# 
   872  0612                     	;# 
   873  0613                     	;# 
   874  0614                     	;# 
   875  0616                     	;# 
   876  0617                     	;# 
   877  0618                     	;# 
   878  0619                     	;# 
   879  061A                     	;# 
   880  061B                     	;# 
   881  061C                     	;# 
   882  061D                     	;# 
   883  061E                     	;# 
   884  068C                     	;# 
   885  068D                     	;# 
   886  068E                     	;# 
   887  068F                     	;# 
   888  0690                     	;# 
   889  0691                     	;# 
   890  0692                     	;# 
   891  0693                     	;# 
   892  0694                     	;# 
   893  070C                     	;# 
   894  070D                     	;# 
   895  070E                     	;# 
   896  070F                     	;# 
   897  0710                     	;# 
   898  0711                     	;# 
   899  0712                     	;# 
   900  0713                     	;# 
   901  0714                     	;# 
   902  0716                     	;# 
   903  0717                     	;# 
   904  0718                     	;# 
   905  0719                     	;# 
   906  071A                     	;# 
   907  071B                     	;# 
   908  071C                     	;# 
   909  071D                     	;# 
   910  071E                     	;# 
   911  0796                     	;# 
   912  0797                     	;# 
   913  0798                     	;# 
   914  0799                     	;# 
   915  079A                     	;# 
   916  079B                     	;# 
   917  080C                     	;# 
   918  080D                     	;# 
   919  080E                     	;# 
   920  080F                     	;# 
   921  0810                     	;# 
   922  0811                     	;# 
   923  0812                     	;# 
   924  0813                     	;# 
   925  0814                     	;# 
   926  081A                     	;# 
   927  081B                     	;# 
   928  081C                     	;# 
   929  081D                     	;# 
   930  081E                     	;# 
   931  081F                     	;# 
   932  088C                     	;# 
   933  088D                     	;# 
   934  088E                     	;# 
   935  088F                     	;# 
   936  0890                     	;# 
   937  0891                     	;# 
   938  0892                     	;# 
   939  0893                     	;# 
   940  0895                     	;# 
   941  0896                     	;# 
   942  0897                     	;# 
   943  0898                     	;# 
   944  0899                     	;# 
   945  089A                     	;# 
   946  089B                     	;# 
   947  090C                     	;# 
   948  090E                     	;# 
   949  090F                     	;# 
   950  091F                     	;# 
   951  098F                     	;# 
   952  098F                     	;# 
   953  0990                     	;# 
   954  0991                     	;# 
   955  0992                     	;# 
   956  0993                     	;# 
   957  0994                     	;# 
   958  0995                     	;# 
   959  0996                     	;# 
   960  0997                     	;# 
   961  1E0F                     	;# 
   962  1E10                     	;# 
   963  1E11                     	;# 
   964  1E12                     	;# 
   965  1E13                     	;# 
   966  1E14                     	;# 
   967  1E15                     	;# 
   968  1E16                     	;# 
   969  1E17                     	;# 
   970  1E18                     	;# 
   971  1E19                     	;# 
   972  1E1A                     	;# 
   973  1E1B                     	;# 
   974  1E1C                     	;# 
   975  1E1D                     	;# 
   976  1E1E                     	;# 
   977  1E1F                     	;# 
   978  1E20                     	;# 
   979  1E21                     	;# 
   980  1E22                     	;# 
   981  1E23                     	;# 
   982  1E24                     	;# 
   983  1E25                     	;# 
   984  1E26                     	;# 
   985  1E27                     	;# 
   986  1E28                     	;# 
   987  1E29                     	;# 
   988  1E2A                     	;# 
   989  1E2B                     	;# 
   990  1E2C                     	;# 
   991  1E2D                     	;# 
   992  1E2E                     	;# 
   993  1E2F                     	;# 
   994  1E30                     	;# 
   995  1E31                     	;# 
   996  1E32                     	;# 
   997  1E33                     	;# 
   998  1E34                     	;# 
   999  1E35                     	;# 
  1000  1E36                     	;# 
  1001  1E37                     	;# 
  1002  1E8F                     	;# 
  1003  1E90                     	;# 
  1004  1E91                     	;# 
  1005  1E92                     	;# 
  1006  1E93                     	;# 
  1007  1E94                     	;# 
  1008  1E95                     	;# 
  1009  1E96                     	;# 
  1010  1E97                     	;# 
  1011  1E9C                     	;# 
  1012  1E9D                     	;# 
  1013  1E9E                     	;# 
  1014  1EA1                     	;# 
  1015  1EA2                     	;# 
  1016  1EA3                     	;# 
  1017  1EA4                     	;# 
  1018  1EA5                     	;# 
  1019  1EA9                     	;# 
  1020  1EAA                     	;# 
  1021  1EAB                     	;# 
  1022  1EAC                     	;# 
  1023  1EB1                     	;# 
  1024  1EB2                     	;# 
  1025  1EB3                     	;# 
  1026  1EB8                     	;# 
  1027  1EB9                     	;# 
  1028  1EBA                     	;# 
  1029  1EBB                     	;# 
  1030  1EBC                     	;# 
  1031  1EBD                     	;# 
  1032  1EBE                     	;# 
  1033  1EC3                     	;# 
  1034  1EC5                     	;# 
  1035  1EC6                     	;# 
  1036  1EC7                     	;# 
  1037  1EC8                     	;# 
  1038  1EC9                     	;# 
  1039  1ECA                     	;# 
  1040  1ECB                     	;# 
  1041  1ECC                     	;# 
  1042  1F10                     	;# 
  1043  1F11                     	;# 
  1044  1F12                     	;# 
  1045  1F13                     	;# 
  1046  1F14                     	;# 
  1047  1F15                     	;# 
  1048  1F16                     	;# 
  1049  1F17                     	;# 
  1050  1F18                     	;# 
  1051  1F19                     	;# 
  1052  1F1A                     	;# 
  1053  1F1B                     	;# 
  1054  1F1C                     	;# 
  1055  1F1D                     	;# 
  1056  1F1E                     	;# 
  1057  1F1F                     	;# 
  1058  1F20                     	;# 
  1059  1F21                     	;# 
  1060  1F22                     	;# 
  1061  1F23                     	;# 
  1062  1F24                     	;# 
  1063  1F25                     	;# 
  1064  1F26                     	;# 
  1065  1F27                     	;# 
  1066  1F38                     	;# 
  1067  1F39                     	;# 
  1068  1F3A                     	;# 
  1069  1F3B                     	;# 
  1070  1F3C                     	;# 
  1071  1F3D                     	;# 
  1072  1F3E                     	;# 
  1073  1F3F                     	;# 
  1074  1F40                     	;# 
  1075  1F41                     	;# 
  1076  1F43                     	;# 
  1077  1F44                     	;# 
  1078  1F45                     	;# 
  1079  1F46                     	;# 
  1080  1F47                     	;# 
  1081  1F48                     	;# 
  1082  1F49                     	;# 
  1083  1F4A                     	;# 
  1084  1F4B                     	;# 
  1085  1F4C                     	;# 
  1086  1F4E                     	;# 
  1087  1F4F                     	;# 
  1088  1F50                     	;# 
  1089  1F51                     	;# 
  1090  1F52                     	;# 
  1091  1F53                     	;# 
  1092  1F54                     	;# 
  1093  1F55                     	;# 
  1094  1F56                     	;# 
  1095  1F57                     	;# 
  1096  1F65                     	;# 
  1097  1F68                     	;# 
  1098  1F69                     	;# 
  1099  1F6A                     	;# 
  1100  1F6B                     	;# 
  1101  1FE4                     	;# 
  1102  1FE5                     	;# 
  1103  1FE6                     	;# 
  1104  1FE7                     	;# 
  1105  1FE8                     	;# 
  1106  1FE9                     	;# 
  1107  1FEA                     	;# 
  1108  1FEB                     	;# 
  1109  1FED                     	;# 
  1110  1FEE                     	;# 
  1111  1FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  001C                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001D                     	;# 
  1138  001E                     	;# 
  1139  001F                     	;# 
  1140  008C                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008E                     	;# 
  1145  008F                     	;# 
  1146  0090                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0093                     	;# 
  1150  0094                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009C                     	;# 
  1159  009D                     	;# 
  1160  009E                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010E                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0110                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0112                     	;# 
  1171  0113                     	;# 
  1172  0114                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0119                     	;# 
  1179  0119                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011A                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011B                     	;# 
  1187  011B                     	;# 
  1188  011B                     	;# 
  1189  011C                     	;# 
  1190  011C                     	;# 
  1191  011C                     	;# 
  1192  011D                     	;# 
  1193  011D                     	;# 
  1194  011D                     	;# 
  1195  011E                     	;# 
  1196  011E                     	;# 
  1197  011E                     	;# 
  1198  011F                     	;# 
  1199  011F                     	;# 
  1200  011F                     	;# 
  1201  011F                     	;# 
  1202  011F                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  018F                     	;# 
  1207  0190                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0196                     	;# 
  1211  0197                     	;# 
  1212  0198                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  020C                     	;# 
  1218  020C                     	;# 
  1219  020D                     	;# 
  1220  020E                     	;# 
  1221  020F                     	;# 
  1222  020F                     	;# 
  1223  0210                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0216                     	;# 
  1234  0216                     	;# 
  1235  0217                     	;# 
  1236  0217                     	;# 
  1237  0218                     	;# 
  1238  0218                     	;# 
  1239  0219                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021B                     	;# 
  1243  021C                     	;# 
  1244  021C                     	;# 
  1245  021D                     	;# 
  1246  021D                     	;# 
  1247  021E                     	;# 
  1248  021F                     	;# 
  1249  028C                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  028F                     	;# 
  1255  0290                     	;# 
  1256  0290                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0292                     	;# 
  1260  0293                     	;# 
  1261  0293                     	;# 
  1262  0294                     	;# 
  1263  0295                     	;# 
  1264  0296                     	;# 
  1265  0296                     	;# 
  1266  0297                     	;# 
  1267  0298                     	;# 
  1268  0298                     	;# 
  1269  0299                     	;# 
  1270  0299                     	;# 
  1271  029A                     	;# 
  1272  029B                     	;# 
  1273  029C                     	;# 
  1274  029C                     	;# 
  1275  029D                     	;# 
  1276  030C                     	;# 
  1277  030C                     	;# 
  1278  030D                     	;# 
  1279  030E                     	;# 
  1280  030F                     	;# 
  1281  0310                     	;# 
  1282  0310                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0314                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  0318                     	;# 
  1293  0319                     	;# 
  1294  031A                     	;# 
  1295  031B                     	;# 
  1296  031C                     	;# 
  1297  031C                     	;# 
  1298  031D                     	;# 
  1299  031E                     	;# 
  1300  031F                     	;# 
  1301  038C                     	;# 
  1302  038D                     	;# 
  1303  038E                     	;# 
  1304  0390                     	;# 
  1305  0391                     	;# 
  1306  0392                     	;# 
  1307  040C                     	;# 
  1308  040D                     	;# 
  1309  040E                     	;# 
  1310  040F                     	;# 
  1311  0410                     	;# 
  1312  0411                     	;# 
  1313  0416                     	;# 
  1314  0416                     	;# 
  1315  0417                     	;# 
  1316  0418                     	;# 
  1317  0418                     	;# 
  1318  0419                     	;# 
  1319  041A                     	;# 
  1320  041A                     	;# 
  1321  041B                     	;# 
  1322  041C                     	;# 
  1323  041C                     	;# 
  1324  041D                     	;# 
  1325  041E                     	;# 
  1326  041F                     	;# 
  1327  048C                     	;# 
  1328  048C                     	;# 
  1329  048D                     	;# 
  1330  048E                     	;# 
  1331  048F                     	;# 
  1332  048F                     	;# 
  1333  0490                     	;# 
  1334  0491                     	;# 
  1335  0492                     	;# 
  1336  0492                     	;# 
  1337  0493                     	;# 
  1338  0494                     	;# 
  1339  0495                     	;# 
  1340  0495                     	;# 
  1341  0496                     	;# 
  1342  0497                     	;# 
  1343  0498                     	;# 
  1344  0499                     	;# 
  1345  049A                     	;# 
  1346  049B                     	;# 
  1347  049C                     	;# 
  1348  049D                     	;# 
  1349  050C                     	;# 
  1350  050C                     	;# 
  1351  050D                     	;# 
  1352  050E                     	;# 
  1353  050F                     	;# 
  1354  050F                     	;# 
  1355  0510                     	;# 
  1356  0511                     	;# 
  1357  0512                     	;# 
  1358  0512                     	;# 
  1359  0513                     	;# 
  1360  0514                     	;# 
  1361  0515                     	;# 
  1362  0515                     	;# 
  1363  0516                     	;# 
  1364  0517                     	;# 
  1365  0518                     	;# 
  1366  0519                     	;# 
  1367  051A                     	;# 
  1368  051B                     	;# 
  1369  051C                     	;# 
  1370  051D                     	;# 
  1371  058C                     	;# 
  1372  058C                     	;# 
  1373  058D                     	;# 
  1374  058E                     	;# 
  1375  058F                     	;# 
  1376  058F                     	;# 
  1377  0590                     	;# 
  1378  0591                     	;# 
  1379  0592                     	;# 
  1380  0593                     	;# 
  1381  060C                     	;# 
  1382  060D                     	;# 
  1383  060E                     	;# 
  1384  060F                     	;# 
  1385  0610                     	;# 
  1386  0611                     	;# 
  1387  0612                     	;# 
  1388  0613                     	;# 
  1389  0614                     	;# 
  1390  0616                     	;# 
  1391  0617                     	;# 
  1392  0618                     	;# 
  1393  0619                     	;# 
  1394  061A                     	;# 
  1395  061B                     	;# 
  1396  061C                     	;# 
  1397  061D                     	;# 
  1398  061E                     	;# 
  1399  068C                     	;# 
  1400  068D                     	;# 
  1401  068E                     	;# 
  1402  068F                     	;# 
  1403  0690                     	;# 
  1404  0691                     	;# 
  1405  0692                     	;# 
  1406  0693                     	;# 
  1407  0694                     	;# 
  1408  070C                     	;# 
  1409  070D                     	;# 
  1410  070E                     	;# 
  1411  070F                     	;# 
  1412  0710                     	;# 
  1413  0711                     	;# 
  1414  0712                     	;# 
  1415  0713                     	;# 
  1416  0714                     	;# 
  1417  0716                     	;# 
  1418  0717                     	;# 
  1419  0718                     	;# 
  1420  0719                     	;# 
  1421  071A                     	;# 
  1422  071B                     	;# 
  1423  071C                     	;# 
  1424  071D                     	;# 
  1425  071E                     	;# 
  1426  0796                     	;# 
  1427  0797                     	;# 
  1428  0798                     	;# 
  1429  0799                     	;# 
  1430  079A                     	;# 
  1431  079B                     	;# 
  1432  080C                     	;# 
  1433  080D                     	;# 
  1434  080E                     	;# 
  1435  080F                     	;# 
  1436  0810                     	;# 
  1437  0811                     	;# 
  1438  0812                     	;# 
  1439  0813                     	;# 
  1440  0814                     	;# 
  1441  081A                     	;# 
  1442  081B                     	;# 
  1443  081C                     	;# 
  1444  081D                     	;# 
  1445  081E                     	;# 
  1446  081F                     	;# 
  1447  088C                     	;# 
  1448  088D                     	;# 
  1449  088E                     	;# 
  1450  088F                     	;# 
  1451  0890                     	;# 
  1452  0891                     	;# 
  1453  0892                     	;# 
  1454  0893                     	;# 
  1455  0895                     	;# 
  1456  0896                     	;# 
  1457  0897                     	;# 
  1458  0898                     	;# 
  1459  0899                     	;# 
  1460  089A                     	;# 
  1461  089B                     	;# 
  1462  090C                     	;# 
  1463  090E                     	;# 
  1464  090F                     	;# 
  1465  091F                     	;# 
  1466  098F                     	;# 
  1467  098F                     	;# 
  1468  0990                     	;# 
  1469  0991                     	;# 
  1470  0992                     	;# 
  1471  0993                     	;# 
  1472  0994                     	;# 
  1473  0995                     	;# 
  1474  0996                     	;# 
  1475  0997                     	;# 
  1476  1E0F                     	;# 
  1477  1E10                     	;# 
  1478  1E11                     	;# 
  1479  1E12                     	;# 
  1480  1E13                     	;# 
  1481  1E14                     	;# 
  1482  1E15                     	;# 
  1483  1E16                     	;# 
  1484  1E17                     	;# 
  1485  1E18                     	;# 
  1486  1E19                     	;# 
  1487  1E1A                     	;# 
  1488  1E1B                     	;# 
  1489  1E1C                     	;# 
  1490  1E1D                     	;# 
  1491  1E1E                     	;# 
  1492  1E1F                     	;# 
  1493  1E20                     	;# 
  1494  1E21                     	;# 
  1495  1E22                     	;# 
  1496  1E23                     	;# 
  1497  1E24                     	;# 
  1498  1E25                     	;# 
  1499  1E26                     	;# 
  1500  1E27                     	;# 
  1501  1E28                     	;# 
  1502  1E29                     	;# 
  1503  1E2A                     	;# 
  1504  1E2B                     	;# 
  1505  1E2C                     	;# 
  1506  1E2D                     	;# 
  1507  1E2E                     	;# 
  1508  1E2F                     	;# 
  1509  1E30                     	;# 
  1510  1E31                     	;# 
  1511  1E32                     	;# 
  1512  1E33                     	;# 
  1513  1E34                     	;# 
  1514  1E35                     	;# 
  1515  1E36                     	;# 
  1516  1E37                     	;# 
  1517  1E8F                     	;# 
  1518  1E90                     	;# 
  1519  1E91                     	;# 
  1520  1E92                     	;# 
  1521  1E93                     	;# 
  1522  1E94                     	;# 
  1523  1E95                     	;# 
  1524  1E96                     	;# 
  1525  1E97                     	;# 
  1526  1E9C                     	;# 
  1527  1E9D                     	;# 
  1528  1E9E                     	;# 
  1529  1EA1                     	;# 
  1530  1EA2                     	;# 
  1531  1EA3                     	;# 
  1532  1EA4                     	;# 
  1533  1EA5                     	;# 
  1534  1EA9                     	;# 
  1535  1EAA                     	;# 
  1536  1EAB                     	;# 
  1537  1EAC                     	;# 
  1538  1EB1                     	;# 
  1539  1EB2                     	;# 
  1540  1EB3                     	;# 
  1541  1EB8                     	;# 
  1542  1EB9                     	;# 
  1543  1EBA                     	;# 
  1544  1EBB                     	;# 
  1545  1EBC                     	;# 
  1546  1EBD                     	;# 
  1547  1EBE                     	;# 
  1548  1EC3                     	;# 
  1549  1EC5                     	;# 
  1550  1EC6                     	;# 
  1551  1EC7                     	;# 
  1552  1EC8                     	;# 
  1553  1EC9                     	;# 
  1554  1ECA                     	;# 
  1555  1ECB                     	;# 
  1556  1ECC                     	;# 
  1557  1F10                     	;# 
  1558  1F11                     	;# 
  1559  1F12                     	;# 
  1560  1F13                     	;# 
  1561  1F14                     	;# 
  1562  1F15                     	;# 
  1563  1F16                     	;# 
  1564  1F17                     	;# 
  1565  1F18                     	;# 
  1566  1F19                     	;# 
  1567  1F1A                     	;# 
  1568  1F1B                     	;# 
  1569  1F1C                     	;# 
  1570  1F1D                     	;# 
  1571  1F1E                     	;# 
  1572  1F1F                     	;# 
  1573  1F20                     	;# 
  1574  1F21                     	;# 
  1575  1F22                     	;# 
  1576  1F23                     	;# 
  1577  1F24                     	;# 
  1578  1F25                     	;# 
  1579  1F26                     	;# 
  1580  1F27                     	;# 
  1581  1F38                     	;# 
  1582  1F39                     	;# 
  1583  1F3A                     	;# 
  1584  1F3B                     	;# 
  1585  1F3C                     	;# 
  1586  1F3D                     	;# 
  1587  1F3E                     	;# 
  1588  1F3F                     	;# 
  1589  1F40                     	;# 
  1590  1F41                     	;# 
  1591  1F43                     	;# 
  1592  1F44                     	;# 
  1593  1F45                     	;# 
  1594  1F46                     	;# 
  1595  1F47                     	;# 
  1596  1F48                     	;# 
  1597  1F49                     	;# 
  1598  1F4A                     	;# 
  1599  1F4B                     	;# 
  1600  1F4C                     	;# 
  1601  1F4E                     	;# 
  1602  1F4F                     	;# 
  1603  1F50                     	;# 
  1604  1F51                     	;# 
  1605  1F52                     	;# 
  1606  1F53                     	;# 
  1607  1F54                     	;# 
  1608  1F55                     	;# 
  1609  1F56                     	;# 
  1610  1F57                     	;# 
  1611  1F65                     	;# 
  1612  1F68                     	;# 
  1613  1F69                     	;# 
  1614  1F6A                     	;# 
  1615  1F6B                     	;# 
  1616  1FE4                     	;# 
  1617  1FE5                     	;# 
  1618  1FE6                     	;# 
  1619  1FE7                     	;# 
  1620  1FE8                     	;# 
  1621  1FE9                     	;# 
  1622  1FEA                     	;# 
  1623  1FEB                     	;# 
  1624  1FED                     	;# 
  1625  1FEE                     	;# 
  1626  1FEF                     	;# 
  1627  0000                     	;# 
  1628  0001                     	;# 
  1629  0002                     	;# 
  1630  0003                     	;# 
  1631  0004                     	;# 
  1632  0005                     	;# 
  1633  0006                     	;# 
  1634  0007                     	;# 
  1635  0008                     	;# 
  1636  0009                     	;# 
  1637  000A                     	;# 
  1638  000B                     	;# 
  1639  000C                     	;# 
  1640  000D                     	;# 
  1641  000E                     	;# 
  1642  0010                     	;# 
  1643  0011                     	;# 
  1644  0012                     	;# 
  1645  0013                     	;# 
  1646  0016                     	;# 
  1647  0017                     	;# 
  1648  0018                     	;# 
  1649  001C                     	;# 
  1650  001C                     	;# 
  1651  001D                     	;# 
  1652  001D                     	;# 
  1653  001E                     	;# 
  1654  001F                     	;# 
  1655  008C                     	;# 
  1656  008C                     	;# 
  1657  008D                     	;# 
  1658  008E                     	;# 
  1659  008E                     	;# 
  1660  008F                     	;# 
  1661  0090                     	;# 
  1662  0090                     	;# 
  1663  0091                     	;# 
  1664  0093                     	;# 
  1665  0094                     	;# 
  1666  0095                     	;# 
  1667  0096                     	;# 
  1668  0097                     	;# 
  1669  0098                     	;# 
  1670  0099                     	;# 
  1671  009A                     	;# 
  1672  009B                     	;# 
  1673  009C                     	;# 
  1674  009D                     	;# 
  1675  009E                     	;# 
  1676  010C                     	;# 
  1677  010D                     	;# 
  1678  010E                     	;# 
  1679  010E                     	;# 
  1680  010F                     	;# 
  1681  0110                     	;# 
  1682  0110                     	;# 
  1683  0111                     	;# 
  1684  0112                     	;# 
  1685  0112                     	;# 
  1686  0113                     	;# 
  1687  0114                     	;# 
  1688  0114                     	;# 
  1689  0115                     	;# 
  1690  0116                     	;# 
  1691  0116                     	;# 
  1692  0117                     	;# 
  1693  0119                     	;# 
  1694  0119                     	;# 
  1695  0119                     	;# 
  1696  011A                     	;# 
  1697  011A                     	;# 
  1698  011A                     	;# 
  1699  011B                     	;# 
  1700  011B                     	;# 
  1701  011B                     	;# 
  1702  011B                     	;# 
  1703  011B                     	;# 
  1704  011C                     	;# 
  1705  011C                     	;# 
  1706  011C                     	;# 
  1707  011D                     	;# 
  1708  011D                     	;# 
  1709  011D                     	;# 
  1710  011E                     	;# 
  1711  011E                     	;# 
  1712  011E                     	;# 
  1713  011F                     	;# 
  1714  011F                     	;# 
  1715  011F                     	;# 
  1716  011F                     	;# 
  1717  011F                     	;# 
  1718  018C                     	;# 
  1719  018D                     	;# 
  1720  018E                     	;# 
  1721  018F                     	;# 
  1722  0190                     	;# 
  1723  0191                     	;# 
  1724  0192                     	;# 
  1725  0196                     	;# 
  1726  0197                     	;# 
  1727  0198                     	;# 
  1728  0199                     	;# 
  1729  019A                     	;# 
  1730  019B                     	;# 
  1731  019C                     	;# 
  1732  020C                     	;# 
  1733  020C                     	;# 
  1734  020D                     	;# 
  1735  020E                     	;# 
  1736  020F                     	;# 
  1737  020F                     	;# 
  1738  0210                     	;# 
  1739  0210                     	;# 
  1740  0211                     	;# 
  1741  0211                     	;# 
  1742  0212                     	;# 
  1743  0212                     	;# 
  1744  0213                     	;# 
  1745  0214                     	;# 
  1746  0215                     	;# 
  1747  0215                     	;# 
  1748  0216                     	;# 
  1749  0216                     	;# 
  1750  0217                     	;# 
  1751  0217                     	;# 
  1752  0218                     	;# 
  1753  0218                     	;# 
  1754  0219                     	;# 
  1755  021A                     	;# 
  1756  021B                     	;# 
  1757  021B                     	;# 
  1758  021C                     	;# 
  1759  021C                     	;# 
  1760  021D                     	;# 
  1761  021D                     	;# 
  1762  021E                     	;# 
  1763  021F                     	;# 
  1764  028C                     	;# 
  1765  028C                     	;# 
  1766  028D                     	;# 
  1767  028D                     	;# 
  1768  028E                     	;# 
  1769  028F                     	;# 
  1770  0290                     	;# 
  1771  0290                     	;# 
  1772  0291                     	;# 
  1773  0292                     	;# 
  1774  0292                     	;# 
  1775  0293                     	;# 
  1776  0293                     	;# 
  1777  0294                     	;# 
  1778  0295                     	;# 
  1779  0296                     	;# 
  1780  0296                     	;# 
  1781  0297                     	;# 
  1782  0298                     	;# 
  1783  0298                     	;# 
  1784  0299                     	;# 
  1785  0299                     	;# 
  1786  029A                     	;# 
  1787  029B                     	;# 
  1788  029C                     	;# 
  1789  029C                     	;# 
  1790  029D                     	;# 
  1791  030C                     	;# 
  1792  030C                     	;# 
  1793  030D                     	;# 
  1794  030E                     	;# 
  1795  030F                     	;# 
  1796  0310                     	;# 
  1797  0310                     	;# 
  1798  0311                     	;# 
  1799  0312                     	;# 
  1800  0313                     	;# 
  1801  0314                     	;# 
  1802  0314                     	;# 
  1803  0315                     	;# 
  1804  0316                     	;# 
  1805  0317                     	;# 
  1806  0318                     	;# 
  1807  0318                     	;# 
  1808  0319                     	;# 
  1809  031A                     	;# 
  1810  031B                     	;# 
  1811  031C                     	;# 
  1812  031C                     	;# 
  1813  031D                     	;# 
  1814  031E                     	;# 
  1815  031F                     	;# 
  1816  038C                     	;# 
  1817  038D                     	;# 
  1818  038E                     	;# 
  1819  0390                     	;# 
  1820  0391                     	;# 
  1821  0392                     	;# 
  1822  040C                     	;# 
  1823  040D                     	;# 
  1824  040E                     	;# 
  1825  040F                     	;# 
  1826  0410                     	;# 
  1827  0411                     	;# 
  1828  0416                     	;# 
  1829  0416                     	;# 
  1830  0417                     	;# 
  1831  0418                     	;# 
  1832  0418                     	;# 
  1833  0419                     	;# 
  1834  041A                     	;# 
  1835  041A                     	;# 
  1836  041B                     	;# 
  1837  041C                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  041F                     	;# 
  1842  048C                     	;# 
  1843  048C                     	;# 
  1844  048D                     	;# 
  1845  048E                     	;# 
  1846  048F                     	;# 
  1847  048F                     	;# 
  1848  0490                     	;# 
  1849  0491                     	;# 
  1850  0492                     	;# 
  1851  0492                     	;# 
  1852  0493                     	;# 
  1853  0494                     	;# 
  1854  0495                     	;# 
  1855  0495                     	;# 
  1856  0496                     	;# 
  1857  0497                     	;# 
  1858  0498                     	;# 
  1859  0499                     	;# 
  1860  049A                     	;# 
  1861  049B                     	;# 
  1862  049C                     	;# 
  1863  049D                     	;# 
  1864  050C                     	;# 
  1865  050C                     	;# 
  1866  050D                     	;# 
  1867  050E                     	;# 
  1868  050F                     	;# 
  1869  050F                     	;# 
  1870  0510                     	;# 
  1871  0511                     	;# 
  1872  0512                     	;# 
  1873  0512                     	;# 
  1874  0513                     	;# 
  1875  0514                     	;# 
  1876  0515                     	;# 
  1877  0515                     	;# 
  1878  0516                     	;# 
  1879  0517                     	;# 
  1880  0518                     	;# 
  1881  0519                     	;# 
  1882  051A                     	;# 
  1883  051B                     	;# 
  1884  051C                     	;# 
  1885  051D                     	;# 
  1886  058C                     	;# 
  1887  058C                     	;# 
  1888  058D                     	;# 
  1889  058E                     	;# 
  1890  058F                     	;# 
  1891  058F                     	;# 
  1892  0590                     	;# 
  1893  0591                     	;# 
  1894  0592                     	;# 
  1895  0593                     	;# 
  1896  060C                     	;# 
  1897  060D                     	;# 
  1898  060E                     	;# 
  1899  060F                     	;# 
  1900  0610                     	;# 
  1901  0611                     	;# 
  1902  0612                     	;# 
  1903  0613                     	;# 
  1904  0614                     	;# 
  1905  0616                     	;# 
  1906  0617                     	;# 
  1907  0618                     	;# 
  1908  0619                     	;# 
  1909  061A                     	;# 
  1910  061B                     	;# 
  1911  061C                     	;# 
  1912  061D                     	;# 
  1913  061E                     	;# 
  1914  068C                     	;# 
  1915  068D                     	;# 
  1916  068E                     	;# 
  1917  068F                     	;# 
  1918  0690                     	;# 
  1919  0691                     	;# 
  1920  0692                     	;# 
  1921  0693                     	;# 
  1922  0694                     	;# 
  1923  070C                     	;# 
  1924  070D                     	;# 
  1925  070E                     	;# 
  1926  070F                     	;# 
  1927  0710                     	;# 
  1928  0711                     	;# 
  1929  0712                     	;# 
  1930  0713                     	;# 
  1931  0714                     	;# 
  1932  0716                     	;# 
  1933  0717                     	;# 
  1934  0718                     	;# 
  1935  0719                     	;# 
  1936  071A                     	;# 
  1937  071B                     	;# 
  1938  071C                     	;# 
  1939  071D                     	;# 
  1940  071E                     	;# 
  1941  0796                     	;# 
  1942  0797                     	;# 
  1943  0798                     	;# 
  1944  0799                     	;# 
  1945  079A                     	;# 
  1946  079B                     	;# 
  1947  080C                     	;# 
  1948  080D                     	;# 
  1949  080E                     	;# 
  1950  080F                     	;# 
  1951  0810                     	;# 
  1952  0811                     	;# 
  1953  0812                     	;# 
  1954  0813                     	;# 
  1955  0814                     	;# 
  1956  081A                     	;# 
  1957  081B                     	;# 
  1958  081C                     	;# 
  1959  081D                     	;# 
  1960  081E                     	;# 
  1961  081F                     	;# 
  1962  088C                     	;# 
  1963  088D                     	;# 
  1964  088E                     	;# 
  1965  088F                     	;# 
  1966  0890                     	;# 
  1967  0891                     	;# 
  1968  0892                     	;# 
  1969  0893                     	;# 
  1970  0895                     	;# 
  1971  0896                     	;# 
  1972  0897                     	;# 
  1973  0898                     	;# 
  1974  0899                     	;# 
  1975  089A                     	;# 
  1976  089B                     	;# 
  1977  090C                     	;# 
  1978  090E                     	;# 
  1979  090F                     	;# 
  1980  091F                     	;# 
  1981  098F                     	;# 
  1982  098F                     	;# 
  1983  0990                     	;# 
  1984  0991                     	;# 
  1985  0992                     	;# 
  1986  0993                     	;# 
  1987  0994                     	;# 
  1988  0995                     	;# 
  1989  0996                     	;# 
  1990  0997                     	;# 
  1991  1E0F                     	;# 
  1992  1E10                     	;# 
  1993  1E11                     	;# 
  1994  1E12                     	;# 
  1995  1E13                     	;# 
  1996  1E14                     	;# 
  1997  1E15                     	;# 
  1998  1E16                     	;# 
  1999  1E17                     	;# 
  2000  1E18                     	;# 
  2001  1E19                     	;# 
  2002  1E1A                     	;# 
  2003  1E1B                     	;# 
  2004  1E1C                     	;# 
  2005  1E1D                     	;# 
  2006  1E1E                     	;# 
  2007  1E1F                     	;# 
  2008  1E20                     	;# 
  2009  1E21                     	;# 
  2010  1E22                     	;# 
  2011  1E23                     	;# 
  2012  1E24                     	;# 
  2013  1E25                     	;# 
  2014  1E26                     	;# 
  2015  1E27                     	;# 
  2016  1E28                     	;# 
  2017  1E29                     	;# 
  2018  1E2A                     	;# 
  2019  1E2B                     	;# 
  2020  1E2C                     	;# 
  2021  1E2D                     	;# 
  2022  1E2E                     	;# 
  2023  1E2F                     	;# 
  2024  1E30                     	;# 
  2025  1E31                     	;# 
  2026  1E32                     	;# 
  2027  1E33                     	;# 
  2028  1E34                     	;# 
  2029  1E35                     	;# 
  2030  1E36                     	;# 
  2031  1E37                     	;# 
  2032  1E8F                     	;# 
  2033  1E90                     	;# 
  2034  1E91                     	;# 
  2035  1E92                     	;# 
  2036  1E93                     	;# 
  2037  1E94                     	;# 
  2038  1E95                     	;# 
  2039  1E96                     	;# 
  2040  1E97                     	;# 
  2041  1E9C                     	;# 
  2042  1E9D                     	;# 
  2043  1E9E                     	;# 
  2044  1EA1                     	;# 
  2045  1EA2                     	;# 
  2046  1EA3                     	;# 
  2047  1EA4                     	;# 
  2048  1EA5                     	;# 
  2049  1EA9                     	;# 
  2050  1EAA                     	;# 
  2051  1EAB                     	;# 
  2052  1EAC                     	;# 
  2053  1EB1                     	;# 
  2054  1EB2                     	;# 
  2055  1EB3                     	;# 
  2056  1EB8                     	;# 
  2057  1EB9                     	;# 
  2058  1EBA                     	;# 
  2059  1EBB                     	;# 
  2060  1EBC                     	;# 
  2061  1EBD                     	;# 
  2062  1EBE                     	;# 
  2063  1EC3                     	;# 
  2064  1EC5                     	;# 
  2065  1EC6                     	;# 
  2066  1EC7                     	;# 
  2067  1EC8                     	;# 
  2068  1EC9                     	;# 
  2069  1ECA                     	;# 
  2070  1ECB                     	;# 
  2071  1ECC                     	;# 
  2072  1F10                     	;# 
  2073  1F11                     	;# 
  2074  1F12                     	;# 
  2075  1F13                     	;# 
  2076  1F14                     	;# 
  2077  1F15                     	;# 
  2078  1F16                     	;# 
  2079  1F17                     	;# 
  2080  1F18                     	;# 
  2081  1F19                     	;# 
  2082  1F1A                     	;# 
  2083  1F1B                     	;# 
  2084  1F1C                     	;# 
  2085  1F1D                     	;# 
  2086  1F1E                     	;# 
  2087  1F1F                     	;# 
  2088  1F20                     	;# 
  2089  1F21                     	;# 
  2090  1F22                     	;# 
  2091  1F23                     	;# 
  2092  1F24                     	;# 
  2093  1F25                     	;# 
  2094  1F26                     	;# 
  2095  1F27                     	;# 
  2096  1F38                     	;# 
  2097  1F39                     	;# 
  2098  1F3A                     	;# 
  2099  1F3B                     	;# 
  2100  1F3C                     	;# 
  2101  1F3D                     	;# 
  2102  1F3E                     	;# 
  2103  1F3F                     	;# 
  2104  1F40                     	;# 
  2105  1F41                     	;# 
  2106  1F43                     	;# 
  2107  1F44                     	;# 
  2108  1F45                     	;# 
  2109  1F46                     	;# 
  2110  1F47                     	;# 
  2111  1F48                     	;# 
  2112  1F49                     	;# 
  2113  1F4A                     	;# 
  2114  1F4B                     	;# 
  2115  1F4C                     	;# 
  2116  1F4E                     	;# 
  2117  1F4F                     	;# 
  2118  1F50                     	;# 
  2119  1F51                     	;# 
  2120  1F52                     	;# 
  2121  1F53                     	;# 
  2122  1F54                     	;# 
  2123  1F55                     	;# 
  2124  1F56                     	;# 
  2125  1F57                     	;# 
  2126  1F65                     	;# 
  2127  1F68                     	;# 
  2128  1F69                     	;# 
  2129  1F6A                     	;# 
  2130  1F6B                     	;# 
  2131  1FE4                     	;# 
  2132  1FE5                     	;# 
  2133  1FE6                     	;# 
  2134  1FE7                     	;# 
  2135  1FE8                     	;# 
  2136  1FE9                     	;# 
  2137  1FEA                     	;# 
  2138  1FEB                     	;# 
  2139  1FED                     	;# 
  2140  1FEE                     	;# 
  2141  1FEF                     	;# 
  2142  000C                     _PORTAbits	set	12
  2143  000E                     _PORTCbits	set	14
  2144  001F                     _T0CON1	set	31
  2145  001E                     _T0CON0	set	30
  2146  0011                     _TRISAbits	set	17
  2147  0011                     _TRISA	set	17
  2148  0013                     _TRISC	set	19
  2149  0012                     _TRISB	set	18
  2150  0018                     _LATC	set	24
  2151  0016                     _LATA	set	22
  2152  0017                     _LATB	set	23
  2153  005F                     _GIE	set	95
  2154  008C                     _ADRESL	set	140
  2155  008D                     _ADRESH	set	141
  2156  009E                     _ADPCH	set	158
  2157  009A                     _ADREF	set	154
  2158  0093                     _ADCON0	set	147
  2159  009C                     _ADPRE	set	156
  2160  009B                     _ADCAP	set	155
  2161  0097                     _ADSTAT	set	151
  2162  0099                     _ADACT	set	153
  2163  0096                     _ADCON3	set	150
  2164  0095                     _ADCON2	set	149
  2165  0094                     _ADCON1	set	148
  2166  011A                     _TX1REG	set	282
  2167  0119                     _RC1REG	set	281
  2168  011D                     _RC1STAbits	set	285
  2169  011C                     _SP1BRGH	set	284
  2170  011B                     _SP1BRGL	set	283
  2171  011E                     _TX1STA	set	286
  2172  011D                     _RC1STA	set	285
  2173  011F                     _BAUD1CON	set	287
  2174  021E                     _CCPTMRS0	set	542
  2175  028E                     _T2CON	set	654
  2176  0290                     _T2CLKCON	set	656
  2177  028D                     _PR2	set	653
  2178  030E                     _CCP1CON	set	782
  2179  030C                     _CCPR1L	set	780
  2180  030D                     _CCPR1H	set	781
  2181  070C                     _PIR0bits	set	1804
  2182  0710                     _PIR4	set	1808
  2183  070F                     _PIR3bits	set	1807
  2184  0892                     _OSCTUNE	set	2194
  2185  0890                     _OSCSTAT	set	2192
  2186  0893                     _OSCFRQ	set	2195
  2187  0891                     _OSCEN	set	2193
  2188  088F                     _OSCCON3	set	2191
  2189  088D                     _OSCCON1	set	2189
  2190  1ECB                     _RXPPS	set	7883
  2191  1E8F                     _PPSLOCKbits	set	7823
  2192  1E8F                     _PPSLOCK	set	7823
  2193  1F38                     _ANSELAbits	set	7992
  2194  1F23                     _RC3PPS	set	7971
  2195  1F26                     _RC6PPS	set	7974
  2196  1F4E                     _ANSELC	set	8014
  2197  1F43                     _ANSELB	set	8003
  2198  1F38                     _ANSELA	set	7992
  2199  1F4F                     _WPUC	set	8015
  2200  1F44                     _WPUB	set	8004
  2201  1F39                     _WPUA	set	7993
  2202                           
  2203                           	psect	stringtext1
  2204  0800                     __pstringtext1:	
  2205  0800                     STR_11:	
  2206  0800  3473               	retlw	115	;'s'
  2207  0801  3465               	retlw	101	;'e'
  2208  0802  3474               	retlw	116	;'t'
  2209  0803  3420               	retlw	32	;' '
  2210  0804  3473               	retlw	115	;'s'
  2211  0805  3463               	retlw	99	;'c'
  2212  0806  3461               	retlw	97	;'a'
  2213  0807  346E               	retlw	110	;'n'
  2214  0808  346E               	retlw	110	;'n'
  2215  0809  3469               	retlw	105	;'i'
  2216  080A  346E               	retlw	110	;'n'
  2217  080B  3467               	retlw	103	;'g'
  2218  080C  3420               	retlw	32	;' '
  2219  080D  3474               	retlw	116	;'t'
  2220  080E  346F               	retlw	111	;'o'
  2221  080F  3420               	retlw	32	;' '
  2222  0810  3431               	retlw	49	;'1'
  2223  0811  3438               	retlw	56	;'8'
  2224  0812  3420               	retlw	32	;' '
  2225  0813  3430               	retlw	48	;'0'
  2226  0814  3464               	retlw	100	;'d'
  2227  0815  3465               	retlw	101	;'e'
  2228  0816  3467               	retlw	103	;'g'
  2229  0817  3472               	retlw	114	;'r'
  2230  0818  3465               	retlw	101	;'e'
  2231  0819  3465               	retlw	101	;'e'
  2232  081A  3473               	retlw	115	;'s'
  2233  081B  340A               	retlw	10
  2234  081C  3400               	retlw	0
  2235                           
  2236                           	psect	stringtext2
  2237  081D                     __pstringtext2:	
  2238  081D                     STR_4:	
  2239  081D  3452               	retlw	82	;'R'
  2240  081E  3445               	retlw	69	;'E'
  2241  081F  3445               	retlw	69	;'E'
  2242  0820  3445               	retlw	69	;'E'
  2243  0821  3445               	retlw	69	;'E'
  2244  0822  3445               	retlw	69	;'E'
  2245  0823  3445               	retlw	69	;'E'
  2246  0824  3445               	retlw	69	;'E'
  2247  0825  3445               	retlw	69	;'E'
  2248  0826  3445               	retlw	69	;'E'
  2249  0827  3445               	retlw	69	;'E'
  2250  0828  3445               	retlw	69	;'E'
  2251  0829  3445               	retlw	69	;'E'
  2252  082A  3445               	retlw	69	;'E'
  2253  082B  3445               	retlw	69	;'E'
  2254  082C  3445               	retlw	69	;'E'
  2255  082D  3445               	retlw	69	;'E'
  2256  082E  3445               	retlw	69	;'E'
  2257  082F  3445               	retlw	69	;'E'
  2258  0830  3445               	retlw	69	;'E'
  2259  0831  3445               	retlw	69	;'E'
  2260  0832  3445               	retlw	69	;'E'
  2261  0833  3445               	retlw	69	;'E'
  2262  0834  3445               	retlw	69	;'E'
  2263  0835  3473               	retlw	115	;'s'
  2264  0836  3465               	retlw	101	;'e'
  2265  0837  3474               	retlw	116	;'t'
  2266  0838  340A               	retlw	10
  2267  0839  3400               	retlw	0
  2268                           
  2269                           	psect	stringtext3
  2270  083A                     __pstringtext3:	
  2271  083A                     STR_10:	
  2272  083A  3473               	retlw	115	;'s'
  2273  083B  3465               	retlw	101	;'e'
  2274  083C  3474               	retlw	116	;'t'
  2275  083D  3420               	retlw	32	;' '
  2276  083E  3473               	retlw	115	;'s'
  2277  083F  3463               	retlw	99	;'c'
  2278  0840  3461               	retlw	97	;'a'
  2279  0841  346E               	retlw	110	;'n'
  2280  0842  346E               	retlw	110	;'n'
  2281  0843  3469               	retlw	105	;'i'
  2282  0844  346E               	retlw	110	;'n'
  2283  0845  3467               	retlw	103	;'g'
  2284  0846  3420               	retlw	32	;' '
  2285  0847  3474               	retlw	116	;'t'
  2286  0848  346F               	retlw	111	;'o'
  2287  0849  3420               	retlw	32	;' '
  2288  084A  3439               	retlw	57	;'9'
  2289  084B  3430               	retlw	48	;'0'
  2290  084C  3464               	retlw	100	;'d'
  2291  084D  3465               	retlw	101	;'e'
  2292  084E  3467               	retlw	103	;'g'
  2293  084F  3472               	retlw	114	;'r'
  2294  0850  3465               	retlw	101	;'e'
  2295  0851  3465               	retlw	101	;'e'
  2296  0852  3473               	retlw	115	;'s'
  2297  0853  340A               	retlw	10
  2298  0854  3400               	retlw	0
  2299                           
  2300                           	psect	stringtext4
  2301  0855                     __pstringtext4:	
  2302  0855                     STR_5:	
  2303  0855  3453               	retlw	83	;'S'
  2304  0856  3465               	retlw	101	;'e'
  2305  0857  346E               	retlw	110	;'n'
  2306  0858  3464               	retlw	100	;'d'
  2307  0859  3469               	retlw	105	;'i'
  2308  085A  346E               	retlw	110	;'n'
  2309  085B  3467               	retlw	103	;'g'
  2310  085C  3420               	retlw	32	;' '
  2311  085D  3441               	retlw	65	;'A'
  2312  085E  3444               	retlw	68	;'D'
  2313  085F  3443               	retlw	67	;'C'
  2314  0860  3420               	retlw	32	;' '
  2315  0861  3472               	retlw	114	;'r'
  2316  0862  3465               	retlw	101	;'e'
  2317  0863  3473               	retlw	115	;'s'
  2318  0864  3475               	retlw	117	;'u'
  2319  0865  346C               	retlw	108	;'l'
  2320  0866  3474               	retlw	116	;'t'
  2321  0867  3473               	retlw	115	;'s'
  2322  0868  3420               	retlw	32	;' '
  2323  0869  340A               	retlw	10
  2324  086A  3400               	retlw	0
  2325                           
  2326                           	psect	stringtext5
  2327  086B                     __pstringtext5:	
  2328  086B                     STR_1:	
  2329  086B  3449               	retlw	73	;'I'
  2330  086C  346E               	retlw	110	;'n'
  2331  086D  3469               	retlw	105	;'i'
  2332  086E  3474               	retlw	116	;'t'
  2333  086F  3469               	retlw	105	;'i'
  2334  0870  3461               	retlw	97	;'a'
  2335  0871  346C               	retlw	108	;'l'
  2336  0872  3469               	retlw	105	;'i'
  2337  0873  347A               	retlw	122	;'z'
  2338  0874  3465               	retlw	101	;'e'
  2339  0875  3464               	retlw	100	;'d'
  2340  0876  3420               	retlw	32	;' '
  2341  0877  3441               	retlw	65	;'A'
  2342  0878  3444               	retlw	68	;'D'
  2343  0879  3443               	retlw	67	;'C'
  2344  087A  340A               	retlw	10
  2345  087B  3400               	retlw	0
  2346                           
  2347                           	psect	stringtext6
  2348  087C                     __pstringtext6:	
  2349  087C                     STR_9:	
  2350  087C  3465               	retlw	101	;'e'
  2351  087D  346E               	retlw	110	;'n'
  2352  087E  3474               	retlw	116	;'t'
  2353  087F  3465               	retlw	101	;'e'
  2354  0880  3472               	retlw	114	;'r'
  2355  0881  3420               	retlw	32	;' '
  2356  0882  3473               	retlw	115	;'s'
  2357  0883  3463               	retlw	99	;'c'
  2358  0884  3461               	retlw	97	;'a'
  2359  0885  346E               	retlw	110	;'n'
  2360  0886  340A               	retlw	10
  2361  0887  3400               	retlw	0
  2362                           
  2363                           	psect	stringtext7
  2364  0888                     __pstringtext7:	
  2365  0888                     STR_8:	
  2366  0888  3473               	retlw	115	;'s'
  2367  0889  3463               	retlw	99	;'c'
  2368  088A  3461               	retlw	97	;'a'
  2369  088B  346E               	retlw	110	;'n'
  2370  088C  3420               	retlw	32	;' '
  2371  088D  3431               	retlw	49	;'1'
  2372  088E  3432               	retlw	50	;'2'
  2373  088F  3430               	retlw	48	;'0'
  2374  0890  340A               	retlw	10
  2375  0891  3400               	retlw	0
  2376                           
  2377                           	psect	stringtext8
  2378  0892                     __pstringtext8:	
  2379  0892                     STR_7:	
  2380  0892  3473               	retlw	115	;'s'
  2381  0893  3465               	retlw	101	;'e'
  2382  0894  3472               	retlw	114	;'r'
  2383  0895  3476               	retlw	118	;'v'
  2384  0896  346F               	retlw	111	;'o'
  2385  0897  3420               	retlw	32	;' '
  2386  0898  3439               	retlw	57	;'9'
  2387  0899  3430               	retlw	48	;'0'
  2388  089A  340A               	retlw	10
  2389  089B  3400               	retlw	0
  2390                           
  2391                           	psect	stringtext9
  2392  089C                     __pstringtext9:	
  2393  089C                     STR_6:	
  2394  089C  3474               	retlw	116	;'t'
  2395  089D  3475               	retlw	117	;'u'
  2396  089E  3472               	retlw	114	;'r'
  2397  089F  346E               	retlw	110	;'n'
  2398  08A0  3420               	retlw	32	;' '
  2399  08A1  3433               	retlw	51	;'3'
  2400  08A2  3430               	retlw	48	;'0'
  2401  08A3  340A               	retlw	10
  2402  08A4  3400               	retlw	0
  2403                           
  2404                           	psect	stringtext10
  2405  08A5                     __pstringtext10:	
  2406  08A5                     STR_3:	
  2407  08A5  3453               	retlw	83	;'S'
  2408  08A6  3475               	retlw	117	;'u'
  2409  08A7  3463               	retlw	99	;'c'
  2410  08A8  3463               	retlw	99	;'c'
  2411  08A9  3465               	retlw	101	;'e'
  2412  08AA  3473               	retlw	115	;'s'
  2413  08AB  3473               	retlw	115	;'s'
  2414  08AC  340A               	retlw	10
  2415  08AD  3400               	retlw	0
  2416                           
  2417                           	psect	stringtext11
  2418  08AE                     __pstringtext11:	
  2419  08AE                     STR_2:	
  2420  08AE  3450               	retlw	80	;'P'
  2421  08AF  3449               	retlw	73	;'I'
  2422  08B0  344E               	retlw	78	;'N'
  2423  08B1  3447               	retlw	71	;'G'
  2424  08B2  340A               	retlw	10
  2425  08B3  3400               	retlw	0
  2426                           
  2427                           	psect	stringtext12
  2428  0000                     __pstringtext12:	
  2429  0800                     
  2430                           ; #config settings
  2431  0000                     
  2432                           	psect	cinit
  2433  07F2                     start_initialization:	
  2434  07F2                     __initialization:	
  2435                           
  2436                           ; Clear objects allocated to BANK0
  2437  07F2  0140               	movlb	0	; select bank0
  2438  07F3  01A0               	clrf	__pbssBANK0& (0+127)
  2439  07F4  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  2440  07F5  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  2441  07F6  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  2442  07F7  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  2443  07F8  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  2444  07F9  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  2445  07FA  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  2446  07FB  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  2447  07FC  01A9               	clrf	(__pbssBANK0+9)& (0+127)
  2448  07FD                     end_of_initialization:	
  2449                           ;End of C runtime variable initialization code
  2450                           
  2451  07FD                     __end_of__initialization:	
  2452  07FD  0140               	movlb	0
  2453  07FE  3186  2EB1         	ljmp	_main	;jump to C main() function
  2454                           
  2455                           	psect	bssBANK0
  2456  0020                     __pbssBANK0:	
  2457  0020                     _scanLowerLimit:	
  2458  0020                     	ds	2
  2459  0022                     _scanUpperLimit:	
  2460  0022                     	ds	2
  2461  0024                     _isScanningUp:	
  2462  0024                     	ds	2
  2463  0026                     _scanCounter:	
  2464  0026                     	ds	2
  2465  0028                     _isScanning:	
  2466  0028                     	ds	2
  2467                           
  2468                           	psect	cstackCOMMON
  2469  0070                     __pcstackCOMMON:	
  2470  0070                     ?_PIN_MANAGER_Initialize:	
  2471  0070                     ??_PIN_MANAGER_Initialize:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_OSCILLATOR_Initialize:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ??_OSCILLATOR_Initialize:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_EUSART_Initialize:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ??_EUSART_Initialize:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_EUSART_Write:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ??_EUSART_Write:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?_putch:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_SYSTEM_Initialize:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ?_adc_init:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     ?_everything_init:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0070                     ?_wait_while_strobe:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0070                     ?_send_nibble:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0070                     ??_send_nibble:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0070                     ?_sensor_ping:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0070                     ?_sensor_reset:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0070                     ?_send_adc_results:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522  0070                     ?_turn_30:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525  0070                     ?_turn_90:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528  0070                     ?_turn_120:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531  0070                     ?_rotate_90_enable:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534  0070                     ?_rotate_180_enable:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537  0070                     ?_disable_rotate:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0070                     ?_return_bus_nibble:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543  0070                     ??_return_bus_nibble:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546  0070                     ?_receive_msg:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0070                     ?_handle_scan:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0070                     ?_main:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0070                     ?___lwdiv:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558  0070                     EUSART_Write@txData:	
  2559                           ; 2 bytes @ 0x0
  2560                           
  2561  0070                     PIN_MANAGER_Initialize@state:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564  0070                     wait_while_strobe@state:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567  0070                     ___lwdiv@divisor:	
  2568                           ; 2 bytes @ 0x0
  2569                           
  2570                           
  2571                           ; 2 bytes @ 0x0
  2572  0070                     	ds	1
  2573  0071                     ??_putch:	
  2574  0071                     ??_SYSTEM_Initialize:	
  2575                           ; 1 bytes @ 0x1
  2576                           
  2577  0071                     putch@txData:	
  2578                           ; 1 bytes @ 0x1
  2579                           
  2580                           
  2581                           ; 1 bytes @ 0x1
  2582  0071                     	ds	1
  2583  0072                     ??_wait_while_strobe:	
  2584  0072                     ?_printf:	
  2585                           ; 1 bytes @ 0x2
  2586                           
  2587  0072                     send_nibble@nibble:	
  2588                           ; 2 bytes @ 0x2
  2589                           
  2590  0072                     printf@f:	
  2591                           ; 1 bytes @ 0x2
  2592                           
  2593  0072                     ___lwdiv@dividend:	
  2594                           ; 2 bytes @ 0x2
  2595                           
  2596                           
  2597                           ; 2 bytes @ 0x2
  2598  0072                     	ds	2
  2599  0074                     ??_printf:	
  2600  0074                     ??_receive_msg:	
  2601                           ; 1 bytes @ 0x4
  2602                           
  2603  0074                     ??___lwdiv:	
  2604                           ; 1 bytes @ 0x4
  2605                           
  2606                           
  2607                           ; 1 bytes @ 0x4
  2608  0074                     	ds	1
  2609  0075                     ___lwdiv@quotient:	
  2610                           
  2611                           ; 2 bytes @ 0x5
  2612  0075                     	ds	1
  2613  0076                     receive_msg@results:	
  2614                           
  2615                           ; 2 bytes @ 0x6
  2616  0076                     	ds	1
  2617  0077                     printf@ap:	
  2618  0077                     ___lwdiv@counter:	
  2619                           ; 1 bytes @ 0x7
  2620                           
  2621                           
  2622                           ; 1 bytes @ 0x7
  2623  0077                     	ds	1
  2624  0078                     ?_set_pwm_duty:	
  2625  0078                     printf@c:	
  2626                           ; 1 bytes @ 0x8
  2627                           
  2628  0078                     set_pwm_duty@duty:	
  2629                           ; 1 bytes @ 0x8
  2630                           
  2631                           
  2632                           ; 2 bytes @ 0x8
  2633  0078                     	ds	1
  2634  0079                     ??_adc_init:	
  2635  0079                     ??_sensor_ping:	
  2636                           ; 1 bytes @ 0x9
  2637                           
  2638  0079                     ??_send_adc_results:	
  2639                           ; 1 bytes @ 0x9
  2640                           
  2641  0079                     ??_rotate_90_enable:	
  2642                           ; 1 bytes @ 0x9
  2643                           
  2644  0079                     ??_rotate_180_enable:	
  2645                           ; 1 bytes @ 0x9
  2646                           
  2647  0079                     ??_disable_rotate:	
  2648                           ; 1 bytes @ 0x9
  2649                           
  2650                           
  2651                           ; 1 bytes @ 0x9
  2652  0079                     	ds	1
  2653  007A                     ??_set_pwm_duty:	
  2654                           
  2655                           ; 1 bytes @ 0xA
  2656  007A                     	ds	2
  2657  007C                     set_pwm_duty@pr:	
  2658                           
  2659                           ; 2 bytes @ 0xC
  2660  007C                     	ds	2
  2661  007E                     ??_everything_init:	
  2662  007E                     ??_sensor_reset:	
  2663                           ; 1 bytes @ 0xE
  2664                           
  2665  007E                     ??_turn_30:	
  2666                           ; 1 bytes @ 0xE
  2667                           
  2668  007E                     ??_turn_90:	
  2669                           ; 1 bytes @ 0xE
  2670                           
  2671  007E                     ??_turn_120:	
  2672                           ; 1 bytes @ 0xE
  2673                           
  2674                           
  2675                           	psect	cstackBANK0
  2676  002A                     __pcstackBANK0:	
  2677                           ; 1 bytes @ 0xE
  2678                           
  2679  002A                     ??_handle_scan:	
  2680  002A                     send_adc_results@nib1:	
  2681                           ; 1 bytes @ 0x0
  2682                           
  2683                           
  2684                           ; 1 bytes @ 0x0
  2685  002A                     	ds	1
  2686  002B                     send_adc_results@nib2:	
  2687                           
  2688                           ; 1 bytes @ 0x1
  2689  002B                     	ds	1
  2690  002C                     send_adc_results@nib3:	
  2691                           
  2692                           ; 1 bytes @ 0x2
  2693  002C                     	ds	1
  2694  002D                     send_adc_results@results:	
  2695                           
  2696                           ; 2 bytes @ 0x3
  2697  002D                     	ds	2
  2698  002F                     ??_main:	
  2699                           
  2700                           ; 1 bytes @ 0x5
  2701  002F                     	ds	2
  2702  0031                     main@msg:	
  2703                           
  2704                           ; 1 bytes @ 0x7
  2705  0031                     	ds	1
  2706                           
  2707                           	psect	maintext
  2708  06B1                     __pmaintext:	
  2709 ;;
  2710 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2711 ;;
  2712 ;; *************** function _main *****************
  2713 ;; Defined at:
  2714 ;;		line 422 in file "main.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  msg             1    7[BANK0 ] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : B3F/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2731 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2732 ;;Total ram usage:        3 bytes
  2733 ;; Hardware stack levels required when called:    5
  2734 ;; This function calls:
  2735 ;;		_SYSTEM_Initialize
  2736 ;;		_disable_rotate
  2737 ;;		_everything_init
  2738 ;;		_handle_scan
  2739 ;;		_receive_msg
  2740 ;;		_rotate_180_enable
  2741 ;;		_rotate_90_enable
  2742 ;;		_send_adc_results
  2743 ;;		_sensor_ping
  2744 ;;		_sensor_reset
  2745 ;;		_set_pwm_duty
  2746 ;;		_turn_120
  2747 ;;		_turn_30
  2748 ;;		_turn_90
  2749 ;; This function is called by:
  2750 ;;		Startup code after reset
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _main
  2756  06B1                     _main:	
  2757                           
  2758                           ;main.c: 425: SYSTEM_Initialize();
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2762  06B1  3183  2368  3186   	fcall	_SYSTEM_Initialize
  2763                           
  2764                           ;main.c: 426: everything_init();
  2765  06B4  3184  2432  3186   	fcall	_everything_init
  2766                           
  2767                           ;main.c: 429: unsigned char msg = 0xF;
  2768  06B7  300F               	movlw	15
  2769  06B8  0140               	movlb	0	; select bank0
  2770  06B9  00AF               	movwf	??_main
  2771  06BA  082F               	movf	??_main,w
  2772  06BB  00B1               	movwf	main@msg
  2773                           
  2774                           ;main.c: 430: set_pwm_duty(50);
  2775  06BC  3032               	movlw	50
  2776  06BD  00F8               	movwf	set_pwm_duty@duty
  2777  06BE  3000               	movlw	0
  2778  06BF  00F9               	movwf	set_pwm_duty@duty+1
  2779  06C0  3183  23EC  3186   	fcall	_set_pwm_duty
  2780                           
  2781                           ;main.c: 431: isScanning = 0;
  2782  06C3  0140               	movlb	0	; select bank0
  2783  06C4  01A8               	clrf	_isScanning
  2784  06C5  01A9               	clrf	_isScanning+1
  2785                           
  2786                           ;main.c: 432: scanCounter = 50;
  2787  06C6  3032               	movlw	50
  2788  06C7  00A6               	movwf	_scanCounter
  2789  06C8  3000               	movlw	0
  2790  06C9  00A7               	movwf	_scanCounter+1
  2791                           
  2792                           ;main.c: 433: scanUpperLimit = 75;
  2793  06CA  304B               	movlw	75
  2794  06CB  00A2               	movwf	_scanUpperLimit
  2795  06CC  3000               	movlw	0
  2796  06CD  00A3               	movwf	_scanUpperLimit+1
  2797                           
  2798                           ;main.c: 434: scanLowerLimit = 25;
  2799  06CE  3019               	movlw	25
  2800  06CF  00A0               	movwf	_scanLowerLimit
  2801  06D0  3000               	movlw	0
  2802  06D1  00A1               	movwf	_scanLowerLimit+1
  2803                           
  2804                           ;main.c: 439: PORTAbits.RA0 = 1;
  2805  06D2  140C               	bsf	12,0	;volatile
  2806                           
  2807                           ;main.c: 440: _delay((unsigned long)((1000)*(1000000/4000.0)));
  2808  06D3  3002               	movlw	2
  2809  06D4  0140               	movlb	0	; select bank0
  2810  06D5  00B0               	movwf	??_main+1
  2811  06D6  3045               	movlw	69
  2812  06D7  00AF               	movwf	??_main
  2813  06D8  30A9               	movlw	169
  2814  06D9                     u737:	
  2815  06D9  0B89               	decfsz	9,f
  2816  06DA  2ED9               	goto	u737
  2817  06DB  0BAF               	decfsz	??_main,f
  2818  06DC  2ED9               	goto	u737
  2819  06DD  0BB0               	decfsz	??_main+1,f
  2820  06DE  2ED9               	goto	u737
  2821  06DF  3200               	nop2
  2822                           
  2823                           ;main.c: 441: PORTAbits.RA0 = 0;
  2824  06E0  0140               	movlb	0	; select bank0
  2825  06E1  100C               	bcf	12,0	;volatile
  2826  06E2                     l1648:	
  2827                           ;main.c: 442: while(1)
  2828                           
  2829                           
  2830                           ;main.c: 443: {
  2831                           ;main.c: 445: if(isScanning)
  2832  06E2  0140               	movlb	0	; select bank0
  2833  06E3  0828               	movf	_isScanning,w
  2834  06E4  0429               	iorwf	_isScanning+1,w
  2835  06E5  1903               	btfsc	3,2
  2836  06E6  2EEC               	goto	l256
  2837                           
  2838                           ;main.c: 446: {
  2839                           ;main.c: 447: PORTAbits.RA0 = 1;
  2840  06E7  140C               	bsf	12,0	;volatile
  2841                           
  2842                           ;main.c: 448: handle_scan();
  2843  06E8  3186  2675  3186   	fcall	_handle_scan
  2844                           
  2845                           ;main.c: 449: }
  2846  06EB  2EED               	goto	l1654
  2847  06EC                     l256:	
  2848                           
  2849                           ;main.c: 450: else
  2850                           ;main.c: 451: {
  2851                           ;main.c: 452: PORTAbits.RA0 = 0;
  2852  06EC  100C               	bcf	12,0	;volatile
  2853  06ED                     l1654:	
  2854                           
  2855                           ;main.c: 453: }
  2856                           ;main.c: 456: msg = receive_msg();
  2857  06ED  3184  240E  3186   	fcall	_receive_msg
  2858  06F0  0140               	movlb	0	; select bank0
  2859  06F1  00AF               	movwf	??_main
  2860  06F2  082F               	movf	??_main,w
  2861  06F3  00B1               	movwf	main@msg
  2862                           
  2863                           ;main.c: 458: if(msg == 0x0) {
  2864  06F4  0831               	movf	main@msg,w
  2865  06F5  1D03               	btfss	3,2
  2866  06F6  2EFB               	goto	l1660
  2867                           
  2868                           ;main.c: 459: sensor_reset();
  2869  06F7  3186  263A  3186   	fcall	_sensor_reset
  2870                           
  2871                           ;main.c: 460: } else if(msg == 0x1) {
  2872  06FA  2EE2               	goto	l1648
  2873  06FB                     l1660:	
  2874  06FB  0140               	movlb	0	; select bank0
  2875  06FC  0331               	decf	main@msg,w
  2876  06FD  1D03               	btfss	3,2
  2877  06FE  2F03               	goto	l1664
  2878                           
  2879                           ;main.c: 461: sensor_ping();
  2880  06FF  3184  2481  3186   	fcall	_sensor_ping
  2881                           
  2882                           ;main.c: 462: } else if(msg == 0x2) {
  2883  0702  2EE2               	goto	l1648
  2884  0703                     l1664:	
  2885  0703  3002               	movlw	2
  2886  0704  0140               	movlb	0	; select bank0
  2887  0705  0631               	xorwf	main@msg,w
  2888  0706  1D03               	btfss	3,2
  2889  0707  2F0C               	goto	l1668
  2890                           
  2891                           ;main.c: 463: send_adc_results();
  2892  0708  3187  274B  3186   	fcall	_send_adc_results
  2893                           
  2894                           ;main.c: 464: } else if(msg == 0x3) {
  2895  070B  2EE2               	goto	l1648
  2896  070C                     l1668:	
  2897  070C  3003               	movlw	3
  2898  070D  0140               	movlb	0	; select bank0
  2899  070E  0631               	xorwf	main@msg,w
  2900  070F  1D03               	btfss	3,2
  2901  0710  2F15               	goto	l1672
  2902                           
  2903                           ;main.c: 465: turn_30();
  2904  0711  3184  24DB  3186   	fcall	_turn_30
  2905                           
  2906                           ;main.c: 466: } else if(msg == 0x4) {
  2907  0714  2EE2               	goto	l1648
  2908  0715                     l1672:	
  2909  0715  3004               	movlw	4
  2910  0716  0140               	movlb	0	; select bank0
  2911  0717  0631               	xorwf	main@msg,w
  2912  0718  1D03               	btfss	3,2
  2913  0719  2F1E               	goto	l1676
  2914                           
  2915                           ;main.c: 467: turn_90();
  2916  071A  3185  250A  3186   	fcall	_turn_90
  2917                           
  2918                           ;main.c: 468: } else if(msg == 0x5) {
  2919  071D  2EE2               	goto	l1648
  2920  071E                     l1676:	
  2921  071E  3005               	movlw	5
  2922  071F  0140               	movlb	0	; select bank0
  2923  0720  0631               	xorwf	main@msg,w
  2924  0721  1D03               	btfss	3,2
  2925  0722  2F27               	goto	l1680
  2926                           
  2927                           ;main.c: 469: turn_120();
  2928  0723  3184  24AD  3186   	fcall	_turn_120
  2929                           
  2930                           ;main.c: 470: } else if(msg == 0x6) {
  2931  0726  2EE2               	goto	l1648
  2932  0727                     l1680:	
  2933  0727  3006               	movlw	6
  2934  0728  0140               	movlb	0	; select bank0
  2935  0729  0631               	xorwf	main@msg,w
  2936  072A  1D03               	btfss	3,2
  2937  072B  2F30               	goto	l1684
  2938                           
  2939                           ;main.c: 471: rotate_90_enable();
  2940  072C  3185  2569  3186   	fcall	_rotate_90_enable
  2941                           
  2942                           ;main.c: 472: } else if(msg == 0x7) {
  2943  072F  2EE2               	goto	l1648
  2944  0730                     l1684:	
  2945  0730  3007               	movlw	7
  2946  0731  0140               	movlb	0	; select bank0
  2947  0732  0631               	xorwf	main@msg,w
  2948  0733  1D03               	btfss	3,2
  2949  0734  2F39               	goto	l1688
  2950                           
  2951                           ;main.c: 473: rotate_180_enable();
  2952  0735  3185  2539  3186   	fcall	_rotate_180_enable
  2953                           
  2954                           ;main.c: 474: } else if(msg == 0x8) {
  2955  0738  2EE2               	goto	l1648
  2956  0739                     l1688:	
  2957  0739  3008               	movlw	8
  2958  073A  0140               	movlb	0	; select bank0
  2959  073B  0631               	xorwf	main@msg,w
  2960  073C  1D03               	btfss	3,2
  2961  073D  2F42               	goto	l1692
  2962                           
  2963                           ;main.c: 475: disable_rotate();
  2964  073E  3184  2459  3186   	fcall	_disable_rotate
  2965                           
  2966                           ;main.c: 476: } else if(msg == 0x9) {
  2967  0741  2EE2               	goto	l1648
  2968  0742                     l1692:	
  2969  0742  3009               	movlw	9
  2970  0743  0140               	movlb	0	; select bank0
  2971  0744  0631               	xorwf	main@msg,w
  2972  0745  1D03               	btfss	3,2
  2973  0746  2EE2               	goto	l1648
  2974                           
  2975                           ;main.c: 477: disable_rotate();
  2976  0747  3184  2459  3186   	fcall	_disable_rotate
  2977                           
  2978                           ;main.c: 478: } else {
  2979  074A  2EE2               	goto	l1648
  2980  074B                     __end_of_main:	
  2981                           
  2982                           	psect	text1
  2983  050A                     __ptext1:	
  2984 ;; *************** function _turn_90 *****************
  2985 ;; Defined at:
  2986 ;;		line 250 in file "main.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    3
  3007 ;; This function calls:
  3008 ;;		_printf
  3009 ;;		_send_nibble
  3010 ;;		_set_pwm_duty
  3011 ;;		_wait_while_strobe
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function _turn_90
  3019  050A                     _turn_90:	
  3020                           
  3021                           ;main.c: 252: printf("servo 90\n");
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in _turn_90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3025  050A  3092               	movlw	low (STR_7| (0+32768))
  3026  050B  00F2               	movwf	printf@f
  3027  050C  3088               	movlw	high (STR_7| (0+32768))
  3028  050D  00F3               	movwf	printf@f+1
  3029  050E  3183  2396  3185   	fcall	_printf
  3030                           
  3031                           ;main.c: 253: wait_while_strobe(1);
  3032  0511  3001               	movlw	1
  3033  0512  00F0               	movwf	wait_while_strobe@state
  3034  0513  3000               	movlw	0
  3035  0514  00F1               	movwf	wait_while_strobe@state+1
  3036  0515  3183  2386  3185   	fcall	_wait_while_strobe
  3037                           
  3038                           ;main.c: 256: set_pwm_duty(100);
  3039  0518  3064               	movlw	100
  3040  0519  00F8               	movwf	set_pwm_duty@duty
  3041  051A  3000               	movlw	0
  3042  051B  00F9               	movwf	set_pwm_duty@duty+1
  3043  051C  3183  23EC  3185   	fcall	_set_pwm_duty
  3044                           
  3045                           ;main.c: 257: isScanning = 0;
  3046  051F  0140               	movlb	0	; select bank0
  3047  0520  01A8               	clrf	_isScanning
  3048  0521  01A9               	clrf	_isScanning+1
  3049                           
  3050                           ;main.c: 261: send_nibble(0xE);
  3051  0522  300E               	movlw	14
  3052  0523  3186  2602  3185   	fcall	_send_nibble
  3053                           
  3054                           ;main.c: 263: wait_while_strobe(0);
  3055  0526  3000               	movlw	0
  3056  0527  00F0               	movwf	wait_while_strobe@state
  3057  0528  00F1               	movwf	wait_while_strobe@state+1
  3058  0529  3183  2386  3185   	fcall	_wait_while_strobe
  3059                           
  3060                           ;main.c: 264: wait_while_strobe(1);
  3061  052C  3001               	movlw	1
  3062  052D  00F0               	movwf	wait_while_strobe@state
  3063  052E  3000               	movlw	0
  3064  052F  00F1               	movwf	wait_while_strobe@state+1
  3065  0530  3183  2386  3185   	fcall	_wait_while_strobe
  3066                           
  3067                           ;main.c: 265: wait_while_strobe(0);
  3068  0533  3000               	movlw	0
  3069  0534  00F0               	movwf	wait_while_strobe@state
  3070  0535  00F1               	movwf	wait_while_strobe@state+1
  3071  0536  3183  2386         	fcall	_wait_while_strobe
  3072  0538  0008               	return
  3073  0539                     __end_of_turn_90:	
  3074                           
  3075                           	psect	text2
  3076  04DB                     __ptext2:	
  3077 ;; *************** function _turn_30 *****************
  3078 ;; Defined at:
  3079 ;;		line 231 in file "main.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    3
  3100 ;; This function calls:
  3101 ;;		_printf
  3102 ;;		_send_nibble
  3103 ;;		_set_pwm_duty
  3104 ;;		_wait_while_strobe
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _turn_30
  3112  04DB                     _turn_30:	
  3113                           
  3114                           ;main.c: 233: printf("turn 30\n");
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _turn_30: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3118  04DB  309C               	movlw	low (STR_6| (0+32768))
  3119  04DC  00F2               	movwf	printf@f
  3120  04DD  3088               	movlw	high (STR_6| (0+32768))
  3121  04DE  00F3               	movwf	printf@f+1
  3122  04DF  3183  2396  3184   	fcall	_printf
  3123                           
  3124                           ;main.c: 234: wait_while_strobe(1);
  3125  04E2  3001               	movlw	1
  3126  04E3  00F0               	movwf	wait_while_strobe@state
  3127  04E4  3000               	movlw	0
  3128  04E5  00F1               	movwf	wait_while_strobe@state+1
  3129  04E6  3183  2386  3184   	fcall	_wait_while_strobe
  3130                           
  3131                           ;main.c: 237: set_pwm_duty(75);
  3132  04E9  304B               	movlw	75
  3133  04EA  00F8               	movwf	set_pwm_duty@duty
  3134  04EB  3000               	movlw	0
  3135  04EC  00F9               	movwf	set_pwm_duty@duty+1
  3136  04ED  3183  23EC  3184   	fcall	_set_pwm_duty
  3137                           
  3138                           ;main.c: 238: isScanning = 0;
  3139  04F0  0140               	movlb	0	; select bank0
  3140  04F1  01A8               	clrf	_isScanning
  3141  04F2  01A9               	clrf	_isScanning+1
  3142                           
  3143                           ;main.c: 242: send_nibble(0xE);
  3144  04F3  300E               	movlw	14
  3145  04F4  3186  2602  3184   	fcall	_send_nibble
  3146                           
  3147                           ;main.c: 244: wait_while_strobe(0);
  3148  04F7  3000               	movlw	0
  3149  04F8  00F0               	movwf	wait_while_strobe@state
  3150  04F9  00F1               	movwf	wait_while_strobe@state+1
  3151  04FA  3183  2386  3184   	fcall	_wait_while_strobe
  3152                           
  3153                           ;main.c: 245: wait_while_strobe(1);
  3154  04FD  3001               	movlw	1
  3155  04FE  00F0               	movwf	wait_while_strobe@state
  3156  04FF  3000               	movlw	0
  3157  0500  00F1               	movwf	wait_while_strobe@state+1
  3158  0501  3183  2386  3184   	fcall	_wait_while_strobe
  3159                           
  3160                           ;main.c: 246: wait_while_strobe(0);
  3161  0504  3000               	movlw	0
  3162  0505  00F0               	movwf	wait_while_strobe@state
  3163  0506  00F1               	movwf	wait_while_strobe@state+1
  3164  0507  3183  2386         	fcall	_wait_while_strobe
  3165  0509  0008               	return
  3166  050A                     __end_of_turn_30:	
  3167                           
  3168                           	psect	text3
  3169  04AD                     __ptext3:	
  3170 ;; *************** function _turn_120 *****************
  3171 ;; Defined at:
  3172 ;;		line 269 in file "main.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    3
  3193 ;; This function calls:
  3194 ;;		_printf
  3195 ;;		_send_nibble
  3196 ;;		_set_pwm_duty
  3197 ;;		_wait_while_strobe
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function _turn_120
  3205  04AD                     _turn_120:	
  3206                           
  3207                           ;main.c: 271: printf("scan 120\n");
  3208                           
  3209                           ;incstack = 0
  3210                           ; Regs used in _turn_120: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3211  04AD  3088               	movlw	low (STR_8| (0+32768))
  3212  04AE  00F2               	movwf	printf@f
  3213  04AF  3088               	movlw	high (STR_8| (0+32768))
  3214  04B0  00F3               	movwf	printf@f+1
  3215  04B1  3183  2396  3184   	fcall	_printf
  3216                           
  3217                           ;main.c: 272: wait_while_strobe(1);
  3218  04B4  3001               	movlw	1
  3219  04B5  00F0               	movwf	wait_while_strobe@state
  3220  04B6  3000               	movlw	0
  3221  04B7  00F1               	movwf	wait_while_strobe@state+1
  3222  04B8  3183  2386  3184   	fcall	_wait_while_strobe
  3223                           
  3224                           ;main.c: 275: set_pwm_duty(0);
  3225  04BB  3000               	movlw	0
  3226  04BC  00F8               	movwf	set_pwm_duty@duty
  3227  04BD  00F9               	movwf	set_pwm_duty@duty+1
  3228  04BE  3183  23EC  3184   	fcall	_set_pwm_duty
  3229                           
  3230                           ;main.c: 276: isScanning = 0;
  3231  04C1  0140               	movlb	0	; select bank0
  3232  04C2  01A8               	clrf	_isScanning
  3233  04C3  01A9               	clrf	_isScanning+1
  3234                           
  3235                           ;main.c: 280: send_nibble(0xE);
  3236  04C4  300E               	movlw	14
  3237  04C5  3186  2602  3184   	fcall	_send_nibble
  3238                           
  3239                           ;main.c: 282: wait_while_strobe(0);
  3240  04C8  3000               	movlw	0
  3241  04C9  00F0               	movwf	wait_while_strobe@state
  3242  04CA  00F1               	movwf	wait_while_strobe@state+1
  3243  04CB  3183  2386  3184   	fcall	_wait_while_strobe
  3244                           
  3245                           ;main.c: 283: wait_while_strobe(1);
  3246  04CE  3001               	movlw	1
  3247  04CF  00F0               	movwf	wait_while_strobe@state
  3248  04D0  3000               	movlw	0
  3249  04D1  00F1               	movwf	wait_while_strobe@state+1
  3250  04D2  3183  2386  3184   	fcall	_wait_while_strobe
  3251                           
  3252                           ;main.c: 284: wait_while_strobe(0);
  3253  04D5  3000               	movlw	0
  3254  04D6  00F0               	movwf	wait_while_strobe@state
  3255  04D7  00F1               	movwf	wait_while_strobe@state+1
  3256  04D8  3183  2386         	fcall	_wait_while_strobe
  3257  04DA  0008               	return
  3258  04DB                     __end_of_turn_120:	
  3259                           
  3260                           	psect	text4
  3261  063A                     __ptext4:	
  3262 ;; *************** function _sensor_reset *****************
  3263 ;; Defined at:
  3264 ;;		line 159 in file "main.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		_printf
  3287 ;;		_send_nibble
  3288 ;;		_set_pwm_duty
  3289 ;;		_wait_while_strobe
  3290 ;; This function is called by:
  3291 ;;		_main
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           
  3296                           ;psect for function _sensor_reset
  3297  063A                     _sensor_reset:	
  3298                           
  3299                           ;main.c: 161: printf("REEEEEEEEEEEEEEEEEEEEEEEset\n");
  3300                           
  3301                           ;incstack = 0
  3302                           ; Regs used in _sensor_reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3303  063A  301D               	movlw	low (STR_4| (0+32768))
  3304  063B  00F2               	movwf	printf@f
  3305  063C  3088               	movlw	high (STR_4| (0+32768))
  3306  063D  00F3               	movwf	printf@f+1
  3307  063E  3183  2396  3186   	fcall	_printf
  3308                           
  3309                           ;main.c: 162: wait_while_strobe(1);
  3310  0641  3001               	movlw	1
  3311  0642  00F0               	movwf	wait_while_strobe@state
  3312  0643  3000               	movlw	0
  3313  0644  00F1               	movwf	wait_while_strobe@state+1
  3314  0645  3183  2386  3186   	fcall	_wait_while_strobe
  3315                           
  3316                           ;main.c: 165: set_pwm_duty(50);
  3317  0648  3032               	movlw	50
  3318  0649  00F8               	movwf	set_pwm_duty@duty
  3319  064A  3000               	movlw	0
  3320  064B  00F9               	movwf	set_pwm_duty@duty+1
  3321  064C  3183  23EC  3186   	fcall	_set_pwm_duty
  3322                           
  3323                           ;main.c: 166: isScanning = 0;
  3324  064F  0140               	movlb	0	; select bank0
  3325  0650  01A8               	clrf	_isScanning
  3326  0651  01A9               	clrf	_isScanning+1
  3327                           
  3328                           ;main.c: 167: scanCounter = 50;
  3329  0652  3032               	movlw	50
  3330  0653  00A6               	movwf	_scanCounter
  3331  0654  3000               	movlw	0
  3332  0655  00A7               	movwf	_scanCounter+1
  3333                           
  3334                           ;main.c: 168: scanUpperLimit = 75;
  3335  0656  304B               	movlw	75
  3336  0657  00A2               	movwf	_scanUpperLimit
  3337  0658  3000               	movlw	0
  3338  0659  00A3               	movwf	_scanUpperLimit+1
  3339                           
  3340                           ;main.c: 169: scanLowerLimit = 25;
  3341  065A  3019               	movlw	25
  3342  065B  00A0               	movwf	_scanLowerLimit
  3343  065C  3000               	movlw	0
  3344  065D  00A1               	movwf	_scanLowerLimit+1
  3345                           
  3346                           ;main.c: 173: send_nibble(0xE);
  3347  065E  300E               	movlw	14
  3348  065F  3186  2602  3186   	fcall	_send_nibble
  3349                           
  3350                           ;main.c: 175: wait_while_strobe(0);
  3351  0662  3000               	movlw	0
  3352  0663  00F0               	movwf	wait_while_strobe@state
  3353  0664  00F1               	movwf	wait_while_strobe@state+1
  3354  0665  3183  2386  3186   	fcall	_wait_while_strobe
  3355                           
  3356                           ;main.c: 176: wait_while_strobe(1);
  3357  0668  3001               	movlw	1
  3358  0669  00F0               	movwf	wait_while_strobe@state
  3359  066A  3000               	movlw	0
  3360  066B  00F1               	movwf	wait_while_strobe@state+1
  3361  066C  3183  2386  3186   	fcall	_wait_while_strobe
  3362                           
  3363                           ;main.c: 177: wait_while_strobe(0);
  3364  066F  3000               	movlw	0
  3365  0670  00F0               	movwf	wait_while_strobe@state
  3366  0671  00F1               	movwf	wait_while_strobe@state+1
  3367  0672  3183  2386         	fcall	_wait_while_strobe
  3368  0674  0008               	return
  3369  0675                     __end_of_sensor_reset:	
  3370                           
  3371                           	psect	text5
  3372  0481                     __ptext5:	
  3373 ;; *************** function _sensor_ping *****************
  3374 ;; Defined at:
  3375 ;;		line 144 in file "main.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		_printf
  3398 ;;		_send_nibble
  3399 ;;		_wait_while_strobe
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           
  3406                           ;psect for function _sensor_ping
  3407  0481                     _sensor_ping:	
  3408                           
  3409                           ;main.c: 146: printf("PING\n");
  3410                           
  3411                           ;incstack = 0
  3412                           ; Regs used in _sensor_ping: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3413  0481  30AE               	movlw	low (STR_2| (0+32768))
  3414  0482  00F2               	movwf	printf@f
  3415  0483  3088               	movlw	high (STR_2| (0+32768))
  3416  0484  00F3               	movwf	printf@f+1
  3417  0485  3183  2396  3184   	fcall	_printf
  3418                           
  3419                           ;main.c: 147: wait_while_strobe(1);
  3420  0488  3001               	movlw	1
  3421  0489  00F0               	movwf	wait_while_strobe@state
  3422  048A  3000               	movlw	0
  3423  048B  00F1               	movwf	wait_while_strobe@state+1
  3424  048C  3183  2386  3184   	fcall	_wait_while_strobe
  3425                           
  3426                           ;main.c: 150: send_nibble(0xE);
  3427  048F  300E               	movlw	14
  3428  0490  3186  2602  3184   	fcall	_send_nibble
  3429                           
  3430                           ;main.c: 152: wait_while_strobe(0);
  3431  0493  3000               	movlw	0
  3432  0494  00F0               	movwf	wait_while_strobe@state
  3433  0495  00F1               	movwf	wait_while_strobe@state+1
  3434  0496  3183  2386  3184   	fcall	_wait_while_strobe
  3435                           
  3436                           ;main.c: 153: wait_while_strobe(1);
  3437  0499  3001               	movlw	1
  3438  049A  00F0               	movwf	wait_while_strobe@state
  3439  049B  3000               	movlw	0
  3440  049C  00F1               	movwf	wait_while_strobe@state+1
  3441  049D  3183  2386  3184   	fcall	_wait_while_strobe
  3442                           
  3443                           ;main.c: 154: wait_while_strobe(0);
  3444  04A0  3000               	movlw	0
  3445  04A1  00F0               	movwf	wait_while_strobe@state
  3446  04A2  00F1               	movwf	wait_while_strobe@state+1
  3447  04A3  3183  2386  3184   	fcall	_wait_while_strobe
  3448                           
  3449                           ;main.c: 155: printf("Success\n");
  3450  04A6  30A5               	movlw	low (STR_3| (0+32768))
  3451  04A7  00F2               	movwf	printf@f
  3452  04A8  3088               	movlw	high (STR_3| (0+32768))
  3453  04A9  00F3               	movwf	printf@f+1
  3454  04AA  3183  2396         	fcall	_printf
  3455  04AC  0008               	return
  3456  04AD                     __end_of_sensor_ping:	
  3457                           
  3458                           	psect	text6
  3459  074B                     __ptext6:	
  3460 ;; *************** function _send_adc_results *****************
  3461 ;; Defined at:
  3462 ;;		line 181 in file "main.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  results         2    3[BANK0 ] unsigned int 
  3467 ;;  nib3            1    2[BANK0 ] unsigned char 
  3468 ;;  nib2            1    1[BANK0 ] unsigned char 
  3469 ;;  nib1            1    0[BANK0 ] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3480 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3481 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3482 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3483 ;;Total ram usage:        8 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    3
  3486 ;; This function calls:
  3487 ;;		_printf
  3488 ;;		_send_nibble
  3489 ;;		_wait_while_strobe
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _send_adc_results
  3497  074B                     _send_adc_results:	
  3498                           
  3499                           ;main.c: 183: printf("Sending ADC results \n");
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _send_adc_results: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3503  074B  3055               	movlw	low (STR_5| (0+32768))
  3504  074C  00F2               	movwf	printf@f
  3505  074D  3088               	movlw	high (STR_5| (0+32768))
  3506  074E  00F3               	movwf	printf@f+1
  3507  074F  3183  2396  3187   	fcall	_printf
  3508                           
  3509                           ;main.c: 184: unsigned results;
  3510                           ;main.c: 185: unsigned char nib1, nib2, nib3;
  3511                           ;main.c: 188: ADPCH = 1;
  3512  0752  3001               	movlw	1
  3513  0753  0141               	movlb	1	; select bank1
  3514  0754  009E               	movwf	30	;volatile
  3515                           
  3516                           ;main.c: 189: ADCON0 |= 1;
  3517  0755  1413               	bsf	19,0	;volatile
  3518  0756                     l208:	
  3519                           ;main.c: 190: while(ADCON0 & 1);
  3520                           
  3521  0756  1813               	btfsc	19,0	;volatile
  3522  0757  2F56               	goto	l208
  3523                           
  3524                           ;main.c: 191: results = (unsigned) ((ADRESH << 8) + ADRESL);
  3525  0758  080D               	movf	13,w	;volatile
  3526  0759  0140               	movlb	0	; select bank0
  3527  075A  00AE               	movwf	send_adc_results@results+1
  3528  075B  0141               	movlb	1	; select bank1
  3529  075C  080C               	movf	12,w	;volatile
  3530  075D  0140               	movlb	0	; select bank0
  3531  075E  00AD               	movwf	send_adc_results@results
  3532                           
  3533                           ;main.c: 193: nib1 = (results & 0x300) >> 8;
  3534  075F  082E               	movf	send_adc_results@results+1,w
  3535  0760  3903               	andlw	3
  3536  0761  00F9               	movwf	??_send_adc_results
  3537  0762  0879               	movf	??_send_adc_results,w
  3538  0763  00AA               	movwf	send_adc_results@nib1
  3539                           
  3540                           ;main.c: 194: nib2 = (results & 0x0F0) >> 4;
  3541  0764  082E               	movf	send_adc_results@results+1,w
  3542  0765  00FA               	movwf	??_send_adc_results+1
  3543  0766  082D               	movf	send_adc_results@results,w
  3544  0767  00F9               	movwf	??_send_adc_results
  3545  0768  3004               	movlw	4
  3546  0769                     u555:	
  3547  0769  36FA               	lsrf	??_send_adc_results+1,f
  3548  076A  0CF9               	rrf	??_send_adc_results,f
  3549  076B  0B89               	decfsz	9,f
  3550  076C  2F69               	goto	u555
  3551  076D  0879               	movf	??_send_adc_results,w
  3552  076E  390F               	andlw	15
  3553  076F  00FB               	movwf	??_send_adc_results+2
  3554  0770  087B               	movf	??_send_adc_results+2,w
  3555  0771  00AB               	movwf	send_adc_results@nib2
  3556                           
  3557                           ;main.c: 195: nib3 = (results & 0x00F);
  3558  0772  082D               	movf	send_adc_results@results,w
  3559  0773  390F               	andlw	15
  3560  0774  00F9               	movwf	??_send_adc_results
  3561  0775  0879               	movf	??_send_adc_results,w
  3562  0776  00AC               	movwf	send_adc_results@nib3
  3563                           
  3564                           ;main.c: 197: wait_while_strobe(1);
  3565  0777  3001               	movlw	1
  3566  0778  00F0               	movwf	wait_while_strobe@state
  3567  0779  3000               	movlw	0
  3568  077A  00F1               	movwf	wait_while_strobe@state+1
  3569  077B  3183  2386  3187   	fcall	_wait_while_strobe
  3570                           
  3571                           ;main.c: 199: send_nibble(nib1);
  3572  077E  0140               	movlb	0	; select bank0
  3573  077F  082A               	movf	send_adc_results@nib1,w
  3574  0780  3186  2602  3187   	fcall	_send_nibble
  3575                           
  3576                           ;main.c: 201: wait_while_strobe(0);
  3577  0783  3000               	movlw	0
  3578  0784  00F0               	movwf	wait_while_strobe@state
  3579  0785  00F1               	movwf	wait_while_strobe@state+1
  3580  0786  3183  2386  3187   	fcall	_wait_while_strobe
  3581                           
  3582                           ;main.c: 202: wait_while_strobe(1);
  3583  0789  3001               	movlw	1
  3584  078A  00F0               	movwf	wait_while_strobe@state
  3585  078B  3000               	movlw	0
  3586  078C  00F1               	movwf	wait_while_strobe@state+1
  3587  078D  3183  2386  3187   	fcall	_wait_while_strobe
  3588                           
  3589                           ;main.c: 203: wait_while_strobe(0);
  3590  0790  3000               	movlw	0
  3591  0791  00F0               	movwf	wait_while_strobe@state
  3592  0792  00F1               	movwf	wait_while_strobe@state+1
  3593  0793  3183  2386  3187   	fcall	_wait_while_strobe
  3594                           
  3595                           ;main.c: 205: wait_while_strobe(1);
  3596  0796  3001               	movlw	1
  3597  0797  00F0               	movwf	wait_while_strobe@state
  3598  0798  3000               	movlw	0
  3599  0799  00F1               	movwf	wait_while_strobe@state+1
  3600  079A  3183  2386  3187   	fcall	_wait_while_strobe
  3601                           
  3602                           ;main.c: 207: send_nibble(nib2);
  3603  079D  0140               	movlb	0	; select bank0
  3604  079E  082B               	movf	send_adc_results@nib2,w
  3605  079F  3186  2602  3187   	fcall	_send_nibble
  3606                           
  3607                           ;main.c: 209: wait_while_strobe(0);
  3608  07A2  3000               	movlw	0
  3609  07A3  00F0               	movwf	wait_while_strobe@state
  3610  07A4  00F1               	movwf	wait_while_strobe@state+1
  3611  07A5  3183  2386  3187   	fcall	_wait_while_strobe
  3612                           
  3613                           ;main.c: 210: wait_while_strobe(1);
  3614  07A8  3001               	movlw	1
  3615  07A9  00F0               	movwf	wait_while_strobe@state
  3616  07AA  3000               	movlw	0
  3617  07AB  00F1               	movwf	wait_while_strobe@state+1
  3618  07AC  3183  2386  3187   	fcall	_wait_while_strobe
  3619                           
  3620                           ;main.c: 211: wait_while_strobe(0);
  3621  07AF  3000               	movlw	0
  3622  07B0  00F0               	movwf	wait_while_strobe@state
  3623  07B1  00F1               	movwf	wait_while_strobe@state+1
  3624  07B2  3183  2386  3187   	fcall	_wait_while_strobe
  3625                           
  3626                           ;main.c: 213: wait_while_strobe(1);
  3627  07B5  3001               	movlw	1
  3628  07B6  00F0               	movwf	wait_while_strobe@state
  3629  07B7  3000               	movlw	0
  3630  07B8  00F1               	movwf	wait_while_strobe@state+1
  3631  07B9  3183  2386  3187   	fcall	_wait_while_strobe
  3632                           
  3633                           ;main.c: 215: send_nibble(nib3);
  3634  07BC  0140               	movlb	0	; select bank0
  3635  07BD  082C               	movf	send_adc_results@nib3,w
  3636  07BE  3186  2602  3187   	fcall	_send_nibble
  3637                           
  3638                           ;main.c: 217: wait_while_strobe(0);
  3639  07C1  3000               	movlw	0
  3640  07C2  00F0               	movwf	wait_while_strobe@state
  3641  07C3  00F1               	movwf	wait_while_strobe@state+1
  3642  07C4  3183  2386  3187   	fcall	_wait_while_strobe
  3643                           
  3644                           ;main.c: 218: wait_while_strobe(1);
  3645  07C7  3001               	movlw	1
  3646  07C8  00F0               	movwf	wait_while_strobe@state
  3647  07C9  3000               	movlw	0
  3648  07CA  00F1               	movwf	wait_while_strobe@state+1
  3649  07CB  3183  2386  3187   	fcall	_wait_while_strobe
  3650                           
  3651                           ;main.c: 219: wait_while_strobe(0);
  3652  07CE  3000               	movlw	0
  3653  07CF  00F0               	movwf	wait_while_strobe@state
  3654  07D0  00F1               	movwf	wait_while_strobe@state+1
  3655  07D1  3183  2386  3187   	fcall	_wait_while_strobe
  3656                           
  3657                           ;main.c: 221: wait_while_strobe(1);
  3658  07D4  3001               	movlw	1
  3659  07D5  00F0               	movwf	wait_while_strobe@state
  3660  07D6  3000               	movlw	0
  3661  07D7  00F1               	movwf	wait_while_strobe@state+1
  3662  07D8  3183  2386  3187   	fcall	_wait_while_strobe
  3663                           
  3664                           ;main.c: 223: send_nibble(0xE);
  3665  07DB  300E               	movlw	14
  3666  07DC  3186  2602  3187   	fcall	_send_nibble
  3667                           
  3668                           ;main.c: 225: wait_while_strobe(0);
  3669  07DF  3000               	movlw	0
  3670  07E0  00F0               	movwf	wait_while_strobe@state
  3671  07E1  00F1               	movwf	wait_while_strobe@state+1
  3672  07E2  3183  2386  3187   	fcall	_wait_while_strobe
  3673                           
  3674                           ;main.c: 226: wait_while_strobe(1);
  3675  07E5  3001               	movlw	1
  3676  07E6  00F0               	movwf	wait_while_strobe@state
  3677  07E7  3000               	movlw	0
  3678  07E8  00F1               	movwf	wait_while_strobe@state+1
  3679  07E9  3183  2386  3187   	fcall	_wait_while_strobe
  3680                           
  3681                           ;main.c: 227: wait_while_strobe(0);
  3682  07EC  3000               	movlw	0
  3683  07ED  00F0               	movwf	wait_while_strobe@state
  3684  07EE  00F1               	movwf	wait_while_strobe@state+1
  3685  07EF  3183  2386         	fcall	_wait_while_strobe
  3686  07F1  0008               	return
  3687  07F2                     __end_of_send_adc_results:	
  3688                           
  3689                           	psect	text7
  3690  0569                     __ptext7:	
  3691 ;; *************** function _rotate_90_enable *****************
  3692 ;; Defined at:
  3693 ;;		line 305 in file "main.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    3
  3714 ;; This function calls:
  3715 ;;		_printf
  3716 ;;		_send_nibble
  3717 ;;		_wait_while_strobe
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _rotate_90_enable
  3725  0569                     _rotate_90_enable:	
  3726                           
  3727                           ;main.c: 307: printf("set scanning to 90degrees\n");
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _rotate_90_enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3731  0569  303A               	movlw	low (STR_10| (0+32768))
  3732  056A  00F2               	movwf	printf@f
  3733  056B  3088               	movlw	high (STR_10| (0+32768))
  3734  056C  00F3               	movwf	printf@f+1
  3735  056D  3183  2396  3185   	fcall	_printf
  3736                           
  3737                           ;main.c: 308: wait_while_strobe(1);
  3738  0570  3001               	movlw	1
  3739  0571  00F0               	movwf	wait_while_strobe@state
  3740  0572  3000               	movlw	0
  3741  0573  00F1               	movwf	wait_while_strobe@state+1
  3742  0574  3183  2386  3185   	fcall	_wait_while_strobe
  3743                           
  3744                           ;main.c: 311: isScanning = 1;
  3745  0577  3001               	movlw	1
  3746  0578  0140               	movlb	0	; select bank0
  3747  0579  00A8               	movwf	_isScanning
  3748  057A  3000               	movlw	0
  3749  057B  00A9               	movwf	_isScanning+1
  3750                           
  3751                           ;main.c: 312: scanUpperLimit = 75;
  3752  057C  304B               	movlw	75
  3753  057D  00A2               	movwf	_scanUpperLimit
  3754  057E  3000               	movlw	0
  3755  057F  00A3               	movwf	_scanUpperLimit+1
  3756                           
  3757                           ;main.c: 313: scanLowerLimit = 25;
  3758  0580  3019               	movlw	25
  3759  0581  00A0               	movwf	_scanLowerLimit
  3760  0582  3000               	movlw	0
  3761  0583  00A1               	movwf	_scanLowerLimit+1
  3762                           
  3763                           ;main.c: 317: send_nibble(0xE);
  3764  0584  300E               	movlw	14
  3765  0585  3186  2602  3185   	fcall	_send_nibble
  3766                           
  3767                           ;main.c: 319: wait_while_strobe(0);
  3768  0588  3000               	movlw	0
  3769  0589  00F0               	movwf	wait_while_strobe@state
  3770  058A  00F1               	movwf	wait_while_strobe@state+1
  3771  058B  3183  2386  3185   	fcall	_wait_while_strobe
  3772                           
  3773                           ;main.c: 320: wait_while_strobe(1);
  3774  058E  3001               	movlw	1
  3775  058F  00F0               	movwf	wait_while_strobe@state
  3776  0590  3000               	movlw	0
  3777  0591  00F1               	movwf	wait_while_strobe@state+1
  3778  0592  3183  2386  3185   	fcall	_wait_while_strobe
  3779                           
  3780                           ;main.c: 321: wait_while_strobe(0);
  3781  0595  3000               	movlw	0
  3782  0596  00F0               	movwf	wait_while_strobe@state
  3783  0597  00F1               	movwf	wait_while_strobe@state+1
  3784  0598  3183  2386         	fcall	_wait_while_strobe
  3785  059A  0008               	return
  3786  059B                     __end_of_rotate_90_enable:	
  3787                           
  3788                           	psect	text8
  3789  0539                     __ptext8:	
  3790 ;; *************** function _rotate_180_enable *****************
  3791 ;; Defined at:
  3792 ;;		line 324 in file "main.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3810 ;;Total ram usage:        0 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    3
  3813 ;; This function calls:
  3814 ;;		_printf
  3815 ;;		_send_nibble
  3816 ;;		_wait_while_strobe
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _rotate_180_enable
  3824  0539                     _rotate_180_enable:	
  3825                           
  3826                           ;main.c: 326: printf("set scanning to 18 0degrees\n");
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in _rotate_180_enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3830  0539  3000               	movlw	low (STR_11| (0+32768))
  3831  053A  00F2               	movwf	printf@f
  3832  053B  3088               	movlw	high (STR_11| (0+32768))
  3833  053C  00F3               	movwf	printf@f+1
  3834  053D  3183  2396  3185   	fcall	_printf
  3835                           
  3836                           ;main.c: 327: wait_while_strobe(1);
  3837  0540  3001               	movlw	1
  3838  0541  00F0               	movwf	wait_while_strobe@state
  3839  0542  3000               	movlw	0
  3840  0543  00F1               	movwf	wait_while_strobe@state+1
  3841  0544  3183  2386  3185   	fcall	_wait_while_strobe
  3842                           
  3843                           ;main.c: 330: isScanning = 1;
  3844  0547  3001               	movlw	1
  3845  0548  0140               	movlb	0	; select bank0
  3846  0549  00A8               	movwf	_isScanning
  3847  054A  3000               	movlw	0
  3848  054B  00A9               	movwf	_isScanning+1
  3849                           
  3850                           ;main.c: 331: scanUpperLimit = 100;
  3851  054C  3064               	movlw	100
  3852  054D  00A2               	movwf	_scanUpperLimit
  3853  054E  3000               	movlw	0
  3854  054F  00A3               	movwf	_scanUpperLimit+1
  3855                           
  3856                           ;main.c: 332: scanLowerLimit = 0;
  3857  0550  01A0               	clrf	_scanLowerLimit
  3858  0551  01A1               	clrf	_scanLowerLimit+1
  3859                           
  3860                           ;main.c: 336: send_nibble(0xE);
  3861  0552  300E               	movlw	14
  3862  0553  3186  2602  3185   	fcall	_send_nibble
  3863                           
  3864                           ;main.c: 338: wait_while_strobe(0);
  3865  0556  3000               	movlw	0
  3866  0557  00F0               	movwf	wait_while_strobe@state
  3867  0558  00F1               	movwf	wait_while_strobe@state+1
  3868  0559  3183  2386  3185   	fcall	_wait_while_strobe
  3869                           
  3870                           ;main.c: 339: wait_while_strobe(1);
  3871  055C  3001               	movlw	1
  3872  055D  00F0               	movwf	wait_while_strobe@state
  3873  055E  3000               	movlw	0
  3874  055F  00F1               	movwf	wait_while_strobe@state+1
  3875  0560  3183  2386  3185   	fcall	_wait_while_strobe
  3876                           
  3877                           ;main.c: 340: wait_while_strobe(0);
  3878  0563  3000               	movlw	0
  3879  0564  00F0               	movwf	wait_while_strobe@state
  3880  0565  00F1               	movwf	wait_while_strobe@state+1
  3881  0566  3183  2386         	fcall	_wait_while_strobe
  3882  0568  0008               	return
  3883  0569                     __end_of_rotate_180_enable:	
  3884                           
  3885                           	psect	text9
  3886  040E                     __ptext9:	
  3887 ;; *************** function _receive_msg *****************
  3888 ;; Defined at:
  3889 ;;		line 369 in file "main.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  results         2    6[COMMON] unsigned int 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3906 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3907 ;;Total ram usage:        4 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    1
  3910 ;; This function calls:
  3911 ;;		_return_bus_nibble
  3912 ;;		_wait_while_strobe
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           
  3919                           ;psect for function _receive_msg
  3920  040E                     _receive_msg:	
  3921                           
  3922                           ;main.c: 371: unsigned results;
  3923                           ;main.c: 380: TRISC = 0b11100110;
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _receive_msg: [wreg+status,2+status,0+pclath+cstack]
  3927  040E  30E6               	movlw	230
  3928  040F  0140               	movlb	0	; select bank0
  3929  0410  0093               	movwf	19	;volatile
  3930                           
  3931                           ;main.c: 382: wait_while_strobe(1);
  3932  0411  3001               	movlw	1
  3933  0412  00F0               	movwf	wait_while_strobe@state
  3934  0413  3000               	movlw	0
  3935  0414  00F1               	movwf	wait_while_strobe@state+1
  3936  0415  3183  2386  3184   	fcall	_wait_while_strobe
  3937                           
  3938                           ;main.c: 383: wait_while_strobe(0);
  3939  0418  3000               	movlw	0
  3940  0419  00F0               	movwf	wait_while_strobe@state
  3941  041A  00F1               	movwf	wait_while_strobe@state+1
  3942  041B  3183  2386  3184   	fcall	_wait_while_strobe
  3943  041E                     l1584:	
  3944                           ;main.c: 385: while(PORTCbits.RC6 == 1)
  3945                           
  3946  041E  0140               	movlb	0	; select bank0
  3947  041F  1F0E               	btfss	14,6	;volatile
  3948  0420  2C2B               	goto	l1586
  3949                           
  3950                           ;main.c: 386: {
  3951                           ;main.c: 387: results = return_bus_nibble();
  3952  0421  3183  23CD  3184   	fcall	_return_bus_nibble
  3953  0424  00F4               	movwf	??_receive_msg
  3954  0425  01F5               	clrf	??_receive_msg+1
  3955  0426  0874               	movf	??_receive_msg,w
  3956  0427  00F6               	movwf	receive_msg@results
  3957  0428  0875               	movf	??_receive_msg+1,w
  3958  0429  00F7               	movwf	receive_msg@results+1
  3959  042A  2C1E               	goto	l1584
  3960  042B                     l1586:	
  3961                           
  3962                           ;main.c: 388: }
  3963                           ;main.c: 390: wait_while_strobe(0);
  3964  042B  3000               	movlw	0
  3965  042C  00F0               	movwf	wait_while_strobe@state
  3966  042D  00F1               	movwf	wait_while_strobe@state+1
  3967  042E  3183  2386         	fcall	_wait_while_strobe
  3968                           
  3969                           ;main.c: 393: return results;
  3970  0430  0876               	movf	receive_msg@results,w
  3971  0431  0008               	return
  3972  0432                     __end_of_receive_msg:	
  3973                           
  3974                           	psect	text10
  3975  03CD                     __ptext10:	
  3976 ;; *************** function _return_bus_nibble *****************
  3977 ;; Defined at:
  3978 ;;		line 361 in file "main.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      unsigned char 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3996 ;;Total ram usage:        4 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_receive_msg
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           
  4006                           ;psect for function _return_bus_nibble
  4007  03CD                     _return_bus_nibble:	
  4008                           
  4009                           ;main.c: 363: return (PORTCbits.RC5 << 3) +
  4010                           ;main.c: 364: (PORTCbits.RC7 << 2) +
  4011                           ;main.c: 365: (PORTCbits.RC1 << 1) +
  4012                           ;main.c: 366: PORTCbits.RC2;
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _return_bus_nibble: [wreg+status,2+status,0]
  4016  03CD  0140               	movlb	0	; select bank0
  4017  03CE  0E0E               	swapf	14,w	;volatile
  4018  03CF  0C89               	rrf	9,f
  4019  03D0  3901               	andlw	1
  4020  03D1  00F0               	movwf	??_return_bus_nibble
  4021  03D2  3003               	movlw	3
  4022  03D3                     u525:	
  4023  03D3  35F0               	lslf	??_return_bus_nibble,f
  4024  03D4  0B89               	decfsz	9,f
  4025  03D5  2BD3               	goto	u525
  4026  03D6  0D0E               	rlf	14,w	;volatile
  4027  03D7  0D0E               	rlf	14,w	;volatile
  4028  03D8  3901               	andlw	1
  4029  03D9  00F1               	movwf	??_return_bus_nibble+1
  4030  03DA  3001               	movlw	1
  4031  03DB                     u535:	
  4032  03DB  35F1               	lslf	??_return_bus_nibble+1,f
  4033  03DC  3EFF               	addlw	-1
  4034  03DD  1D03               	skipz
  4035  03DE  2BDB               	goto	u535
  4036  03DF  3571               	lslf	??_return_bus_nibble+1,w
  4037  03E0  0770               	addwf	??_return_bus_nibble,w
  4038  03E1  00F2               	movwf	??_return_bus_nibble+2
  4039  03E2  0C0E               	rrf	14,w	;volatile
  4040  03E3  3901               	andlw	1
  4041  03E4  0709               	addwf	9,w
  4042  03E5  0772               	addwf	??_return_bus_nibble+2,w
  4043  03E6  00F3               	movwf	??_return_bus_nibble+3
  4044  03E7  0C0E               	rrf	14,w	;volatile
  4045  03E8  0C89               	rrf	9,f
  4046  03E9  3901               	andlw	1
  4047  03EA  0773               	addwf	??_return_bus_nibble+3,w
  4048  03EB  0008               	return
  4049  03EC                     __end_of_return_bus_nibble:	
  4050                           
  4051                           	psect	text11
  4052  0675                     __ptext11:	
  4053 ;; *************** function _handle_scan *****************
  4054 ;; Defined at:
  4055 ;;		line 397 in file "main.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4071 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4072 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4073 ;;Total ram usage:        1 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    2
  4076 ;; This function calls:
  4077 ;;		_set_pwm_duty
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;;		_test_scan
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _handle_scan
  4086  0675                     _handle_scan:	
  4087                           
  4088                           ;main.c: 400: if(PIR0bits.TMR0IF)
  4089                           
  4090                           ;incstack = 0
  4091                           ; Regs used in _handle_scan: [wreg+status,2+status,0+pclath+cstack]
  4092  0675  014E               	movlb	14	; select bank14
  4093  0676  1E8C               	btfss	12,5	;volatile
  4094  0677  0008               	return
  4095                           
  4096                           ;main.c: 401: {
  4097                           ;main.c: 402: PIR0bits.TMR0IF = 0;
  4098  0678  128C               	bcf	12,5	;volatile
  4099                           
  4100                           ;main.c: 405: if(isScanningUp)
  4101  0679  0140               	movlb	0	; select bank0
  4102  067A  0824               	movf	_isScanningUp,w
  4103  067B  0425               	iorwf	_isScanningUp+1,w
  4104  067C  1903               	btfsc	3,2
  4105  067D  2E82               	goto	l1600
  4106                           
  4107                           ;main.c: 406: ++scanCounter;
  4108  067E  3001               	movlw	1
  4109  067F  07A6               	addwf	_scanCounter,f
  4110  0680  3000               	movlw	0
  4111  0681  2E85               	goto	L1
  4112  0682                     l1600:	
  4113                           
  4114                           ;main.c: 407: else
  4115                           ;main.c: 408: --scanCounter;
  4116  0682  30FF               	movlw	255
  4117  0683  07A6               	addwf	_scanCounter,f
  4118  0684  30FF               	movlw	255
  4119  0685                     L1:	
  4120  0685  3DA7               	addwfc	_scanCounter+1,f
  4121                           
  4122                           ;main.c: 411: set_pwm_duty(scanCounter);
  4123  0686  0827               	movf	_scanCounter+1,w
  4124  0687  00F9               	movwf	set_pwm_duty@duty+1
  4125  0688  0826               	movf	_scanCounter,w
  4126  0689  00F8               	movwf	set_pwm_duty@duty
  4127  068A  3183  23EC  3186   	fcall	_set_pwm_duty
  4128                           
  4129                           ;main.c: 414: if(scanCounter >= scanUpperLimit)
  4130  068D  0140               	movlb	0	; select bank0
  4131  068E  0827               	movf	_scanCounter+1,w
  4132  068F  3A80               	xorlw	128
  4133  0690  00AA               	movwf	??_handle_scan
  4134  0691  0823               	movf	_scanUpperLimit+1,w
  4135  0692  3A80               	xorlw	128
  4136  0693  022A               	subwf	??_handle_scan,w
  4137  0694  1D03               	skipz
  4138  0695  2E98               	goto	u595
  4139  0696  0822               	movf	_scanUpperLimit,w
  4140  0697  0226               	subwf	_scanCounter,w
  4141  0698                     u595:	
  4142  0698  1C03               	skipc
  4143  0699  2E9E               	goto	l1608
  4144                           
  4145                           ;main.c: 415: isScanningUp = 0;
  4146  069A  0140               	movlb	0	; select bank0
  4147  069B  01A4               	clrf	_isScanningUp
  4148  069C  01A5               	clrf	_isScanningUp+1
  4149  069D  0008               	return
  4150  069E                     l1608:	
  4151                           
  4152                           ;main.c: 416: else if(scanCounter <= scanLowerLimit)
  4153  069E  0140               	movlb	0	; select bank0
  4154  069F  0821               	movf	_scanLowerLimit+1,w
  4155  06A0  3A80               	xorlw	128
  4156  06A1  00AA               	movwf	??_handle_scan
  4157  06A2  0827               	movf	_scanCounter+1,w
  4158  06A3  3A80               	xorlw	128
  4159  06A4  022A               	subwf	??_handle_scan,w
  4160  06A5  1D03               	skipz
  4161  06A6  2EA9               	goto	u605
  4162  06A7  0826               	movf	_scanCounter,w
  4163  06A8  0220               	subwf	_scanLowerLimit,w
  4164  06A9                     u605:	
  4165  06A9  1C03               	skipc
  4166  06AA  0008               	return
  4167                           
  4168                           ;main.c: 417: isScanningUp = 1;
  4169  06AB  3001               	movlw	1
  4170  06AC  0140               	movlb	0	; select bank0
  4171  06AD  00A4               	movwf	_isScanningUp
  4172  06AE  3000               	movlw	0
  4173  06AF  00A5               	movwf	_isScanningUp+1
  4174  06B0  0008               	return
  4175  06B1                     __end_of_handle_scan:	
  4176                           
  4177                           	psect	text12
  4178  0432                     __ptext12:	
  4179 ;; *************** function _everything_init *****************
  4180 ;; Defined at:
  4181 ;;		line 77 in file "main.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    4
  4202 ;; This function calls:
  4203 ;;		_adc_init
  4204 ;;		_set_pwm_duty
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _everything_init
  4212  0432                     _everything_init:	
  4213                           
  4214                           ;main.c: 81: TRISC = 0;
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _everything_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4218  0432  0140               	movlb	0	; select bank0
  4219  0433  0193               	clrf	19	;volatile
  4220                           
  4221                           ;main.c: 82: ANSELC = 0;
  4222  0434  017E               	movlb	62	; select bank62
  4223  0435  01CE               	clrf	78	;volatile
  4224                           
  4225                           ;main.c: 87: PR2 = 77;
  4226  0436  304D               	movlw	77
  4227  0437  0145               	movlb	5	; select bank5
  4228  0438  008D               	movwf	13	;volatile
  4229                           
  4230                           ;main.c: 90: CCP1CON = 0x8F;
  4231  0439  308F               	movlw	143
  4232  043A  0146               	movlb	6	; select bank6
  4233  043B  008E               	movwf	14	;volatile
  4234                           
  4235                           ;main.c: 93: set_pwm_duty(50);
  4236  043C  3032               	movlw	50
  4237  043D  00F8               	movwf	set_pwm_duty@duty
  4238  043E  3000               	movlw	0
  4239  043F  00F9               	movwf	set_pwm_duty@duty+1
  4240  0440  3183  23EC  3184   	fcall	_set_pwm_duty
  4241                           
  4242                           ;main.c: 96: CCPTMRS0 = 0x01;
  4243  0443  3001               	movlw	1
  4244  0444  0144               	movlb	4	; select bank4
  4245  0445  009E               	movwf	30	;volatile
  4246                           
  4247                           ;main.c: 102: T2CLKCON = 0x01;
  4248  0446  3001               	movlw	1
  4249  0447  0145               	movlb	5	; select bank5
  4250  0448  0090               	movwf	16	;volatile
  4251                           
  4252                           ;main.c: 103: T2CON = 0xE0;
  4253  0449  30E0               	movlw	224
  4254  044A  008E               	movwf	14	;volatile
  4255                           
  4256                           ;main.c: 106: PIR4 = 0;
  4257  044B  014E               	movlb	14	; select bank14
  4258  044C  0190               	clrf	16	;volatile
  4259                           
  4260                           ;main.c: 108: T2CON |= 0x80;
  4261  044D  0145               	movlb	5	; select bank5
  4262  044E  178E               	bsf	14,7	;volatile
  4263                           
  4264                           ;main.c: 111: T0CON0 = 0x90;
  4265  044F  3090               	movlw	144
  4266  0450  0140               	movlb	0	; select bank0
  4267  0451  009E               	movwf	30	;volatile
  4268                           
  4269                           ;main.c: 112: T0CON1 = 0x41;
  4270  0452  3041               	movlw	65
  4271  0453  009F               	movwf	31	;volatile
  4272                           
  4273                           ;main.c: 113: T0CON0 |= 0x80;
  4274  0454  179E               	bsf	30,7	;volatile
  4275                           
  4276                           ;main.c: 116: TRISA = 0;
  4277  0455  0191               	clrf	17	;volatile
  4278                           
  4279                           ;main.c: 119: adc_init();
  4280  0456  3183  23B1         	fcall	_adc_init
  4281  0458  0008               	return
  4282  0459                     __end_of_everything_init:	
  4283                           
  4284                           	psect	text13
  4285  03EC                     __ptext13:	
  4286 ;; *************** function _set_pwm_duty *****************
  4287 ;; Defined at:
  4288 ;;		line 65 in file "main.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  duty            2    8[COMMON] unsigned int 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  pr              2   12[COMMON] unsigned int 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4306 ;;Total ram usage:        6 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		___lwdiv
  4311 ;; This function is called by:
  4312 ;;		_everything_init
  4313 ;;		_sensor_reset
  4314 ;;		_turn_30
  4315 ;;		_turn_90
  4316 ;;		_turn_120
  4317 ;;		_handle_scan
  4318 ;;		_main
  4319 ;;		_test_scan
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _set_pwm_duty
  4325  03EC                     _set_pwm_duty:	
  4326                           
  4327                           ;main.c: 67: unsigned pr;
  4328                           ;main.c: 71: pr = 15 + duty*16/100;
  4329                           
  4330                           ;incstack = 0
  4331                           ; Regs used in _set_pwm_duty: [wreg+status,2+status,0+pclath+cstack]
  4332  03EC  3064               	movlw	100
  4333  03ED  00F0               	movwf	___lwdiv@divisor
  4334  03EE  3000               	movlw	0
  4335  03EF  00F1               	movwf	___lwdiv@divisor+1
  4336  03F0  0879               	movf	set_pwm_duty@duty+1,w
  4337  03F1  00FB               	movwf	??_set_pwm_duty+1
  4338  03F2  0878               	movf	set_pwm_duty@duty,w
  4339  03F3  00FA               	movwf	??_set_pwm_duty
  4340  03F4  0EFA               	swapf	??_set_pwm_duty,f
  4341  03F5  0EFB               	swapf	??_set_pwm_duty+1,f
  4342  03F6  30F0               	movlw	240
  4343  03F7  05FB               	andwf	??_set_pwm_duty+1,f
  4344  03F8  087A               	movf	??_set_pwm_duty,w
  4345  03F9  390F               	andlw	15
  4346  03FA  04FB               	iorwf	??_set_pwm_duty+1,f
  4347  03FB  30F0               	movlw	240
  4348  03FC  05FA               	andwf	??_set_pwm_duty,f
  4349  03FD  087A               	movf	??_set_pwm_duty,w
  4350  03FE  00F2               	movwf	___lwdiv@dividend
  4351  03FF  087B               	movf	??_set_pwm_duty+1,w
  4352  0400  00F3               	movwf	___lwdiv@dividend+1
  4353  0401  3185  25CE         	fcall	___lwdiv
  4354  0403  0870               	movf	?___lwdiv,w
  4355  0404  3E0F               	addlw	15
  4356  0405  00FC               	movwf	set_pwm_duty@pr
  4357  0406  3000               	movlw	0
  4358  0407  3D71               	addwfc	?___lwdiv+1,w
  4359  0408  00FD               	movwf	set_pwm_duty@pr+1
  4360                           
  4361                           ;main.c: 72: CCPR1H = 0;
  4362  0409  0146               	movlb	6	; select bank6
  4363  040A  018D               	clrf	13	;volatile
  4364                           
  4365                           ;main.c: 73: CCPR1L = pr;
  4366  040B  087C               	movf	set_pwm_duty@pr,w
  4367  040C  008C               	movwf	12	;volatile
  4368  040D  0008               	return
  4369  040E                     __end_of_set_pwm_duty:	
  4370                           
  4371                           	psect	text14
  4372  05CE                     __ptext14:	
  4373 ;; *************** function ___lwdiv *****************
  4374 ;; Defined at:
  4375 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  divisor         2    0[COMMON] unsigned int 
  4378 ;;  dividend        2    2[COMMON] unsigned int 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  quotient        2    5[COMMON] unsigned int 
  4381 ;;  counter         1    7[COMMON] unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  2    0[COMMON] unsigned int 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4392 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4394 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4395 ;;Total ram usage:        8 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_set_pwm_duty
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function ___lwdiv
  4406  05CE                     ___lwdiv:	
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4410  05CE  01F5               	clrf	___lwdiv@quotient
  4411  05CF  01F6               	clrf	___lwdiv@quotient+1
  4412  05D0  0870               	movf	___lwdiv@divisor,w
  4413  05D1  0471               	iorwf	___lwdiv@divisor+1,w
  4414  05D2  1903               	btfsc	3,2
  4415  05D3  2DFD               	goto	l1280
  4416  05D4  01F7               	clrf	___lwdiv@counter
  4417  05D5  0AF7               	incf	___lwdiv@counter,f
  4418  05D6                     l1268:	
  4419  05D6  1BF1               	btfsc	___lwdiv@divisor+1,7
  4420  05D7  2DE2               	goto	l1270
  4421  05D8  3001               	movlw	1
  4422  05D9                     u415:	
  4423  05D9  35F0               	lslf	___lwdiv@divisor,f
  4424  05DA  0DF1               	rlf	___lwdiv@divisor+1,f
  4425  05DB  0B89               	decfsz	9,f
  4426  05DC  2DD9               	goto	u415
  4427  05DD  3001               	movlw	1
  4428  05DE  00F4               	movwf	??___lwdiv
  4429  05DF  0874               	movf	??___lwdiv,w
  4430  05E0  07F7               	addwf	___lwdiv@counter,f
  4431  05E1  2DD6               	goto	l1268
  4432  05E2                     l1270:	
  4433  05E2  3001               	movlw	1
  4434  05E3                     u435:	
  4435  05E3  35F5               	lslf	___lwdiv@quotient,f
  4436  05E4  0DF6               	rlf	___lwdiv@quotient+1,f
  4437  05E5  0B89               	decfsz	9,f
  4438  05E6  2DE3               	goto	u435
  4439  05E7  0871               	movf	___lwdiv@divisor+1,w
  4440  05E8  0273               	subwf	___lwdiv@dividend+1,w
  4441  05E9  1D03               	skipz
  4442  05EA  2DED               	goto	u445
  4443  05EB  0870               	movf	___lwdiv@divisor,w
  4444  05EC  0272               	subwf	___lwdiv@dividend,w
  4445  05ED                     u445:	
  4446  05ED  1C03               	skipc
  4447  05EE  2DF4               	goto	l1276
  4448  05EF  0870               	movf	___lwdiv@divisor,w
  4449  05F0  02F2               	subwf	___lwdiv@dividend,f
  4450  05F1  0871               	movf	___lwdiv@divisor+1,w
  4451  05F2  3BF3               	subwfb	___lwdiv@dividend+1,f
  4452  05F3  1475               	bsf	___lwdiv@quotient,0
  4453  05F4                     l1276:	
  4454  05F4  3001               	movlw	1
  4455  05F5                     u455:	
  4456  05F5  36F1               	lsrf	___lwdiv@divisor+1,f
  4457  05F6  0CF0               	rrf	___lwdiv@divisor,f
  4458  05F7  0B89               	decfsz	9,f
  4459  05F8  2DF5               	goto	u455
  4460  05F9  3001               	movlw	1
  4461  05FA  02F7               	subwf	___lwdiv@counter,f
  4462  05FB  1D03               	btfss	3,2
  4463  05FC  2DE2               	goto	l1270
  4464  05FD                     l1280:	
  4465  05FD  0876               	movf	___lwdiv@quotient+1,w
  4466  05FE  00F1               	movwf	?___lwdiv+1
  4467  05FF  0875               	movf	___lwdiv@quotient,w
  4468  0600  00F0               	movwf	?___lwdiv
  4469  0601  0008               	return
  4470  0602                     __end_of___lwdiv:	
  4471                           
  4472                           	psect	text15
  4473  03B1                     __ptext15:	
  4474 ;; *************** function _adc_init *****************
  4475 ;; Defined at:
  4476 ;;		line 43 in file "main.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    3
  4497 ;; This function calls:
  4498 ;;		_printf
  4499 ;; This function is called by:
  4500 ;;		_everything_init
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           
  4505                           ;psect for function _adc_init
  4506  03B1                     _adc_init:	
  4507                           
  4508                           ;main.c: 45: TRISA = 0;
  4509                           
  4510                           ;incstack = 0
  4511                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4512  03B1  0140               	movlb	0	; select bank0
  4513  03B2  0191               	clrf	17	;volatile
  4514                           
  4515                           ;main.c: 46: ANSELA = 0;
  4516  03B3  017E               	movlb	62	; select bank62
  4517  03B4  01B8               	clrf	56	;volatile
  4518                           
  4519                           ;main.c: 48: TRISAbits.TRISA1 = 1;
  4520  03B5  0140               	movlb	0	; select bank0
  4521  03B6  1491               	bsf	17,1	;volatile
  4522                           
  4523                           ;main.c: 49: ANSELAbits.ANSA1 = 1;
  4524  03B7  017E               	movlb	62	; select bank62
  4525  03B8  14B8               	bsf	56,1	;volatile
  4526                           
  4527                           ;main.c: 50: ADCON1 = 0;
  4528  03B9  0141               	movlb	1	; select bank1
  4529  03BA  0194               	clrf	20	;volatile
  4530                           
  4531                           ;main.c: 51: ADCON2 = 0;
  4532  03BB  0195               	clrf	21	;volatile
  4533                           
  4534                           ;main.c: 52: ADCON3 = 0;
  4535  03BC  0196               	clrf	22	;volatile
  4536                           
  4537                           ;main.c: 53: ADACT = 0;
  4538  03BD  0199               	clrf	25	;volatile
  4539                           
  4540                           ;main.c: 54: ADSTAT = 0;
  4541  03BE  0197               	clrf	23	;volatile
  4542                           
  4543                           ;main.c: 55: ADCAP = 0;
  4544  03BF  019B               	clrf	27	;volatile
  4545                           
  4546                           ;main.c: 56: ADPRE = 0;
  4547  03C0  019C               	clrf	28	;volatile
  4548                           
  4549                           ;main.c: 57: ADCON0 = 0b10000100;
  4550  03C1  3084               	movlw	132
  4551  03C2  0093               	movwf	19	;volatile
  4552                           
  4553                           ;main.c: 58: ADREF = 0;
  4554  03C3  019A               	clrf	26	;volatile
  4555                           
  4556                           ;main.c: 59: ADPCH = 0b00000001;
  4557  03C4  3001               	movlw	1
  4558  03C5  009E               	movwf	30	;volatile
  4559                           
  4560                           ;main.c: 61: printf("Initialized ADC\n");
  4561  03C6  306B               	movlw	low (STR_1| (0+32768))
  4562  03C7  00F2               	movwf	printf@f
  4563  03C8  3088               	movlw	high (STR_1| (0+32768))
  4564  03C9  00F3               	movwf	printf@f+1
  4565  03CA  3183  2396         	fcall	_printf
  4566  03CC  0008               	return
  4567  03CD                     __end_of_adc_init:	
  4568                           
  4569                           	psect	text16
  4570  0459                     __ptext16:	
  4571 ;; *************** function _disable_rotate *****************
  4572 ;; Defined at:
  4573 ;;		line 343 in file "main.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4591 ;;Total ram usage:        0 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    3
  4594 ;; This function calls:
  4595 ;;		_printf
  4596 ;;		_send_nibble
  4597 ;;		_wait_while_strobe
  4598 ;; This function is called by:
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _disable_rotate
  4605  0459                     _disable_rotate:	
  4606                           
  4607                           ;main.c: 345: printf("set scanning to 18 0degrees\n");
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _disable_rotate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4611  0459  3000               	movlw	low (STR_11| (0+32768))
  4612  045A  00F2               	movwf	printf@f
  4613  045B  3088               	movlw	high (STR_11| (0+32768))
  4614  045C  00F3               	movwf	printf@f+1
  4615  045D  3183  2396  3184   	fcall	_printf
  4616                           
  4617                           ;main.c: 346: wait_while_strobe(1);
  4618  0460  3001               	movlw	1
  4619  0461  00F0               	movwf	wait_while_strobe@state
  4620  0462  3000               	movlw	0
  4621  0463  00F1               	movwf	wait_while_strobe@state+1
  4622  0464  3183  2386  3184   	fcall	_wait_while_strobe
  4623                           
  4624                           ;main.c: 349: isScanning = 0;
  4625  0467  0140               	movlb	0	; select bank0
  4626  0468  01A8               	clrf	_isScanning
  4627  0469  01A9               	clrf	_isScanning+1
  4628                           
  4629                           ;main.c: 353: send_nibble(0xE);
  4630  046A  300E               	movlw	14
  4631  046B  3186  2602  3184   	fcall	_send_nibble
  4632                           
  4633                           ;main.c: 355: wait_while_strobe(0);
  4634  046E  3000               	movlw	0
  4635  046F  00F0               	movwf	wait_while_strobe@state
  4636  0470  00F1               	movwf	wait_while_strobe@state+1
  4637  0471  3183  2386  3184   	fcall	_wait_while_strobe
  4638                           
  4639                           ;main.c: 356: wait_while_strobe(1);
  4640  0474  3001               	movlw	1
  4641  0475  00F0               	movwf	wait_while_strobe@state
  4642  0476  3000               	movlw	0
  4643  0477  00F1               	movwf	wait_while_strobe@state+1
  4644  0478  3183  2386  3184   	fcall	_wait_while_strobe
  4645                           
  4646                           ;main.c: 357: wait_while_strobe(0);
  4647  047B  3000               	movlw	0
  4648  047C  00F0               	movwf	wait_while_strobe@state
  4649  047D  00F1               	movwf	wait_while_strobe@state+1
  4650  047E  3183  2386         	fcall	_wait_while_strobe
  4651  0480  0008               	return
  4652  0481                     __end_of_disable_rotate:	
  4653                           
  4654                           	psect	text17
  4655  0386                     __ptext17:	
  4656 ;; *************** function _wait_while_strobe *****************
  4657 ;; Defined at:
  4658 ;;		line 124 in file "main.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  state           2    0[COMMON] int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4675 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4676 ;;Total ram usage:        4 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_sensor_ping
  4682 ;;		_sensor_reset
  4683 ;;		_send_adc_results
  4684 ;;		_turn_30
  4685 ;;		_turn_90
  4686 ;;		_turn_120
  4687 ;;		_rotate_90_enable
  4688 ;;		_rotate_180_enable
  4689 ;;		_disable_rotate
  4690 ;;		_receive_msg
  4691 ;;		_enter_scan_mode
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function _wait_while_strobe
  4697  0386                     _wait_while_strobe:	
  4698  0386                     l1342:	
  4699                           ;main.c: 126: while(PORTCbits.RC6 == state)
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in _wait_while_strobe: [wreg+status,2+status,0]
  4703                           
  4704  0386  0140               	movlb	0	; select bank0
  4705  0387  0E0E               	swapf	14,w	;volatile
  4706  0388  0C89               	rrf	9,f
  4707  0389  0C89               	rrf	9,f
  4708  038A  3901               	andlw	1
  4709  038B  00F2               	movwf	??_wait_while_strobe
  4710  038C  01F3               	clrf	??_wait_while_strobe+1
  4711  038D  0871               	movf	wait_while_strobe@state+1,w
  4712  038E  0673               	xorwf	??_wait_while_strobe+1,w
  4713  038F  1D03               	skipz
  4714  0390  2B93               	goto	u495
  4715  0391  0870               	movf	wait_while_strobe@state,w
  4716  0392  0672               	xorwf	??_wait_while_strobe,w
  4717  0393                     u495:	
  4718  0393  1D03               	btfss	3,2
  4719  0394  0008               	return
  4720  0395  2B86               	goto	l1342
  4721  0396                     __end_of_wait_while_strobe:	
  4722                           
  4723                           	psect	text18
  4724  0602                     __ptext18:	
  4725 ;; *************** function _send_nibble *****************
  4726 ;; Defined at:
  4727 ;;		line 134 in file "main.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  nibble          1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  nibble          1    2[COMMON] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4745 ;;Total ram usage:        3 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_sensor_ping
  4751 ;;		_sensor_reset
  4752 ;;		_send_adc_results
  4753 ;;		_turn_30
  4754 ;;		_turn_90
  4755 ;;		_turn_120
  4756 ;;		_rotate_90_enable
  4757 ;;		_rotate_180_enable
  4758 ;;		_disable_rotate
  4759 ;;		_enter_scan_mode
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _send_nibble
  4765  0602                     _send_nibble:	
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _send_nibble: [wreg+status,2+status,0]
  4769                           ;send_nibble@nibble stored from wreg
  4770  0602  00F2               	movwf	send_nibble@nibble
  4771                           
  4772                           ;main.c: 136: TRISC = 0b01000000;
  4773  0603  3040               	movlw	64
  4774  0604  0140               	movlb	0	; select bank0
  4775  0605  0093               	movwf	19	;volatile
  4776                           
  4777                           ;main.c: 137: PORTCbits.RC2 = (nibble) & 1;
  4778  0606  0872               	movf	send_nibble@nibble,w
  4779  0607  3901               	andlw	1
  4780  0608  00F0               	movwf	??_send_nibble
  4781  0609  0DF0               	rlf	??_send_nibble,f
  4782  060A  0DF0               	rlf	??_send_nibble,f
  4783  060B  080E               	movf	14,w	;volatile
  4784  060C  0670               	xorwf	??_send_nibble,w
  4785  060D  39FB               	andlw	-5
  4786  060E  0670               	xorwf	??_send_nibble,w
  4787  060F  008E               	movwf	14	;volatile
  4788                           
  4789                           ;main.c: 138: PORTCbits.RC1 = (nibble >> 1) & 1 ;
  4790  0610  3672               	lsrf	send_nibble@nibble,w
  4791  0611  3901               	andlw	1
  4792  0612  00F0               	movwf	??_send_nibble
  4793  0613  0DF0               	rlf	??_send_nibble,f
  4794  0614  080E               	movf	14,w	;volatile
  4795  0615  0670               	xorwf	??_send_nibble,w
  4796  0616  39FD               	andlw	-3
  4797  0617  0670               	xorwf	??_send_nibble,w
  4798  0618  008E               	movwf	14	;volatile
  4799                           
  4800                           ;main.c: 139: PORTCbits.RC7 = (nibble >> 2) & 1 ;
  4801  0619  0872               	movf	send_nibble@nibble,w
  4802  061A  00F0               	movwf	??_send_nibble
  4803  061B  3002               	movlw	2
  4804  061C                     u505:	
  4805  061C  36F0               	lsrf	??_send_nibble,f
  4806  061D  0B89               	decfsz	9,f
  4807  061E  2E1C               	goto	u505
  4808  061F  0870               	movf	??_send_nibble,w
  4809  0620  3901               	andlw	1
  4810  0621  00F1               	movwf	??_send_nibble+1
  4811  0622  0CF1               	rrf	??_send_nibble+1,f
  4812  0623  0CF1               	rrf	??_send_nibble+1,f
  4813  0624  080E               	movf	14,w	;volatile
  4814  0625  0671               	xorwf	??_send_nibble+1,w
  4815  0626  397F               	andlw	-129
  4816  0627  0671               	xorwf	??_send_nibble+1,w
  4817  0628  008E               	movwf	14	;volatile
  4818                           
  4819                           ;main.c: 140: PORTCbits.RC5 = (nibble >> 3) & 1;
  4820  0629  0872               	movf	send_nibble@nibble,w
  4821  062A  00F0               	movwf	??_send_nibble
  4822  062B  3003               	movlw	3
  4823  062C                     u515:	
  4824  062C  36F0               	lsrf	??_send_nibble,f
  4825  062D  0B89               	decfsz	9,f
  4826  062E  2E2C               	goto	u515
  4827  062F  0870               	movf	??_send_nibble,w
  4828  0630  3901               	andlw	1
  4829  0631  00F1               	movwf	??_send_nibble+1
  4830  0632  0EF1               	swapf	??_send_nibble+1,f
  4831  0633  0DF1               	rlf	??_send_nibble+1,f
  4832  0634  080E               	movf	14,w	;volatile
  4833  0635  0671               	xorwf	??_send_nibble+1,w
  4834  0636  39DF               	andlw	-33
  4835  0637  0671               	xorwf	??_send_nibble+1,w
  4836  0638  008E               	movwf	14	;volatile
  4837  0639  0008               	return
  4838  063A                     __end_of_send_nibble:	
  4839                           
  4840                           	psect	text19
  4841  0396                     __ptext19:	
  4842 ;; *************** function _printf *****************
  4843 ;; Defined at:
  4844 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  f               2    2[COMMON] PTR const unsigned char 
  4847 ;;		 -> STR_12(29), STR_11(29), STR_10(27), STR_9(12), 
  4848 ;;		 -> STR_8(10), STR_7(10), STR_6(9), STR_5(22), 
  4849 ;;		 -> STR_4(29), STR_3(9), STR_2(6), STR_1(17), 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  tmpval          4    0        struct .
  4852 ;;  cp              2    0        PTR const unsigned char 
  4853 ;;  len             2    0        unsigned int 
  4854 ;;  val             2    0        unsigned int 
  4855 ;;  c               1    8[COMMON] char 
  4856 ;;  ap              1    7[COMMON] PTR void [1]
  4857 ;;		 -> ?_printf(2), 
  4858 ;;  flag            1    0        unsigned char 
  4859 ;;  prec            1    0        char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  2    2[COMMON] int 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4871 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4873 ;;Total ram usage:        7 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    2
  4876 ;; This function calls:
  4877 ;;		_putch
  4878 ;; This function is called by:
  4879 ;;		_adc_init
  4880 ;;		_sensor_ping
  4881 ;;		_sensor_reset
  4882 ;;		_send_adc_results
  4883 ;;		_turn_30
  4884 ;;		_turn_90
  4885 ;;		_turn_120
  4886 ;;		_rotate_90_enable
  4887 ;;		_rotate_180_enable
  4888 ;;		_disable_rotate
  4889 ;;		_enter_scan_mode
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _printf
  4895  0396                     _printf:	
  4896                           
  4897                           ;doprnt.c: 466: va_list ap;
  4898                           ;doprnt.c: 499: signed char c;
  4899                           ;doprnt.c: 506: signed char prec;
  4900                           ;doprnt.c: 508: unsigned char flag;
  4901                           ;doprnt.c: 523: union {
  4902                           ;doprnt.c: 524: unsigned long vd;
  4903                           ;doprnt.c: 525: double integ;
  4904                           ;doprnt.c: 526: } tmpval;
  4905                           ;doprnt.c: 528: unsigned int val;
  4906                           ;doprnt.c: 529: unsigned len;
  4907                           ;doprnt.c: 530: const char * cp;
  4908                           ;doprnt.c: 533: *ap = __va_start();
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4912  0396  3074               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4913  0397  00F4               	movwf	??_printf
  4914  0398  0874               	movf	??_printf,w
  4915  0399  00F7               	movwf	printf@ap
  4916  039A                     l1256:	
  4917                           ;doprnt.c: 543: }
  4918                           ;doprnt.c: 1422: {
  4919                           
  4920                           ;doprnt.c: 542: continue;
  4921                           
  4922                           ;doprnt.c: 536: while(c = *f++) {
  4923                           
  4924  039A  0873               	movf	printf@f+1,w
  4925  039B  00F5               	movwf	??_printf+1
  4926  039C  0872               	movf	printf@f,w
  4927  039D  00F4               	movwf	??_printf
  4928  039E  0AF2               	incf	printf@f,f
  4929  039F  1903               	skipnz
  4930  03A0  0AF3               	incf	printf@f+1,f
  4931  03A1  0874               	movf	??_printf,w
  4932  03A2  0084               	movwf	4
  4933  03A3  0875               	movf	??_printf+1,w
  4934  03A4  0085               	movwf	5
  4935  03A5  0800               	movf	0,w	;code access
  4936  03A6  00F6               	movwf	??_printf+2
  4937  03A7  0876               	movf	??_printf+2,w
  4938  03A8  00F8               	movwf	printf@c
  4939  03A9  0878               	movf	printf@c,w
  4940  03AA  1903               	btfsc	3,2
  4941  03AB  0008               	return
  4942                           
  4943                           ;doprnt.c: 540: {
  4944                           ;doprnt.c: 541: (putch(c) );
  4945  03AC  0878               	movf	printf@c,w
  4946  03AD  3183  235B  3183   	fcall	_putch
  4947  03B0  2B9A               	goto	l1256
  4948  03B1                     __end_of_printf:	
  4949                           ;doprnt.c: 1469: }
  4950                           ;doprnt.c: 1533: }
  4951                           ;doprnt.c: 1540: return 0;
  4952                           ;	Return value of _printf is never used
  4953                           
  4954                           
  4955                           	psect	text20
  4956  035B                     __ptext20:	
  4957 ;; *************** function _putch *****************
  4958 ;; Defined at:
  4959 ;;		line 111 in file "mcc_generated_files/eusart.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  txData          1    wreg     unsigned char 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  txData          1    1[COMMON] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, pclath, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4977 ;;Total ram usage:        1 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    1
  4980 ;; This function calls:
  4981 ;;		_EUSART_Write
  4982 ;; This function is called by:
  4983 ;;		_printf
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           
  4988                           ;psect for function _putch
  4989  035B                     _putch:	
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4993                           ;putch@txData stored from wreg
  4994  035B  00F1               	movwf	putch@txData
  4995                           
  4996                           ;eusart.c: 113: EUSART_Write(txData);
  4997  035C  0871               	movf	putch@txData,w
  4998  035D  3183  2360         	fcall	_EUSART_Write
  4999  035F  0008               	return
  5000  0360                     __end_of_putch:	
  5001                           
  5002                           	psect	text21
  5003  0360                     __ptext21:	
  5004 ;; *************** function _EUSART_Write *****************
  5005 ;; Defined at:
  5006 ;;		line 97 in file "mcc_generated_files/eusart.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  txData          1    wreg     unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  txData          1    0[COMMON] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5024 ;;Total ram usage:        1 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_putch
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _EUSART_Write
  5035  0360                     _EUSART_Write:	
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _EUSART_Write: [wreg]
  5039                           ;EUSART_Write@txData stored from wreg
  5040  0360  00F0               	movwf	EUSART_Write@txData
  5041  0361                     l31:	
  5042                           ;eusart.c: 100: {
  5043                           
  5044                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  5045                           
  5046  0361  014E               	movlb	14	; select bank14
  5047  0362  1E0F               	btfss	15,4	;volatile
  5048  0363  2B61               	goto	l31
  5049                           
  5050                           ;eusart.c: 101: }
  5051                           ;eusart.c: 103: TX1REG = txData;
  5052  0364  0870               	movf	EUSART_Write@txData,w
  5053  0365  0142               	movlb	2	; select bank2
  5054  0366  009A               	movwf	26	;volatile
  5055  0367  0008               	return
  5056  0368                     __end_of_EUSART_Write:	
  5057                           
  5058                           	psect	text22
  5059  0368                     __ptext22:	
  5060 ;; *************** function _SYSTEM_Initialize *****************
  5061 ;; Defined at:
  5062 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0, pclath, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5080 ;;Total ram usage:        0 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    1
  5083 ;; This function calls:
  5084 ;;		_EUSART_Initialize
  5085 ;;		_OSCILLATOR_Initialize
  5086 ;;		_PIN_MANAGER_Initialize
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _SYSTEM_Initialize
  5094  0368                     _SYSTEM_Initialize:	
  5095                           
  5096                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5100  0368  3185  259B  3183   	fcall	_PIN_MANAGER_Initialize
  5101                           
  5102                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5103  036B  3183  2371  3183   	fcall	_OSCILLATOR_Initialize
  5104                           
  5105                           ;mcc.c: 87: EUSART_Initialize();
  5106  036E  3183  237B         	fcall	_EUSART_Initialize
  5107  0370  0008               	return
  5108  0371                     __end_of_SYSTEM_Initialize:	
  5109                           
  5110                           	psect	text23
  5111  059B                     __ptext23:	
  5112 ;; *************** function _PIN_MANAGER_Initialize *****************
  5113 ;; Defined at:
  5114 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  state           1    0[COMMON] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5132 ;;Total ram usage:        1 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_SYSTEM_Initialize
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           
  5142                           ;psect for function _PIN_MANAGER_Initialize
  5143  059B                     _PIN_MANAGER_Initialize:	
  5144                           
  5145                           ;pin_manager.c: 52: LATB = 0x0;
  5146                           
  5147                           ;incstack = 0
  5148                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5149  059B  0140               	movlb	0	; select bank0
  5150  059C  0197               	clrf	23	;volatile
  5151                           
  5152                           ;pin_manager.c: 53: LATA = 0x0;
  5153  059D  0196               	clrf	22	;volatile
  5154                           
  5155                           ;pin_manager.c: 54: LATC = 0x0;
  5156  059E  0198               	clrf	24	;volatile
  5157                           
  5158                           ;pin_manager.c: 55: WPUA = 0x0;
  5159  059F  017E               	movlb	62	; select bank62
  5160  05A0  01B9               	clrf	57	;volatile
  5161                           
  5162                           ;pin_manager.c: 56: WPUB = 0x0;
  5163  05A1  01C4               	clrf	68	;volatile
  5164                           
  5165                           ;pin_manager.c: 57: WPUC = 0x0;
  5166  05A2  01CF               	clrf	79	;volatile
  5167                           
  5168                           ;pin_manager.c: 58: ANSELA = 0xFF;
  5169  05A3  30FF               	movlw	255
  5170  05A4  00B8               	movwf	56	;volatile
  5171                           
  5172                           ;pin_manager.c: 59: ANSELB = 0xFF;
  5173  05A5  30FF               	movlw	255
  5174  05A6  00C3               	movwf	67	;volatile
  5175                           
  5176                           ;pin_manager.c: 60: ANSELC = 0x7F;
  5177  05A7  307F               	movlw	127
  5178  05A8  00CE               	movwf	78	;volatile
  5179                           
  5180                           ;pin_manager.c: 61: TRISB = 0xFF;
  5181  05A9  30FF               	movlw	255
  5182  05AA  0140               	movlb	0	; select bank0
  5183  05AB  0092               	movwf	18	;volatile
  5184                           
  5185                           ;pin_manager.c: 62: TRISC = 0xBF;
  5186  05AC  30BF               	movlw	191
  5187  05AD  0093               	movwf	19	;volatile
  5188                           
  5189                           ;pin_manager.c: 63: TRISA = 0xFF;
  5190  05AE  30FF               	movlw	255
  5191  05AF  0091               	movwf	17	;volatile
  5192                           
  5193                           ;pin_manager.c: 68: bool state = GIE;
  5194  05B0  3000               	movlw	0
  5195  05B1  1B8B               	btfsc	11,7	;volatile
  5196  05B2  3001               	movlw	1
  5197  05B3  00F0               	movwf	PIN_MANAGER_Initialize@state
  5198                           
  5199                           ;pin_manager.c: 69: GIE = 0;
  5200  05B4  138B               	bcf	11,7	;volatile
  5201                           
  5202                           ;pin_manager.c: 70: PPSLOCK = 0x55;
  5203  05B5  3055               	movlw	85
  5204  05B6  017D               	movlb	61	; select bank61
  5205  05B7  008F               	movwf	15	;volatile
  5206                           
  5207                           ;pin_manager.c: 71: PPSLOCK = 0xAA;
  5208  05B8  30AA               	movlw	170
  5209  05B9  008F               	movwf	15	;volatile
  5210                           
  5211                           ;pin_manager.c: 72: PPSLOCKbits.PPSLOCKED = 0x00;
  5212  05BA  100F               	bcf	15,0	;volatile
  5213                           
  5214                           ;pin_manager.c: 74: RXPPS = 0x17;
  5215  05BB  3017               	movlw	23
  5216  05BC  00CB               	movwf	75	;volatile
  5217                           
  5218                           ;pin_manager.c: 75: RC6PPS = 0x10;
  5219  05BD  3010               	movlw	16
  5220  05BE  017E               	movlb	62	; select bank62
  5221  05BF  00A6               	movwf	38	;volatile
  5222                           
  5223                           ;pin_manager.c: 77: RC3PPS = 0x09;
  5224  05C0  3009               	movlw	9
  5225  05C1  00A3               	movwf	35	;volatile
  5226                           
  5227                           ;pin_manager.c: 79: PPSLOCK = 0x55;
  5228  05C2  3055               	movlw	85
  5229  05C3  017D               	movlb	61	; select bank61
  5230  05C4  008F               	movwf	15	;volatile
  5231                           
  5232                           ;pin_manager.c: 80: PPSLOCK = 0xAA;
  5233  05C5  30AA               	movlw	170
  5234  05C6  008F               	movwf	15	;volatile
  5235                           
  5236                           ;pin_manager.c: 81: PPSLOCKbits.PPSLOCKED = 0x01;
  5237  05C7  140F               	bsf	15,0	;volatile
  5238                           
  5239                           ;pin_manager.c: 83: GIE = state;
  5240  05C8  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  5241  05C9  2DCC               	goto	u470
  5242  05CA  178B               	bsf	11,7	;volatile
  5243  05CB  0008               	return
  5244  05CC                     u470:	
  5245  05CC  138B               	bcf	11,7	;volatile
  5246  05CD  0008               	return
  5247  05CE                     __end_of_PIN_MANAGER_Initialize:	
  5248                           
  5249                           	psect	text24
  5250  0371                     __ptext24:	
  5251 ;; *************** function _OSCILLATOR_Initialize *****************
  5252 ;; Defined at:
  5253 ;;		line 90 in file "mcc_generated_files/mcc.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_SYSTEM_Initialize
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           
  5281                           ;psect for function _OSCILLATOR_Initialize
  5282  0371                     _OSCILLATOR_Initialize:	
  5283                           
  5284                           ;mcc.c: 93: OSCCON1 = 0x62;
  5285                           
  5286                           ;incstack = 0
  5287                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5288  0371  3062               	movlw	98
  5289  0372  0151               	movlb	17	; select bank17
  5290  0373  008D               	movwf	13	;volatile
  5291                           
  5292                           ;mcc.c: 95: OSCCON3 = 0x00;
  5293  0374  018F               	clrf	15	;volatile
  5294                           
  5295                           ;mcc.c: 97: OSCEN = 0x00;
  5296  0375  0191               	clrf	17	;volatile
  5297                           
  5298                           ;mcc.c: 99: OSCFRQ = 0x02;
  5299  0376  3002               	movlw	2
  5300  0377  0093               	movwf	19	;volatile
  5301                           
  5302                           ;mcc.c: 101: OSCSTAT = 0x00;
  5303  0378  0190               	clrf	16	;volatile
  5304                           
  5305                           ;mcc.c: 103: OSCTUNE = 0x00;
  5306  0379  0192               	clrf	18	;volatile
  5307  037A  0008               	return
  5308  037B                     __end_of_OSCILLATOR_Initialize:	
  5309                           
  5310                           	psect	text25
  5311  037B                     __ptext25:	
  5312 ;; *************** function _EUSART_Initialize *****************
  5313 ;; Defined at:
  5314 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, status,2
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_SYSTEM_Initialize
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function _EUSART_Initialize
  5343  037B                     _EUSART_Initialize:	
  5344                           
  5345                           ;eusart.c: 60: BAUD1CON = 0x08;
  5346                           
  5347                           ;incstack = 0
  5348                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5349  037B  3008               	movlw	8
  5350  037C  0142               	movlb	2	; select bank2
  5351  037D  009F               	movwf	31	;volatile
  5352                           
  5353                           ;eusart.c: 63: RC1STA = 0x90;
  5354  037E  3090               	movlw	144
  5355  037F  009D               	movwf	29	;volatile
  5356                           
  5357                           ;eusart.c: 66: TX1STA = 0x24;
  5358  0380  3024               	movlw	36
  5359  0381  009E               	movwf	30	;volatile
  5360                           
  5361                           ;eusart.c: 69: SP1BRGL = 0x19;
  5362  0382  3019               	movlw	25
  5363  0383  009B               	movwf	27	;volatile
  5364                           
  5365                           ;eusart.c: 72: SP1BRGH = 0x00;
  5366  0384  019C               	clrf	28	;volatile
  5367  0385  0008               	return
  5368  0386                     __end_of_EUSART_Initialize:	
  5369  007E                     btemp	set	126	;btemp
  5370  007E                     wtemp0	set	126


Data Sizes:
    Strings     180
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      18
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_12(CODE[29]), STR_11(CODE[29]), STR_10(CODE[27]), STR_9(CODE[12]), 
		 -> STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[22]), 
		 -> STR_4(CODE[29]), STR_3(CODE[9]), STR_2(CODE[6]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_set_pwm_duty
    _turn_90->_set_pwm_duty
    _turn_30->_set_pwm_duty
    _turn_120->_set_pwm_duty
    _sensor_reset->_set_pwm_duty
    _sensor_ping->_printf
    _send_adc_results->_printf
    _rotate_90_enable->_printf
    _rotate_180_enable->_printf
    _receive_msg->_return_bus_nibble
    _receive_msg->_wait_while_strobe
    _handle_scan->_set_pwm_duty
    _everything_init->_set_pwm_duty
    _set_pwm_duty->___lwdiv
    _adc_init->_printf
    _disable_rotate->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _main in BANK0

    _main->_send_adc_results

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   51125
                                              5 BANK0      3     3      0
                  _SYSTEM_Initialize
                     _disable_rotate
                    _everything_init
                        _handle_scan
                        _receive_msg
                  _rotate_180_enable
                   _rotate_90_enable
                   _send_adc_results
                        _sensor_ping
                       _sensor_reset
                       _set_pwm_duty
                           _turn_120
                            _turn_30
                            _turn_90
 ---------------------------------------------------------------------------------
 (1) _turn_90                                              0     0      0    5335
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _turn_30                                              0     0      0    5335
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _turn_120                                             0     0      0    5335
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _sensor_reset                                         0     0      0    5335
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _sensor_ping                                          0     0      0    4488
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _send_adc_results                                     8     8      0    4624
                                              9 COMMON     3     3      0
                                              0 BANK0      5     5      0
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _rotate_90_enable                                     0     0      0    4488
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _rotate_180_enable                                    0     0      0    4488
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _receive_msg                                          4     4      0    3565
                                              4 COMMON     4     4      0
                  _return_bus_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (2) _return_bus_nibble                                    4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _handle_scan                                          1     1      0     847
                                              0 BANK0      1     1      0
                       _set_pwm_duty
 ---------------------------------------------------------------------------------
 (1) _everything_init                                      0     0      0    1705
                           _adc_init
                       _set_pwm_duty
 ---------------------------------------------------------------------------------
 (2) _set_pwm_duty                                         6     4      2     847
                                              8 COMMON     6     4      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0     858
                             _printf
 ---------------------------------------------------------------------------------
 (1) _disable_rotate                                       0     0      0    4488
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (2) _wait_while_strobe                                    4     2      2    3542
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_nibble                                          3     3      0      88
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     858
                                              2 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _disable_rotate
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
   _everything_init
     _adc_init
       _printf
         _putch
           _EUSART_Write
     _set_pwm_duty
       ___lwdiv
   _handle_scan
     _set_pwm_duty
       ___lwdiv
   _receive_msg
     _return_bus_nibble
     _wait_while_strobe
   _rotate_180_enable
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
   _rotate_90_enable
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
   _send_adc_results
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
   _sensor_ping
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
   _sensor_reset
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe
   _set_pwm_duty
     ___lwdiv
   _turn_120
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe
   _turn_30
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe
   _turn_90
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      12       5       22.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      20      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      20      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Dec 13 02:39:15 2017

               _rotate_90_enable 0569                      __CFG_CP$OFF 0000                               l31 0361  
               ??_disable_rotate 0079         __size_of_everything_init 0027                      __CFG_LVP$ON 0000  
                    __CFG_ZCD$ON 0000                              l208 0756                              l256 06EC  
                            _GIE 005F                              _PR2 028D                              u415 05D9  
                            u505 061C                     __CFG_CPD$OFF 0000                              u515 062C  
                            u435 05E3                              u445 05ED                              u605 06A9  
                            u525 03D3                              u470 05CC                              u455 05F5  
                            u535 03DB                              u555 0769                              u495 0393  
                            u737 06D9                              u595 0698         __end_of_send_adc_results 07F2  
                   __CFG_BORV$LO 0000                              wreg 0009                             l1342 0386  
                           l1270 05E2                             l1256 039A                             l1280 05FD  
                           l1600 0682                             l1276 05F4                             l1268 05D6  
                           l1608 069E                             l1660 06FB                             l1654 06ED  
                           l1584 041E                             l1680 0727                             l1672 0715  
                           l1664 0703                             l1648 06E2                             l1586 042B  
                           l1692 0742                             l1684 0730                             l1676 071E  
                           l1668 070C                             l1688 0739                             STR_1 086B  
                           STR_2 08AE                             STR_3 08A5                             STR_4 081D  
                           STR_5 0855                             STR_6 089C                             STR_7 0892  
                           STR_8 0888                             STR_9 087C                             _LATA 0016  
                           _LATB 0017                             _LATC 0018                             _PIR4 0710  
                           _WPUA 1F39                             _WPUB 1F44                             _WPUC 1F4F  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                             _main 06B1  
                           fsr0h 0005                             indf0 0000                             fsr0l 0004  
                           btemp 007E                    __CFG_BOREN$ON 0000       __size_of_rotate_180_enable 0030  
                           start 0003                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                  ?_EUSART_Write 0070   __size_of_OSCILLATOR_Initialize 000A    __end_of_OSCILLATOR_Initialize 037B  
                          _ADACT 0099                            _ADCAP 009B                            ?_main 0070  
                          _ADPCH 009E                            _ADREF 009A                            _ADPRE 009C  
                          STR_10 083A                            STR_11 0800                            STR_12 0800  
                  __CFG_WDTE$OFF 0000                            _T2CON 028E                  __end_of___lwdiv 0602  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013                            _RXPPS 1ECB                            _putch 035B  
                          status 0003                            wtemp0 007E                  __end_of_turn_30 050A  
                __end_of_turn_90 0539                     ?_receive_msg 0070                  __initialization 07F2  
                   __end_of_main 074B                   ??_EUSART_Write 0070                _return_bus_nibble 03CD  
                         ??_main 002F               ?_return_bus_nibble 0070                ??_everything_init 007E  
            ??_return_bus_nibble 0070             __size_of_handle_scan 003C                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                   ?_send_nibble 0070                           _ADRESH 008D                           _ADRESL 008C  
                         _CCPR1H 030D                           _CCPR1L 030C                           _ADSTAT 0097  
                         _ANSELA 1F38                           ?_putch 0070                           _ANSELB 1F43  
                         _ANSELC 1F4E               __CFG_RSTOSC$HFINT1 0000                           _T0CON0 001E  
                         _T0CON1 001F                           _RC1REG 0119                 __end_of_adc_init 03CD  
                         _RC1STA 011D                           _RC3PPS 1F23                           _RC6PPS 1F26  
                 __CFG_WDTCCS$SC 0000                           _OSCFRQ 0893                           _TX1REG 011A  
                         _TX1STA 011E                   __CFG_PWRTE$OFF 0000        __end_of_return_bus_nibble 03EC  
                 __CFG_STVREN$ON 0000                        ??___lwdiv 0074           wait_while_strobe@state 0070  
                         _printf 0396                     ?_sensor_ping 0070         __end_of_rotate_90_enable 059B  
                      ??_turn_30 007E                        ??_turn_90 007E                 __end_of_turn_120 04DB  
              _SYSTEM_Initialize 0368          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0071                    __end_of_putch 0360  
              ?_send_adc_results 0070               ??_send_adc_results 0079        __end_of_SYSTEM_Initialize 0371  
                        ??_putch 0071                       __pbssBANK0 0020             __end_of_EUSART_Write 0368  
                     __pmaintext 06B1             __size_of_receive_msg 0024       __size_of_return_bus_nibble 001F  
                __CFG_PPS1WAY$ON 0000                          _CCP1CON 030E                          ?_printf 0072  
                      ?_adc_init 0070                          _SP1BRGH 011C                          _SP1BRGL 011B  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCSTAT 0890  
                        _OSCTUNE 0892                          _PPSLOCK 1E8F                       _isScanning 0028  
           __size_of_send_nibble 0038             __CFG_SCANE$available 0000                  _everything_init 0432  
                        ___lwdiv 05CE                        ?_turn_120 0070                       ??_adc_init 0079  
                        __ptext1 050A                          __ptext2 04DB                          __ptext3 04AD  
                        __ptext4 063A                          __ptext5 0481                          __ptext6 074B  
                        __ptext7 0569                          __ptext8 0539                          __ptext9 040E  
                __size_of_printf 001B                    ?_set_pwm_duty 0078            _OSCILLATOR_Initialize 0371  
       ??_PIN_MANAGER_Initialize 0070             __size_of_sensor_ping 002C          __size_of_disable_rotate 0028  
     __size_of_SYSTEM_Initialize 0009                          main@msg 0031                          _turn_30 04DB  
                        _turn_90 050A             end_of_initialization 07FD                    ?_sensor_reset 0070  
              _wait_while_strobe 0386                _EUSART_Initialize 037B               ?_wait_while_strobe 0070  
             ?_EUSART_Initialize 0070                          printf@c 0078                          printf@f 0072  
              send_nibble@nibble 0072              ??_wait_while_strobe 0072                       ??_turn_120 007E  
          __CFG_WDTCPS$WDTCPS_31 0000              ??_EUSART_Initialize 0070                        _PORTAbits 000C  
                      _PORTCbits 000E                   ??_set_pwm_duty 007A                     _isScanningUp 0024  
                  ??_handle_scan 002A                        _TRISAbits 0011            __size_of_EUSART_Write 0008  
               __CFG_FEXTOSC$OFF 0000                ?_rotate_90_enable 0070        __end_of_wait_while_strobe 0396  
                 ??_sensor_reset 007E               ??_rotate_90_enable 0079        __end_of_EUSART_Initialize 0386  
        __end_of_everything_init 0459                     _EUSART_Write 0360           ?_OSCILLATOR_Initialize 0070  
                 __end_of_printf 03B1              start_initialization 07F2  __size_of_PIN_MANAGER_Initialize 0033  
                    putch@txData 0071              __end_of_handle_scan 06B1        __size_of_send_adc_results 00A7  
               __CFG_LPBOREN$OFF 0000                         ??_printf 0074                __size_of_adc_init 001C  
                      ___latbits 0004                    __pcstackBANK0 002A                   _disable_rotate 0459  
     __size_of_wait_while_strobe 0010       __size_of_EUSART_Initialize 000B                    ??_receive_msg 0074  
           __end_of_set_pwm_duty 040E                 ?_everything_init 0070                 ___lwdiv@dividend 0072  
         _PIN_MANAGER_Initialize 059B                         ?___lwdiv 0070             __end_of_sensor_reset 0675  
                 set_pwm_duty@pr 007C                         _BAUD1CON 011F                __size_of_turn_120 002E  
         __end_of_disable_rotate 0481                      _handle_scan 0675                         _CCPTMRS0 021E  
                  ??_send_nibble 0070                 ___lwdiv@quotient 0075                         ?_turn_30 0070  
                       ?_turn_90 0070                         _T2CLKCON 0290                   __size_of_putch 0005  
                       _PIR0bits 070C                         _PIR3bits 070F                   _scanLowerLimit 0020  
            __end_of_receive_msg 0432                 set_pwm_duty@duty 0078                    ??_sensor_ping 0079  
                ?_disable_rotate 0070              __end_of_send_nibble 063A                 _send_adc_results 074B  
                 _scanUpperLimit 0022        __size_of_rotate_90_enable 0032          ??_OSCILLATOR_Initialize 0070  
               __size_of___lwdiv 0034                         _adc_init 03B1                       _ANSELAbits 1F38  
                ___lwdiv@divisor 0070                      _scanCounter 0026                  ___lwdiv@counter 0077  
                       __ptext10 03CD                         __ptext11 0675                         __ptext20 035B  
                       __ptext12 0432                         __ptext21 0360                         __ptext13 03EC  
                       __ptext22 0368                         __ptext14 05CE                         __ptext23 059B  
                       __ptext15 03B1                         __ptext24 0371                         __ptext16 0459  
                       __ptext25 037B                         __ptext17 0386                         __ptext18 0602  
                       __ptext19 0396              __end_of_sensor_ping 04AD            __size_of_set_pwm_duty 0022  
               __size_of_turn_30 002F                 __size_of_turn_90 002F                    __size_of_main 009A  
           __CFG_WDTCWS$WDTCWS_7 0000                      _receive_msg 040E                       _RC1STAbits 011D  
              _rotate_180_enable 0539            __size_of_sensor_reset 003B               ?_rotate_180_enable 0070  
                       _turn_120 04AD      PIN_MANAGER_Initialize@state 0070          send_adc_results@results 002D  
            ??_rotate_180_enable 0079                     _set_pwm_duty 03EC                   __pstringtext10 08A5  
                 __pstringtext11 08AE                   __pstringtext12 0000                      _send_nibble 0602  
             receive_msg@results 0076                     _sensor_reset 063A          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 1E8F        __end_of_rotate_180_enable 0569  
                       printf@ap 0077                    __pstringtext1 0800                    __pstringtext2 081D  
                  __pstringtext3 083A                    __pstringtext4 0855                    __pstringtext5 086B  
                  __pstringtext6 087C                    __pstringtext7 0888                    __pstringtext8 0892  
                  __pstringtext9 089C                      _sensor_ping 0481                     ?_handle_scan 0070  
             EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 05CE             send_adc_results@nib1 002A  
           send_adc_results@nib2 002B             send_adc_results@nib3 002C  
