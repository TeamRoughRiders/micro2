

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Dec 13 04:12:42 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F18857
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 1.42
    49                           ; Generated 13/04/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F18857 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  001C                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0110                     	;# 
   137  0110                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0119                     	;# 
   149  0119                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011A                     	;# 
   153  011A                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011B                     	;# 
   158  011B                     	;# 
   159  011C                     	;# 
   160  011C                     	;# 
   161  011C                     	;# 
   162  011D                     	;# 
   163  011D                     	;# 
   164  011D                     	;# 
   165  011E                     	;# 
   166  011E                     	;# 
   167  011E                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  011F                     	;# 
   172  011F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  018E                     	;# 
   176  018F                     	;# 
   177  0190                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0196                     	;# 
   181  0197                     	;# 
   182  0198                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019C                     	;# 
   187  020C                     	;# 
   188  020C                     	;# 
   189  020D                     	;# 
   190  020E                     	;# 
   191  020F                     	;# 
   192  020F                     	;# 
   193  0210                     	;# 
   194  0210                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0214                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  0218                     	;# 
   208  0218                     	;# 
   209  0219                     	;# 
   210  021A                     	;# 
   211  021B                     	;# 
   212  021B                     	;# 
   213  021C                     	;# 
   214  021C                     	;# 
   215  021D                     	;# 
   216  021D                     	;# 
   217  021E                     	;# 
   218  021F                     	;# 
   219  028C                     	;# 
   220  028C                     	;# 
   221  028D                     	;# 
   222  028D                     	;# 
   223  028E                     	;# 
   224  028F                     	;# 
   225  0290                     	;# 
   226  0290                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0293                     	;# 
   232  0294                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0296                     	;# 
   236  0297                     	;# 
   237  0298                     	;# 
   238  0298                     	;# 
   239  0299                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  029B                     	;# 
   243  029C                     	;# 
   244  029C                     	;# 
   245  029D                     	;# 
   246  030C                     	;# 
   247  030C                     	;# 
   248  030D                     	;# 
   249  030E                     	;# 
   250  030F                     	;# 
   251  0310                     	;# 
   252  0310                     	;# 
   253  0311                     	;# 
   254  0312                     	;# 
   255  0313                     	;# 
   256  0314                     	;# 
   257  0314                     	;# 
   258  0315                     	;# 
   259  0316                     	;# 
   260  0317                     	;# 
   261  0318                     	;# 
   262  0318                     	;# 
   263  0319                     	;# 
   264  031A                     	;# 
   265  031B                     	;# 
   266  031C                     	;# 
   267  031C                     	;# 
   268  031D                     	;# 
   269  031E                     	;# 
   270  031F                     	;# 
   271  038C                     	;# 
   272  038D                     	;# 
   273  038E                     	;# 
   274  0390                     	;# 
   275  0391                     	;# 
   276  0392                     	;# 
   277  040C                     	;# 
   278  040D                     	;# 
   279  040E                     	;# 
   280  040F                     	;# 
   281  0410                     	;# 
   282  0411                     	;# 
   283  0416                     	;# 
   284  0416                     	;# 
   285  0417                     	;# 
   286  0418                     	;# 
   287  0418                     	;# 
   288  0419                     	;# 
   289  041A                     	;# 
   290  041A                     	;# 
   291  041B                     	;# 
   292  041C                     	;# 
   293  041C                     	;# 
   294  041D                     	;# 
   295  041E                     	;# 
   296  041F                     	;# 
   297  048C                     	;# 
   298  048C                     	;# 
   299  048D                     	;# 
   300  048E                     	;# 
   301  048F                     	;# 
   302  048F                     	;# 
   303  0490                     	;# 
   304  0491                     	;# 
   305  0492                     	;# 
   306  0492                     	;# 
   307  0493                     	;# 
   308  0494                     	;# 
   309  0495                     	;# 
   310  0495                     	;# 
   311  0496                     	;# 
   312  0497                     	;# 
   313  0498                     	;# 
   314  0499                     	;# 
   315  049A                     	;# 
   316  049B                     	;# 
   317  049C                     	;# 
   318  049D                     	;# 
   319  050C                     	;# 
   320  050C                     	;# 
   321  050D                     	;# 
   322  050E                     	;# 
   323  050F                     	;# 
   324  050F                     	;# 
   325  0510                     	;# 
   326  0511                     	;# 
   327  0512                     	;# 
   328  0512                     	;# 
   329  0513                     	;# 
   330  0514                     	;# 
   331  0515                     	;# 
   332  0515                     	;# 
   333  0516                     	;# 
   334  0517                     	;# 
   335  0518                     	;# 
   336  0519                     	;# 
   337  051A                     	;# 
   338  051B                     	;# 
   339  051C                     	;# 
   340  051D                     	;# 
   341  058C                     	;# 
   342  058C                     	;# 
   343  058D                     	;# 
   344  058E                     	;# 
   345  058F                     	;# 
   346  058F                     	;# 
   347  0590                     	;# 
   348  0591                     	;# 
   349  0592                     	;# 
   350  0593                     	;# 
   351  060C                     	;# 
   352  060D                     	;# 
   353  060E                     	;# 
   354  060F                     	;# 
   355  0610                     	;# 
   356  0611                     	;# 
   357  0612                     	;# 
   358  0613                     	;# 
   359  0614                     	;# 
   360  0616                     	;# 
   361  0617                     	;# 
   362  0618                     	;# 
   363  0619                     	;# 
   364  061A                     	;# 
   365  061B                     	;# 
   366  061C                     	;# 
   367  061D                     	;# 
   368  061E                     	;# 
   369  068C                     	;# 
   370  068D                     	;# 
   371  068E                     	;# 
   372  068F                     	;# 
   373  0690                     	;# 
   374  0691                     	;# 
   375  0692                     	;# 
   376  0693                     	;# 
   377  0694                     	;# 
   378  070C                     	;# 
   379  070D                     	;# 
   380  070E                     	;# 
   381  070F                     	;# 
   382  0710                     	;# 
   383  0711                     	;# 
   384  0712                     	;# 
   385  0713                     	;# 
   386  0714                     	;# 
   387  0716                     	;# 
   388  0717                     	;# 
   389  0718                     	;# 
   390  0719                     	;# 
   391  071A                     	;# 
   392  071B                     	;# 
   393  071C                     	;# 
   394  071D                     	;# 
   395  071E                     	;# 
   396  0796                     	;# 
   397  0797                     	;# 
   398  0798                     	;# 
   399  0799                     	;# 
   400  079A                     	;# 
   401  079B                     	;# 
   402  080C                     	;# 
   403  080D                     	;# 
   404  080E                     	;# 
   405  080F                     	;# 
   406  0810                     	;# 
   407  0811                     	;# 
   408  0812                     	;# 
   409  0813                     	;# 
   410  0814                     	;# 
   411  081A                     	;# 
   412  081B                     	;# 
   413  081C                     	;# 
   414  081D                     	;# 
   415  081E                     	;# 
   416  081F                     	;# 
   417  088C                     	;# 
   418  088D                     	;# 
   419  088E                     	;# 
   420  088F                     	;# 
   421  0890                     	;# 
   422  0891                     	;# 
   423  0892                     	;# 
   424  0893                     	;# 
   425  0895                     	;# 
   426  0896                     	;# 
   427  0897                     	;# 
   428  0898                     	;# 
   429  0899                     	;# 
   430  089A                     	;# 
   431  089B                     	;# 
   432  090C                     	;# 
   433  090E                     	;# 
   434  090F                     	;# 
   435  091F                     	;# 
   436  098F                     	;# 
   437  098F                     	;# 
   438  0990                     	;# 
   439  0991                     	;# 
   440  0992                     	;# 
   441  0993                     	;# 
   442  0994                     	;# 
   443  0995                     	;# 
   444  0996                     	;# 
   445  0997                     	;# 
   446  1E0F                     	;# 
   447  1E10                     	;# 
   448  1E11                     	;# 
   449  1E12                     	;# 
   450  1E13                     	;# 
   451  1E14                     	;# 
   452  1E15                     	;# 
   453  1E16                     	;# 
   454  1E17                     	;# 
   455  1E18                     	;# 
   456  1E19                     	;# 
   457  1E1A                     	;# 
   458  1E1B                     	;# 
   459  1E1C                     	;# 
   460  1E1D                     	;# 
   461  1E1E                     	;# 
   462  1E1F                     	;# 
   463  1E20                     	;# 
   464  1E21                     	;# 
   465  1E22                     	;# 
   466  1E23                     	;# 
   467  1E24                     	;# 
   468  1E25                     	;# 
   469  1E26                     	;# 
   470  1E27                     	;# 
   471  1E28                     	;# 
   472  1E29                     	;# 
   473  1E2A                     	;# 
   474  1E2B                     	;# 
   475  1E2C                     	;# 
   476  1E2D                     	;# 
   477  1E2E                     	;# 
   478  1E2F                     	;# 
   479  1E30                     	;# 
   480  1E31                     	;# 
   481  1E32                     	;# 
   482  1E33                     	;# 
   483  1E34                     	;# 
   484  1E35                     	;# 
   485  1E36                     	;# 
   486  1E37                     	;# 
   487  1E8F                     	;# 
   488  1E90                     	;# 
   489  1E91                     	;# 
   490  1E92                     	;# 
   491  1E93                     	;# 
   492  1E94                     	;# 
   493  1E95                     	;# 
   494  1E96                     	;# 
   495  1E97                     	;# 
   496  1E9C                     	;# 
   497  1E9D                     	;# 
   498  1E9E                     	;# 
   499  1EA1                     	;# 
   500  1EA2                     	;# 
   501  1EA3                     	;# 
   502  1EA4                     	;# 
   503  1EA5                     	;# 
   504  1EA9                     	;# 
   505  1EAA                     	;# 
   506  1EAB                     	;# 
   507  1EAC                     	;# 
   508  1EB1                     	;# 
   509  1EB2                     	;# 
   510  1EB3                     	;# 
   511  1EB8                     	;# 
   512  1EB9                     	;# 
   513  1EBA                     	;# 
   514  1EBB                     	;# 
   515  1EBC                     	;# 
   516  1EBD                     	;# 
   517  1EBE                     	;# 
   518  1EC3                     	;# 
   519  1EC5                     	;# 
   520  1EC6                     	;# 
   521  1EC7                     	;# 
   522  1EC8                     	;# 
   523  1EC9                     	;# 
   524  1ECA                     	;# 
   525  1ECB                     	;# 
   526  1ECC                     	;# 
   527  1F10                     	;# 
   528  1F11                     	;# 
   529  1F12                     	;# 
   530  1F13                     	;# 
   531  1F14                     	;# 
   532  1F15                     	;# 
   533  1F16                     	;# 
   534  1F17                     	;# 
   535  1F18                     	;# 
   536  1F19                     	;# 
   537  1F1A                     	;# 
   538  1F1B                     	;# 
   539  1F1C                     	;# 
   540  1F1D                     	;# 
   541  1F1E                     	;# 
   542  1F1F                     	;# 
   543  1F20                     	;# 
   544  1F21                     	;# 
   545  1F22                     	;# 
   546  1F23                     	;# 
   547  1F24                     	;# 
   548  1F25                     	;# 
   549  1F26                     	;# 
   550  1F27                     	;# 
   551  1F38                     	;# 
   552  1F39                     	;# 
   553  1F3A                     	;# 
   554  1F3B                     	;# 
   555  1F3C                     	;# 
   556  1F3D                     	;# 
   557  1F3E                     	;# 
   558  1F3F                     	;# 
   559  1F40                     	;# 
   560  1F41                     	;# 
   561  1F43                     	;# 
   562  1F44                     	;# 
   563  1F45                     	;# 
   564  1F46                     	;# 
   565  1F47                     	;# 
   566  1F48                     	;# 
   567  1F49                     	;# 
   568  1F4A                     	;# 
   569  1F4B                     	;# 
   570  1F4C                     	;# 
   571  1F4E                     	;# 
   572  1F4F                     	;# 
   573  1F50                     	;# 
   574  1F51                     	;# 
   575  1F52                     	;# 
   576  1F53                     	;# 
   577  1F54                     	;# 
   578  1F55                     	;# 
   579  1F56                     	;# 
   580  1F57                     	;# 
   581  1F65                     	;# 
   582  1F68                     	;# 
   583  1F69                     	;# 
   584  1F6A                     	;# 
   585  1F6B                     	;# 
   586  1FE4                     	;# 
   587  1FE5                     	;# 
   588  1FE6                     	;# 
   589  1FE7                     	;# 
   590  1FE8                     	;# 
   591  1FE9                     	;# 
   592  1FEA                     	;# 
   593  1FEB                     	;# 
   594  1FED                     	;# 
   595  1FEE                     	;# 
   596  1FEF                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0008                     	;# 
   606  0009                     	;# 
   607  000A                     	;# 
   608  000B                     	;# 
   609  000C                     	;# 
   610  000D                     	;# 
   611  000E                     	;# 
   612  0010                     	;# 
   613  0011                     	;# 
   614  0012                     	;# 
   615  0013                     	;# 
   616  0016                     	;# 
   617  0017                     	;# 
   618  0018                     	;# 
   619  001C                     	;# 
   620  001C                     	;# 
   621  001D                     	;# 
   622  001D                     	;# 
   623  001E                     	;# 
   624  001F                     	;# 
   625  008C                     	;# 
   626  008C                     	;# 
   627  008D                     	;# 
   628  008E                     	;# 
   629  008E                     	;# 
   630  008F                     	;# 
   631  0090                     	;# 
   632  0090                     	;# 
   633  0091                     	;# 
   634  0093                     	;# 
   635  0094                     	;# 
   636  0095                     	;# 
   637  0096                     	;# 
   638  0097                     	;# 
   639  0098                     	;# 
   640  0099                     	;# 
   641  009A                     	;# 
   642  009B                     	;# 
   643  009C                     	;# 
   644  009D                     	;# 
   645  009E                     	;# 
   646  010C                     	;# 
   647  010D                     	;# 
   648  010E                     	;# 
   649  010E                     	;# 
   650  010F                     	;# 
   651  0110                     	;# 
   652  0110                     	;# 
   653  0111                     	;# 
   654  0112                     	;# 
   655  0112                     	;# 
   656  0113                     	;# 
   657  0114                     	;# 
   658  0114                     	;# 
   659  0115                     	;# 
   660  0116                     	;# 
   661  0116                     	;# 
   662  0117                     	;# 
   663  0119                     	;# 
   664  0119                     	;# 
   665  0119                     	;# 
   666  011A                     	;# 
   667  011A                     	;# 
   668  011A                     	;# 
   669  011B                     	;# 
   670  011B                     	;# 
   671  011B                     	;# 
   672  011B                     	;# 
   673  011B                     	;# 
   674  011C                     	;# 
   675  011C                     	;# 
   676  011C                     	;# 
   677  011D                     	;# 
   678  011D                     	;# 
   679  011D                     	;# 
   680  011E                     	;# 
   681  011E                     	;# 
   682  011E                     	;# 
   683  011F                     	;# 
   684  011F                     	;# 
   685  011F                     	;# 
   686  011F                     	;# 
   687  011F                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  018F                     	;# 
   692  0190                     	;# 
   693  0191                     	;# 
   694  0192                     	;# 
   695  0196                     	;# 
   696  0197                     	;# 
   697  0198                     	;# 
   698  0199                     	;# 
   699  019A                     	;# 
   700  019B                     	;# 
   701  019C                     	;# 
   702  020C                     	;# 
   703  020C                     	;# 
   704  020D                     	;# 
   705  020E                     	;# 
   706  020F                     	;# 
   707  020F                     	;# 
   708  0210                     	;# 
   709  0210                     	;# 
   710  0211                     	;# 
   711  0211                     	;# 
   712  0212                     	;# 
   713  0212                     	;# 
   714  0213                     	;# 
   715  0214                     	;# 
   716  0215                     	;# 
   717  0215                     	;# 
   718  0216                     	;# 
   719  0216                     	;# 
   720  0217                     	;# 
   721  0217                     	;# 
   722  0218                     	;# 
   723  0218                     	;# 
   724  0219                     	;# 
   725  021A                     	;# 
   726  021B                     	;# 
   727  021B                     	;# 
   728  021C                     	;# 
   729  021C                     	;# 
   730  021D                     	;# 
   731  021D                     	;# 
   732  021E                     	;# 
   733  021F                     	;# 
   734  028C                     	;# 
   735  028C                     	;# 
   736  028D                     	;# 
   737  028D                     	;# 
   738  028E                     	;# 
   739  028F                     	;# 
   740  0290                     	;# 
   741  0290                     	;# 
   742  0291                     	;# 
   743  0292                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0293                     	;# 
   747  0294                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0296                     	;# 
   751  0297                     	;# 
   752  0298                     	;# 
   753  0298                     	;# 
   754  0299                     	;# 
   755  0299                     	;# 
   756  029A                     	;# 
   757  029B                     	;# 
   758  029C                     	;# 
   759  029C                     	;# 
   760  029D                     	;# 
   761  030C                     	;# 
   762  030C                     	;# 
   763  030D                     	;# 
   764  030E                     	;# 
   765  030F                     	;# 
   766  0310                     	;# 
   767  0310                     	;# 
   768  0311                     	;# 
   769  0312                     	;# 
   770  0313                     	;# 
   771  0314                     	;# 
   772  0314                     	;# 
   773  0315                     	;# 
   774  0316                     	;# 
   775  0317                     	;# 
   776  0318                     	;# 
   777  0318                     	;# 
   778  0319                     	;# 
   779  031A                     	;# 
   780  031B                     	;# 
   781  031C                     	;# 
   782  031C                     	;# 
   783  031D                     	;# 
   784  031E                     	;# 
   785  031F                     	;# 
   786  038C                     	;# 
   787  038D                     	;# 
   788  038E                     	;# 
   789  0390                     	;# 
   790  0391                     	;# 
   791  0392                     	;# 
   792  040C                     	;# 
   793  040D                     	;# 
   794  040E                     	;# 
   795  040F                     	;# 
   796  0410                     	;# 
   797  0411                     	;# 
   798  0416                     	;# 
   799  0416                     	;# 
   800  0417                     	;# 
   801  0418                     	;# 
   802  0418                     	;# 
   803  0419                     	;# 
   804  041A                     	;# 
   805  041A                     	;# 
   806  041B                     	;# 
   807  041C                     	;# 
   808  041C                     	;# 
   809  041D                     	;# 
   810  041E                     	;# 
   811  041F                     	;# 
   812  048C                     	;# 
   813  048C                     	;# 
   814  048D                     	;# 
   815  048E                     	;# 
   816  048F                     	;# 
   817  048F                     	;# 
   818  0490                     	;# 
   819  0491                     	;# 
   820  0492                     	;# 
   821  0492                     	;# 
   822  0493                     	;# 
   823  0494                     	;# 
   824  0495                     	;# 
   825  0495                     	;# 
   826  0496                     	;# 
   827  0497                     	;# 
   828  0498                     	;# 
   829  0499                     	;# 
   830  049A                     	;# 
   831  049B                     	;# 
   832  049C                     	;# 
   833  049D                     	;# 
   834  050C                     	;# 
   835  050C                     	;# 
   836  050D                     	;# 
   837  050E                     	;# 
   838  050F                     	;# 
   839  050F                     	;# 
   840  0510                     	;# 
   841  0511                     	;# 
   842  0512                     	;# 
   843  0512                     	;# 
   844  0513                     	;# 
   845  0514                     	;# 
   846  0515                     	;# 
   847  0515                     	;# 
   848  0516                     	;# 
   849  0517                     	;# 
   850  0518                     	;# 
   851  0519                     	;# 
   852  051A                     	;# 
   853  051B                     	;# 
   854  051C                     	;# 
   855  051D                     	;# 
   856  058C                     	;# 
   857  058C                     	;# 
   858  058D                     	;# 
   859  058E                     	;# 
   860  058F                     	;# 
   861  058F                     	;# 
   862  0590                     	;# 
   863  0591                     	;# 
   864  0592                     	;# 
   865  0593                     	;# 
   866  060C                     	;# 
   867  060D                     	;# 
   868  060E                     	;# 
   869  060F                     	;# 
   870  0610                     	;# 
   871  0611                     	;# 
   872  0612                     	;# 
   873  0613                     	;# 
   874  0614                     	;# 
   875  0616                     	;# 
   876  0617                     	;# 
   877  0618                     	;# 
   878  0619                     	;# 
   879  061A                     	;# 
   880  061B                     	;# 
   881  061C                     	;# 
   882  061D                     	;# 
   883  061E                     	;# 
   884  068C                     	;# 
   885  068D                     	;# 
   886  068E                     	;# 
   887  068F                     	;# 
   888  0690                     	;# 
   889  0691                     	;# 
   890  0692                     	;# 
   891  0693                     	;# 
   892  0694                     	;# 
   893  070C                     	;# 
   894  070D                     	;# 
   895  070E                     	;# 
   896  070F                     	;# 
   897  0710                     	;# 
   898  0711                     	;# 
   899  0712                     	;# 
   900  0713                     	;# 
   901  0714                     	;# 
   902  0716                     	;# 
   903  0717                     	;# 
   904  0718                     	;# 
   905  0719                     	;# 
   906  071A                     	;# 
   907  071B                     	;# 
   908  071C                     	;# 
   909  071D                     	;# 
   910  071E                     	;# 
   911  0796                     	;# 
   912  0797                     	;# 
   913  0798                     	;# 
   914  0799                     	;# 
   915  079A                     	;# 
   916  079B                     	;# 
   917  080C                     	;# 
   918  080D                     	;# 
   919  080E                     	;# 
   920  080F                     	;# 
   921  0810                     	;# 
   922  0811                     	;# 
   923  0812                     	;# 
   924  0813                     	;# 
   925  0814                     	;# 
   926  081A                     	;# 
   927  081B                     	;# 
   928  081C                     	;# 
   929  081D                     	;# 
   930  081E                     	;# 
   931  081F                     	;# 
   932  088C                     	;# 
   933  088D                     	;# 
   934  088E                     	;# 
   935  088F                     	;# 
   936  0890                     	;# 
   937  0891                     	;# 
   938  0892                     	;# 
   939  0893                     	;# 
   940  0895                     	;# 
   941  0896                     	;# 
   942  0897                     	;# 
   943  0898                     	;# 
   944  0899                     	;# 
   945  089A                     	;# 
   946  089B                     	;# 
   947  090C                     	;# 
   948  090E                     	;# 
   949  090F                     	;# 
   950  091F                     	;# 
   951  098F                     	;# 
   952  098F                     	;# 
   953  0990                     	;# 
   954  0991                     	;# 
   955  0992                     	;# 
   956  0993                     	;# 
   957  0994                     	;# 
   958  0995                     	;# 
   959  0996                     	;# 
   960  0997                     	;# 
   961  1E0F                     	;# 
   962  1E10                     	;# 
   963  1E11                     	;# 
   964  1E12                     	;# 
   965  1E13                     	;# 
   966  1E14                     	;# 
   967  1E15                     	;# 
   968  1E16                     	;# 
   969  1E17                     	;# 
   970  1E18                     	;# 
   971  1E19                     	;# 
   972  1E1A                     	;# 
   973  1E1B                     	;# 
   974  1E1C                     	;# 
   975  1E1D                     	;# 
   976  1E1E                     	;# 
   977  1E1F                     	;# 
   978  1E20                     	;# 
   979  1E21                     	;# 
   980  1E22                     	;# 
   981  1E23                     	;# 
   982  1E24                     	;# 
   983  1E25                     	;# 
   984  1E26                     	;# 
   985  1E27                     	;# 
   986  1E28                     	;# 
   987  1E29                     	;# 
   988  1E2A                     	;# 
   989  1E2B                     	;# 
   990  1E2C                     	;# 
   991  1E2D                     	;# 
   992  1E2E                     	;# 
   993  1E2F                     	;# 
   994  1E30                     	;# 
   995  1E31                     	;# 
   996  1E32                     	;# 
   997  1E33                     	;# 
   998  1E34                     	;# 
   999  1E35                     	;# 
  1000  1E36                     	;# 
  1001  1E37                     	;# 
  1002  1E8F                     	;# 
  1003  1E90                     	;# 
  1004  1E91                     	;# 
  1005  1E92                     	;# 
  1006  1E93                     	;# 
  1007  1E94                     	;# 
  1008  1E95                     	;# 
  1009  1E96                     	;# 
  1010  1E97                     	;# 
  1011  1E9C                     	;# 
  1012  1E9D                     	;# 
  1013  1E9E                     	;# 
  1014  1EA1                     	;# 
  1015  1EA2                     	;# 
  1016  1EA3                     	;# 
  1017  1EA4                     	;# 
  1018  1EA5                     	;# 
  1019  1EA9                     	;# 
  1020  1EAA                     	;# 
  1021  1EAB                     	;# 
  1022  1EAC                     	;# 
  1023  1EB1                     	;# 
  1024  1EB2                     	;# 
  1025  1EB3                     	;# 
  1026  1EB8                     	;# 
  1027  1EB9                     	;# 
  1028  1EBA                     	;# 
  1029  1EBB                     	;# 
  1030  1EBC                     	;# 
  1031  1EBD                     	;# 
  1032  1EBE                     	;# 
  1033  1EC3                     	;# 
  1034  1EC5                     	;# 
  1035  1EC6                     	;# 
  1036  1EC7                     	;# 
  1037  1EC8                     	;# 
  1038  1EC9                     	;# 
  1039  1ECA                     	;# 
  1040  1ECB                     	;# 
  1041  1ECC                     	;# 
  1042  1F10                     	;# 
  1043  1F11                     	;# 
  1044  1F12                     	;# 
  1045  1F13                     	;# 
  1046  1F14                     	;# 
  1047  1F15                     	;# 
  1048  1F16                     	;# 
  1049  1F17                     	;# 
  1050  1F18                     	;# 
  1051  1F19                     	;# 
  1052  1F1A                     	;# 
  1053  1F1B                     	;# 
  1054  1F1C                     	;# 
  1055  1F1D                     	;# 
  1056  1F1E                     	;# 
  1057  1F1F                     	;# 
  1058  1F20                     	;# 
  1059  1F21                     	;# 
  1060  1F22                     	;# 
  1061  1F23                     	;# 
  1062  1F24                     	;# 
  1063  1F25                     	;# 
  1064  1F26                     	;# 
  1065  1F27                     	;# 
  1066  1F38                     	;# 
  1067  1F39                     	;# 
  1068  1F3A                     	;# 
  1069  1F3B                     	;# 
  1070  1F3C                     	;# 
  1071  1F3D                     	;# 
  1072  1F3E                     	;# 
  1073  1F3F                     	;# 
  1074  1F40                     	;# 
  1075  1F41                     	;# 
  1076  1F43                     	;# 
  1077  1F44                     	;# 
  1078  1F45                     	;# 
  1079  1F46                     	;# 
  1080  1F47                     	;# 
  1081  1F48                     	;# 
  1082  1F49                     	;# 
  1083  1F4A                     	;# 
  1084  1F4B                     	;# 
  1085  1F4C                     	;# 
  1086  1F4E                     	;# 
  1087  1F4F                     	;# 
  1088  1F50                     	;# 
  1089  1F51                     	;# 
  1090  1F52                     	;# 
  1091  1F53                     	;# 
  1092  1F54                     	;# 
  1093  1F55                     	;# 
  1094  1F56                     	;# 
  1095  1F57                     	;# 
  1096  1F65                     	;# 
  1097  1F68                     	;# 
  1098  1F69                     	;# 
  1099  1F6A                     	;# 
  1100  1F6B                     	;# 
  1101  1FE4                     	;# 
  1102  1FE5                     	;# 
  1103  1FE6                     	;# 
  1104  1FE7                     	;# 
  1105  1FE8                     	;# 
  1106  1FE9                     	;# 
  1107  1FEA                     	;# 
  1108  1FEB                     	;# 
  1109  1FED                     	;# 
  1110  1FEE                     	;# 
  1111  1FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  001C                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001D                     	;# 
  1138  001E                     	;# 
  1139  001F                     	;# 
  1140  008C                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008E                     	;# 
  1145  008F                     	;# 
  1146  0090                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0093                     	;# 
  1150  0094                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009C                     	;# 
  1159  009D                     	;# 
  1160  009E                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010E                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0110                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0112                     	;# 
  1171  0113                     	;# 
  1172  0114                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0119                     	;# 
  1179  0119                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011A                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011B                     	;# 
  1187  011B                     	;# 
  1188  011B                     	;# 
  1189  011C                     	;# 
  1190  011C                     	;# 
  1191  011C                     	;# 
  1192  011D                     	;# 
  1193  011D                     	;# 
  1194  011D                     	;# 
  1195  011E                     	;# 
  1196  011E                     	;# 
  1197  011E                     	;# 
  1198  011F                     	;# 
  1199  011F                     	;# 
  1200  011F                     	;# 
  1201  011F                     	;# 
  1202  011F                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  018F                     	;# 
  1207  0190                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0196                     	;# 
  1211  0197                     	;# 
  1212  0198                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  020C                     	;# 
  1218  020C                     	;# 
  1219  020D                     	;# 
  1220  020E                     	;# 
  1221  020F                     	;# 
  1222  020F                     	;# 
  1223  0210                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0216                     	;# 
  1234  0216                     	;# 
  1235  0217                     	;# 
  1236  0217                     	;# 
  1237  0218                     	;# 
  1238  0218                     	;# 
  1239  0219                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021B                     	;# 
  1243  021C                     	;# 
  1244  021C                     	;# 
  1245  021D                     	;# 
  1246  021D                     	;# 
  1247  021E                     	;# 
  1248  021F                     	;# 
  1249  028C                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  028F                     	;# 
  1255  0290                     	;# 
  1256  0290                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0292                     	;# 
  1260  0293                     	;# 
  1261  0293                     	;# 
  1262  0294                     	;# 
  1263  0295                     	;# 
  1264  0296                     	;# 
  1265  0296                     	;# 
  1266  0297                     	;# 
  1267  0298                     	;# 
  1268  0298                     	;# 
  1269  0299                     	;# 
  1270  0299                     	;# 
  1271  029A                     	;# 
  1272  029B                     	;# 
  1273  029C                     	;# 
  1274  029C                     	;# 
  1275  029D                     	;# 
  1276  030C                     	;# 
  1277  030C                     	;# 
  1278  030D                     	;# 
  1279  030E                     	;# 
  1280  030F                     	;# 
  1281  0310                     	;# 
  1282  0310                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0314                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  0318                     	;# 
  1293  0319                     	;# 
  1294  031A                     	;# 
  1295  031B                     	;# 
  1296  031C                     	;# 
  1297  031C                     	;# 
  1298  031D                     	;# 
  1299  031E                     	;# 
  1300  031F                     	;# 
  1301  038C                     	;# 
  1302  038D                     	;# 
  1303  038E                     	;# 
  1304  0390                     	;# 
  1305  0391                     	;# 
  1306  0392                     	;# 
  1307  040C                     	;# 
  1308  040D                     	;# 
  1309  040E                     	;# 
  1310  040F                     	;# 
  1311  0410                     	;# 
  1312  0411                     	;# 
  1313  0416                     	;# 
  1314  0416                     	;# 
  1315  0417                     	;# 
  1316  0418                     	;# 
  1317  0418                     	;# 
  1318  0419                     	;# 
  1319  041A                     	;# 
  1320  041A                     	;# 
  1321  041B                     	;# 
  1322  041C                     	;# 
  1323  041C                     	;# 
  1324  041D                     	;# 
  1325  041E                     	;# 
  1326  041F                     	;# 
  1327  048C                     	;# 
  1328  048C                     	;# 
  1329  048D                     	;# 
  1330  048E                     	;# 
  1331  048F                     	;# 
  1332  048F                     	;# 
  1333  0490                     	;# 
  1334  0491                     	;# 
  1335  0492                     	;# 
  1336  0492                     	;# 
  1337  0493                     	;# 
  1338  0494                     	;# 
  1339  0495                     	;# 
  1340  0495                     	;# 
  1341  0496                     	;# 
  1342  0497                     	;# 
  1343  0498                     	;# 
  1344  0499                     	;# 
  1345  049A                     	;# 
  1346  049B                     	;# 
  1347  049C                     	;# 
  1348  049D                     	;# 
  1349  050C                     	;# 
  1350  050C                     	;# 
  1351  050D                     	;# 
  1352  050E                     	;# 
  1353  050F                     	;# 
  1354  050F                     	;# 
  1355  0510                     	;# 
  1356  0511                     	;# 
  1357  0512                     	;# 
  1358  0512                     	;# 
  1359  0513                     	;# 
  1360  0514                     	;# 
  1361  0515                     	;# 
  1362  0515                     	;# 
  1363  0516                     	;# 
  1364  0517                     	;# 
  1365  0518                     	;# 
  1366  0519                     	;# 
  1367  051A                     	;# 
  1368  051B                     	;# 
  1369  051C                     	;# 
  1370  051D                     	;# 
  1371  058C                     	;# 
  1372  058C                     	;# 
  1373  058D                     	;# 
  1374  058E                     	;# 
  1375  058F                     	;# 
  1376  058F                     	;# 
  1377  0590                     	;# 
  1378  0591                     	;# 
  1379  0592                     	;# 
  1380  0593                     	;# 
  1381  060C                     	;# 
  1382  060D                     	;# 
  1383  060E                     	;# 
  1384  060F                     	;# 
  1385  0610                     	;# 
  1386  0611                     	;# 
  1387  0612                     	;# 
  1388  0613                     	;# 
  1389  0614                     	;# 
  1390  0616                     	;# 
  1391  0617                     	;# 
  1392  0618                     	;# 
  1393  0619                     	;# 
  1394  061A                     	;# 
  1395  061B                     	;# 
  1396  061C                     	;# 
  1397  061D                     	;# 
  1398  061E                     	;# 
  1399  068C                     	;# 
  1400  068D                     	;# 
  1401  068E                     	;# 
  1402  068F                     	;# 
  1403  0690                     	;# 
  1404  0691                     	;# 
  1405  0692                     	;# 
  1406  0693                     	;# 
  1407  0694                     	;# 
  1408  070C                     	;# 
  1409  070D                     	;# 
  1410  070E                     	;# 
  1411  070F                     	;# 
  1412  0710                     	;# 
  1413  0711                     	;# 
  1414  0712                     	;# 
  1415  0713                     	;# 
  1416  0714                     	;# 
  1417  0716                     	;# 
  1418  0717                     	;# 
  1419  0718                     	;# 
  1420  0719                     	;# 
  1421  071A                     	;# 
  1422  071B                     	;# 
  1423  071C                     	;# 
  1424  071D                     	;# 
  1425  071E                     	;# 
  1426  0796                     	;# 
  1427  0797                     	;# 
  1428  0798                     	;# 
  1429  0799                     	;# 
  1430  079A                     	;# 
  1431  079B                     	;# 
  1432  080C                     	;# 
  1433  080D                     	;# 
  1434  080E                     	;# 
  1435  080F                     	;# 
  1436  0810                     	;# 
  1437  0811                     	;# 
  1438  0812                     	;# 
  1439  0813                     	;# 
  1440  0814                     	;# 
  1441  081A                     	;# 
  1442  081B                     	;# 
  1443  081C                     	;# 
  1444  081D                     	;# 
  1445  081E                     	;# 
  1446  081F                     	;# 
  1447  088C                     	;# 
  1448  088D                     	;# 
  1449  088E                     	;# 
  1450  088F                     	;# 
  1451  0890                     	;# 
  1452  0891                     	;# 
  1453  0892                     	;# 
  1454  0893                     	;# 
  1455  0895                     	;# 
  1456  0896                     	;# 
  1457  0897                     	;# 
  1458  0898                     	;# 
  1459  0899                     	;# 
  1460  089A                     	;# 
  1461  089B                     	;# 
  1462  090C                     	;# 
  1463  090E                     	;# 
  1464  090F                     	;# 
  1465  091F                     	;# 
  1466  098F                     	;# 
  1467  098F                     	;# 
  1468  0990                     	;# 
  1469  0991                     	;# 
  1470  0992                     	;# 
  1471  0993                     	;# 
  1472  0994                     	;# 
  1473  0995                     	;# 
  1474  0996                     	;# 
  1475  0997                     	;# 
  1476  1E0F                     	;# 
  1477  1E10                     	;# 
  1478  1E11                     	;# 
  1479  1E12                     	;# 
  1480  1E13                     	;# 
  1481  1E14                     	;# 
  1482  1E15                     	;# 
  1483  1E16                     	;# 
  1484  1E17                     	;# 
  1485  1E18                     	;# 
  1486  1E19                     	;# 
  1487  1E1A                     	;# 
  1488  1E1B                     	;# 
  1489  1E1C                     	;# 
  1490  1E1D                     	;# 
  1491  1E1E                     	;# 
  1492  1E1F                     	;# 
  1493  1E20                     	;# 
  1494  1E21                     	;# 
  1495  1E22                     	;# 
  1496  1E23                     	;# 
  1497  1E24                     	;# 
  1498  1E25                     	;# 
  1499  1E26                     	;# 
  1500  1E27                     	;# 
  1501  1E28                     	;# 
  1502  1E29                     	;# 
  1503  1E2A                     	;# 
  1504  1E2B                     	;# 
  1505  1E2C                     	;# 
  1506  1E2D                     	;# 
  1507  1E2E                     	;# 
  1508  1E2F                     	;# 
  1509  1E30                     	;# 
  1510  1E31                     	;# 
  1511  1E32                     	;# 
  1512  1E33                     	;# 
  1513  1E34                     	;# 
  1514  1E35                     	;# 
  1515  1E36                     	;# 
  1516  1E37                     	;# 
  1517  1E8F                     	;# 
  1518  1E90                     	;# 
  1519  1E91                     	;# 
  1520  1E92                     	;# 
  1521  1E93                     	;# 
  1522  1E94                     	;# 
  1523  1E95                     	;# 
  1524  1E96                     	;# 
  1525  1E97                     	;# 
  1526  1E9C                     	;# 
  1527  1E9D                     	;# 
  1528  1E9E                     	;# 
  1529  1EA1                     	;# 
  1530  1EA2                     	;# 
  1531  1EA3                     	;# 
  1532  1EA4                     	;# 
  1533  1EA5                     	;# 
  1534  1EA9                     	;# 
  1535  1EAA                     	;# 
  1536  1EAB                     	;# 
  1537  1EAC                     	;# 
  1538  1EB1                     	;# 
  1539  1EB2                     	;# 
  1540  1EB3                     	;# 
  1541  1EB8                     	;# 
  1542  1EB9                     	;# 
  1543  1EBA                     	;# 
  1544  1EBB                     	;# 
  1545  1EBC                     	;# 
  1546  1EBD                     	;# 
  1547  1EBE                     	;# 
  1548  1EC3                     	;# 
  1549  1EC5                     	;# 
  1550  1EC6                     	;# 
  1551  1EC7                     	;# 
  1552  1EC8                     	;# 
  1553  1EC9                     	;# 
  1554  1ECA                     	;# 
  1555  1ECB                     	;# 
  1556  1ECC                     	;# 
  1557  1F10                     	;# 
  1558  1F11                     	;# 
  1559  1F12                     	;# 
  1560  1F13                     	;# 
  1561  1F14                     	;# 
  1562  1F15                     	;# 
  1563  1F16                     	;# 
  1564  1F17                     	;# 
  1565  1F18                     	;# 
  1566  1F19                     	;# 
  1567  1F1A                     	;# 
  1568  1F1B                     	;# 
  1569  1F1C                     	;# 
  1570  1F1D                     	;# 
  1571  1F1E                     	;# 
  1572  1F1F                     	;# 
  1573  1F20                     	;# 
  1574  1F21                     	;# 
  1575  1F22                     	;# 
  1576  1F23                     	;# 
  1577  1F24                     	;# 
  1578  1F25                     	;# 
  1579  1F26                     	;# 
  1580  1F27                     	;# 
  1581  1F38                     	;# 
  1582  1F39                     	;# 
  1583  1F3A                     	;# 
  1584  1F3B                     	;# 
  1585  1F3C                     	;# 
  1586  1F3D                     	;# 
  1587  1F3E                     	;# 
  1588  1F3F                     	;# 
  1589  1F40                     	;# 
  1590  1F41                     	;# 
  1591  1F43                     	;# 
  1592  1F44                     	;# 
  1593  1F45                     	;# 
  1594  1F46                     	;# 
  1595  1F47                     	;# 
  1596  1F48                     	;# 
  1597  1F49                     	;# 
  1598  1F4A                     	;# 
  1599  1F4B                     	;# 
  1600  1F4C                     	;# 
  1601  1F4E                     	;# 
  1602  1F4F                     	;# 
  1603  1F50                     	;# 
  1604  1F51                     	;# 
  1605  1F52                     	;# 
  1606  1F53                     	;# 
  1607  1F54                     	;# 
  1608  1F55                     	;# 
  1609  1F56                     	;# 
  1610  1F57                     	;# 
  1611  1F65                     	;# 
  1612  1F68                     	;# 
  1613  1F69                     	;# 
  1614  1F6A                     	;# 
  1615  1F6B                     	;# 
  1616  1FE4                     	;# 
  1617  1FE5                     	;# 
  1618  1FE6                     	;# 
  1619  1FE7                     	;# 
  1620  1FE8                     	;# 
  1621  1FE9                     	;# 
  1622  1FEA                     	;# 
  1623  1FEB                     	;# 
  1624  1FED                     	;# 
  1625  1FEE                     	;# 
  1626  1FEF                     	;# 
  1627  0000                     	;# 
  1628  0001                     	;# 
  1629  0002                     	;# 
  1630  0003                     	;# 
  1631  0004                     	;# 
  1632  0005                     	;# 
  1633  0006                     	;# 
  1634  0007                     	;# 
  1635  0008                     	;# 
  1636  0009                     	;# 
  1637  000A                     	;# 
  1638  000B                     	;# 
  1639  000C                     	;# 
  1640  000D                     	;# 
  1641  000E                     	;# 
  1642  0010                     	;# 
  1643  0011                     	;# 
  1644  0012                     	;# 
  1645  0013                     	;# 
  1646  0016                     	;# 
  1647  0017                     	;# 
  1648  0018                     	;# 
  1649  001C                     	;# 
  1650  001C                     	;# 
  1651  001D                     	;# 
  1652  001D                     	;# 
  1653  001E                     	;# 
  1654  001F                     	;# 
  1655  008C                     	;# 
  1656  008C                     	;# 
  1657  008D                     	;# 
  1658  008E                     	;# 
  1659  008E                     	;# 
  1660  008F                     	;# 
  1661  0090                     	;# 
  1662  0090                     	;# 
  1663  0091                     	;# 
  1664  0093                     	;# 
  1665  0094                     	;# 
  1666  0095                     	;# 
  1667  0096                     	;# 
  1668  0097                     	;# 
  1669  0098                     	;# 
  1670  0099                     	;# 
  1671  009A                     	;# 
  1672  009B                     	;# 
  1673  009C                     	;# 
  1674  009D                     	;# 
  1675  009E                     	;# 
  1676  010C                     	;# 
  1677  010D                     	;# 
  1678  010E                     	;# 
  1679  010E                     	;# 
  1680  010F                     	;# 
  1681  0110                     	;# 
  1682  0110                     	;# 
  1683  0111                     	;# 
  1684  0112                     	;# 
  1685  0112                     	;# 
  1686  0113                     	;# 
  1687  0114                     	;# 
  1688  0114                     	;# 
  1689  0115                     	;# 
  1690  0116                     	;# 
  1691  0116                     	;# 
  1692  0117                     	;# 
  1693  0119                     	;# 
  1694  0119                     	;# 
  1695  0119                     	;# 
  1696  011A                     	;# 
  1697  011A                     	;# 
  1698  011A                     	;# 
  1699  011B                     	;# 
  1700  011B                     	;# 
  1701  011B                     	;# 
  1702  011B                     	;# 
  1703  011B                     	;# 
  1704  011C                     	;# 
  1705  011C                     	;# 
  1706  011C                     	;# 
  1707  011D                     	;# 
  1708  011D                     	;# 
  1709  011D                     	;# 
  1710  011E                     	;# 
  1711  011E                     	;# 
  1712  011E                     	;# 
  1713  011F                     	;# 
  1714  011F                     	;# 
  1715  011F                     	;# 
  1716  011F                     	;# 
  1717  011F                     	;# 
  1718  018C                     	;# 
  1719  018D                     	;# 
  1720  018E                     	;# 
  1721  018F                     	;# 
  1722  0190                     	;# 
  1723  0191                     	;# 
  1724  0192                     	;# 
  1725  0196                     	;# 
  1726  0197                     	;# 
  1727  0198                     	;# 
  1728  0199                     	;# 
  1729  019A                     	;# 
  1730  019B                     	;# 
  1731  019C                     	;# 
  1732  020C                     	;# 
  1733  020C                     	;# 
  1734  020D                     	;# 
  1735  020E                     	;# 
  1736  020F                     	;# 
  1737  020F                     	;# 
  1738  0210                     	;# 
  1739  0210                     	;# 
  1740  0211                     	;# 
  1741  0211                     	;# 
  1742  0212                     	;# 
  1743  0212                     	;# 
  1744  0213                     	;# 
  1745  0214                     	;# 
  1746  0215                     	;# 
  1747  0215                     	;# 
  1748  0216                     	;# 
  1749  0216                     	;# 
  1750  0217                     	;# 
  1751  0217                     	;# 
  1752  0218                     	;# 
  1753  0218                     	;# 
  1754  0219                     	;# 
  1755  021A                     	;# 
  1756  021B                     	;# 
  1757  021B                     	;# 
  1758  021C                     	;# 
  1759  021C                     	;# 
  1760  021D                     	;# 
  1761  021D                     	;# 
  1762  021E                     	;# 
  1763  021F                     	;# 
  1764  028C                     	;# 
  1765  028C                     	;# 
  1766  028D                     	;# 
  1767  028D                     	;# 
  1768  028E                     	;# 
  1769  028F                     	;# 
  1770  0290                     	;# 
  1771  0290                     	;# 
  1772  0291                     	;# 
  1773  0292                     	;# 
  1774  0292                     	;# 
  1775  0293                     	;# 
  1776  0293                     	;# 
  1777  0294                     	;# 
  1778  0295                     	;# 
  1779  0296                     	;# 
  1780  0296                     	;# 
  1781  0297                     	;# 
  1782  0298                     	;# 
  1783  0298                     	;# 
  1784  0299                     	;# 
  1785  0299                     	;# 
  1786  029A                     	;# 
  1787  029B                     	;# 
  1788  029C                     	;# 
  1789  029C                     	;# 
  1790  029D                     	;# 
  1791  030C                     	;# 
  1792  030C                     	;# 
  1793  030D                     	;# 
  1794  030E                     	;# 
  1795  030F                     	;# 
  1796  0310                     	;# 
  1797  0310                     	;# 
  1798  0311                     	;# 
  1799  0312                     	;# 
  1800  0313                     	;# 
  1801  0314                     	;# 
  1802  0314                     	;# 
  1803  0315                     	;# 
  1804  0316                     	;# 
  1805  0317                     	;# 
  1806  0318                     	;# 
  1807  0318                     	;# 
  1808  0319                     	;# 
  1809  031A                     	;# 
  1810  031B                     	;# 
  1811  031C                     	;# 
  1812  031C                     	;# 
  1813  031D                     	;# 
  1814  031E                     	;# 
  1815  031F                     	;# 
  1816  038C                     	;# 
  1817  038D                     	;# 
  1818  038E                     	;# 
  1819  0390                     	;# 
  1820  0391                     	;# 
  1821  0392                     	;# 
  1822  040C                     	;# 
  1823  040D                     	;# 
  1824  040E                     	;# 
  1825  040F                     	;# 
  1826  0410                     	;# 
  1827  0411                     	;# 
  1828  0416                     	;# 
  1829  0416                     	;# 
  1830  0417                     	;# 
  1831  0418                     	;# 
  1832  0418                     	;# 
  1833  0419                     	;# 
  1834  041A                     	;# 
  1835  041A                     	;# 
  1836  041B                     	;# 
  1837  041C                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  041F                     	;# 
  1842  048C                     	;# 
  1843  048C                     	;# 
  1844  048D                     	;# 
  1845  048E                     	;# 
  1846  048F                     	;# 
  1847  048F                     	;# 
  1848  0490                     	;# 
  1849  0491                     	;# 
  1850  0492                     	;# 
  1851  0492                     	;# 
  1852  0493                     	;# 
  1853  0494                     	;# 
  1854  0495                     	;# 
  1855  0495                     	;# 
  1856  0496                     	;# 
  1857  0497                     	;# 
  1858  0498                     	;# 
  1859  0499                     	;# 
  1860  049A                     	;# 
  1861  049B                     	;# 
  1862  049C                     	;# 
  1863  049D                     	;# 
  1864  050C                     	;# 
  1865  050C                     	;# 
  1866  050D                     	;# 
  1867  050E                     	;# 
  1868  050F                     	;# 
  1869  050F                     	;# 
  1870  0510                     	;# 
  1871  0511                     	;# 
  1872  0512                     	;# 
  1873  0512                     	;# 
  1874  0513                     	;# 
  1875  0514                     	;# 
  1876  0515                     	;# 
  1877  0515                     	;# 
  1878  0516                     	;# 
  1879  0517                     	;# 
  1880  0518                     	;# 
  1881  0519                     	;# 
  1882  051A                     	;# 
  1883  051B                     	;# 
  1884  051C                     	;# 
  1885  051D                     	;# 
  1886  058C                     	;# 
  1887  058C                     	;# 
  1888  058D                     	;# 
  1889  058E                     	;# 
  1890  058F                     	;# 
  1891  058F                     	;# 
  1892  0590                     	;# 
  1893  0591                     	;# 
  1894  0592                     	;# 
  1895  0593                     	;# 
  1896  060C                     	;# 
  1897  060D                     	;# 
  1898  060E                     	;# 
  1899  060F                     	;# 
  1900  0610                     	;# 
  1901  0611                     	;# 
  1902  0612                     	;# 
  1903  0613                     	;# 
  1904  0614                     	;# 
  1905  0616                     	;# 
  1906  0617                     	;# 
  1907  0618                     	;# 
  1908  0619                     	;# 
  1909  061A                     	;# 
  1910  061B                     	;# 
  1911  061C                     	;# 
  1912  061D                     	;# 
  1913  061E                     	;# 
  1914  068C                     	;# 
  1915  068D                     	;# 
  1916  068E                     	;# 
  1917  068F                     	;# 
  1918  0690                     	;# 
  1919  0691                     	;# 
  1920  0692                     	;# 
  1921  0693                     	;# 
  1922  0694                     	;# 
  1923  070C                     	;# 
  1924  070D                     	;# 
  1925  070E                     	;# 
  1926  070F                     	;# 
  1927  0710                     	;# 
  1928  0711                     	;# 
  1929  0712                     	;# 
  1930  0713                     	;# 
  1931  0714                     	;# 
  1932  0716                     	;# 
  1933  0717                     	;# 
  1934  0718                     	;# 
  1935  0719                     	;# 
  1936  071A                     	;# 
  1937  071B                     	;# 
  1938  071C                     	;# 
  1939  071D                     	;# 
  1940  071E                     	;# 
  1941  0796                     	;# 
  1942  0797                     	;# 
  1943  0798                     	;# 
  1944  0799                     	;# 
  1945  079A                     	;# 
  1946  079B                     	;# 
  1947  080C                     	;# 
  1948  080D                     	;# 
  1949  080E                     	;# 
  1950  080F                     	;# 
  1951  0810                     	;# 
  1952  0811                     	;# 
  1953  0812                     	;# 
  1954  0813                     	;# 
  1955  0814                     	;# 
  1956  081A                     	;# 
  1957  081B                     	;# 
  1958  081C                     	;# 
  1959  081D                     	;# 
  1960  081E                     	;# 
  1961  081F                     	;# 
  1962  088C                     	;# 
  1963  088D                     	;# 
  1964  088E                     	;# 
  1965  088F                     	;# 
  1966  0890                     	;# 
  1967  0891                     	;# 
  1968  0892                     	;# 
  1969  0893                     	;# 
  1970  0895                     	;# 
  1971  0896                     	;# 
  1972  0897                     	;# 
  1973  0898                     	;# 
  1974  0899                     	;# 
  1975  089A                     	;# 
  1976  089B                     	;# 
  1977  090C                     	;# 
  1978  090E                     	;# 
  1979  090F                     	;# 
  1980  091F                     	;# 
  1981  098F                     	;# 
  1982  098F                     	;# 
  1983  0990                     	;# 
  1984  0991                     	;# 
  1985  0992                     	;# 
  1986  0993                     	;# 
  1987  0994                     	;# 
  1988  0995                     	;# 
  1989  0996                     	;# 
  1990  0997                     	;# 
  1991  1E0F                     	;# 
  1992  1E10                     	;# 
  1993  1E11                     	;# 
  1994  1E12                     	;# 
  1995  1E13                     	;# 
  1996  1E14                     	;# 
  1997  1E15                     	;# 
  1998  1E16                     	;# 
  1999  1E17                     	;# 
  2000  1E18                     	;# 
  2001  1E19                     	;# 
  2002  1E1A                     	;# 
  2003  1E1B                     	;# 
  2004  1E1C                     	;# 
  2005  1E1D                     	;# 
  2006  1E1E                     	;# 
  2007  1E1F                     	;# 
  2008  1E20                     	;# 
  2009  1E21                     	;# 
  2010  1E22                     	;# 
  2011  1E23                     	;# 
  2012  1E24                     	;# 
  2013  1E25                     	;# 
  2014  1E26                     	;# 
  2015  1E27                     	;# 
  2016  1E28                     	;# 
  2017  1E29                     	;# 
  2018  1E2A                     	;# 
  2019  1E2B                     	;# 
  2020  1E2C                     	;# 
  2021  1E2D                     	;# 
  2022  1E2E                     	;# 
  2023  1E2F                     	;# 
  2024  1E30                     	;# 
  2025  1E31                     	;# 
  2026  1E32                     	;# 
  2027  1E33                     	;# 
  2028  1E34                     	;# 
  2029  1E35                     	;# 
  2030  1E36                     	;# 
  2031  1E37                     	;# 
  2032  1E8F                     	;# 
  2033  1E90                     	;# 
  2034  1E91                     	;# 
  2035  1E92                     	;# 
  2036  1E93                     	;# 
  2037  1E94                     	;# 
  2038  1E95                     	;# 
  2039  1E96                     	;# 
  2040  1E97                     	;# 
  2041  1E9C                     	;# 
  2042  1E9D                     	;# 
  2043  1E9E                     	;# 
  2044  1EA1                     	;# 
  2045  1EA2                     	;# 
  2046  1EA3                     	;# 
  2047  1EA4                     	;# 
  2048  1EA5                     	;# 
  2049  1EA9                     	;# 
  2050  1EAA                     	;# 
  2051  1EAB                     	;# 
  2052  1EAC                     	;# 
  2053  1EB1                     	;# 
  2054  1EB2                     	;# 
  2055  1EB3                     	;# 
  2056  1EB8                     	;# 
  2057  1EB9                     	;# 
  2058  1EBA                     	;# 
  2059  1EBB                     	;# 
  2060  1EBC                     	;# 
  2061  1EBD                     	;# 
  2062  1EBE                     	;# 
  2063  1EC3                     	;# 
  2064  1EC5                     	;# 
  2065  1EC6                     	;# 
  2066  1EC7                     	;# 
  2067  1EC8                     	;# 
  2068  1EC9                     	;# 
  2069  1ECA                     	;# 
  2070  1ECB                     	;# 
  2071  1ECC                     	;# 
  2072  1F10                     	;# 
  2073  1F11                     	;# 
  2074  1F12                     	;# 
  2075  1F13                     	;# 
  2076  1F14                     	;# 
  2077  1F15                     	;# 
  2078  1F16                     	;# 
  2079  1F17                     	;# 
  2080  1F18                     	;# 
  2081  1F19                     	;# 
  2082  1F1A                     	;# 
  2083  1F1B                     	;# 
  2084  1F1C                     	;# 
  2085  1F1D                     	;# 
  2086  1F1E                     	;# 
  2087  1F1F                     	;# 
  2088  1F20                     	;# 
  2089  1F21                     	;# 
  2090  1F22                     	;# 
  2091  1F23                     	;# 
  2092  1F24                     	;# 
  2093  1F25                     	;# 
  2094  1F26                     	;# 
  2095  1F27                     	;# 
  2096  1F38                     	;# 
  2097  1F39                     	;# 
  2098  1F3A                     	;# 
  2099  1F3B                     	;# 
  2100  1F3C                     	;# 
  2101  1F3D                     	;# 
  2102  1F3E                     	;# 
  2103  1F3F                     	;# 
  2104  1F40                     	;# 
  2105  1F41                     	;# 
  2106  1F43                     	;# 
  2107  1F44                     	;# 
  2108  1F45                     	;# 
  2109  1F46                     	;# 
  2110  1F47                     	;# 
  2111  1F48                     	;# 
  2112  1F49                     	;# 
  2113  1F4A                     	;# 
  2114  1F4B                     	;# 
  2115  1F4C                     	;# 
  2116  1F4E                     	;# 
  2117  1F4F                     	;# 
  2118  1F50                     	;# 
  2119  1F51                     	;# 
  2120  1F52                     	;# 
  2121  1F53                     	;# 
  2122  1F54                     	;# 
  2123  1F55                     	;# 
  2124  1F56                     	;# 
  2125  1F57                     	;# 
  2126  1F65                     	;# 
  2127  1F68                     	;# 
  2128  1F69                     	;# 
  2129  1F6A                     	;# 
  2130  1F6B                     	;# 
  2131  1FE4                     	;# 
  2132  1FE5                     	;# 
  2133  1FE6                     	;# 
  2134  1FE7                     	;# 
  2135  1FE8                     	;# 
  2136  1FE9                     	;# 
  2137  1FEA                     	;# 
  2138  1FEB                     	;# 
  2139  1FED                     	;# 
  2140  1FEE                     	;# 
  2141  1FEF                     	;# 
  2142  000C                     _PORTAbits	set	12
  2143  0013                     _TRISCbits	set	19
  2144  000E                     _PORTCbits	set	14
  2145  001F                     _T0CON1	set	31
  2146  001E                     _T0CON0	set	30
  2147  0011                     _TRISAbits	set	17
  2148  0011                     _TRISA	set	17
  2149  0013                     _TRISC	set	19
  2150  0012                     _TRISB	set	18
  2151  0018                     _LATC	set	24
  2152  0016                     _LATA	set	22
  2153  0017                     _LATB	set	23
  2154  005F                     _GIE	set	95
  2155  008C                     _ADRESL	set	140
  2156  008D                     _ADRESH	set	141
  2157  009E                     _ADPCH	set	158
  2158  009A                     _ADREF	set	154
  2159  0093                     _ADCON0	set	147
  2160  009C                     _ADPRE	set	156
  2161  009B                     _ADCAP	set	155
  2162  0097                     _ADSTAT	set	151
  2163  0099                     _ADACT	set	153
  2164  0096                     _ADCON3	set	150
  2165  0095                     _ADCON2	set	149
  2166  0094                     _ADCON1	set	148
  2167  011A                     _TX1REG	set	282
  2168  0119                     _RC1REG	set	281
  2169  011D                     _RC1STAbits	set	285
  2170  011C                     _SP1BRGH	set	284
  2171  011B                     _SP1BRGL	set	283
  2172  011E                     _TX1STA	set	286
  2173  011D                     _RC1STA	set	285
  2174  011F                     _BAUD1CON	set	287
  2175  021E                     _CCPTMRS0	set	542
  2176  028E                     _T2CON	set	654
  2177  0290                     _T2CLKCON	set	656
  2178  028D                     _PR2	set	653
  2179  030E                     _CCP1CON	set	782
  2180  030C                     _CCPR1L	set	780
  2181  030D                     _CCPR1H	set	781
  2182  070C                     _PIR0bits	set	1804
  2183  0710                     _PIR4	set	1808
  2184  070F                     _PIR3bits	set	1807
  2185  0892                     _OSCTUNE	set	2194
  2186  0890                     _OSCSTAT	set	2192
  2187  0893                     _OSCFRQ	set	2195
  2188  0891                     _OSCEN	set	2193
  2189  088F                     _OSCCON3	set	2191
  2190  088D                     _OSCCON1	set	2189
  2191  1ECB                     _RXPPS	set	7883
  2192  1E8F                     _PPSLOCKbits	set	7823
  2193  1E8F                     _PPSLOCK	set	7823
  2194  1F38                     _ANSELAbits	set	7992
  2195  1F23                     _RC3PPS	set	7971
  2196  1F26                     _RC6PPS	set	7974
  2197  1F4E                     _ANSELC	set	8014
  2198  1F43                     _ANSELB	set	8003
  2199  1F38                     _ANSELA	set	7992
  2200  1F4F                     _WPUC	set	8015
  2201  1F44                     _WPUB	set	8004
  2202  1F39                     _WPUA	set	7993
  2203                           
  2204                           	psect	stringtext1
  2205  0800                     __pstringtext1:	
  2206  0800                     STR_11:	
  2207  0800  3473               	retlw	115	;'s'
  2208  0801  3465               	retlw	101	;'e'
  2209  0802  3474               	retlw	116	;'t'
  2210  0803  3420               	retlw	32	;' '
  2211  0804  3473               	retlw	115	;'s'
  2212  0805  3463               	retlw	99	;'c'
  2213  0806  3461               	retlw	97	;'a'
  2214  0807  346E               	retlw	110	;'n'
  2215  0808  346E               	retlw	110	;'n'
  2216  0809  3469               	retlw	105	;'i'
  2217  080A  346E               	retlw	110	;'n'
  2218  080B  3467               	retlw	103	;'g'
  2219  080C  3420               	retlw	32	;' '
  2220  080D  3474               	retlw	116	;'t'
  2221  080E  346F               	retlw	111	;'o'
  2222  080F  3420               	retlw	32	;' '
  2223  0810  3431               	retlw	49	;'1'
  2224  0811  3438               	retlw	56	;'8'
  2225  0812  3420               	retlw	32	;' '
  2226  0813  3430               	retlw	48	;'0'
  2227  0814  3464               	retlw	100	;'d'
  2228  0815  3465               	retlw	101	;'e'
  2229  0816  3467               	retlw	103	;'g'
  2230  0817  3472               	retlw	114	;'r'
  2231  0818  3465               	retlw	101	;'e'
  2232  0819  3465               	retlw	101	;'e'
  2233  081A  3473               	retlw	115	;'s'
  2234  081B  340A               	retlw	10
  2235  081C  3400               	retlw	0
  2236                           
  2237                           	psect	stringtext2
  2238  081D                     __pstringtext2:	
  2239  081D                     STR_4:	
  2240  081D  3452               	retlw	82	;'R'
  2241  081E  3445               	retlw	69	;'E'
  2242  081F  3445               	retlw	69	;'E'
  2243  0820  3445               	retlw	69	;'E'
  2244  0821  3445               	retlw	69	;'E'
  2245  0822  3445               	retlw	69	;'E'
  2246  0823  3445               	retlw	69	;'E'
  2247  0824  3445               	retlw	69	;'E'
  2248  0825  3445               	retlw	69	;'E'
  2249  0826  3445               	retlw	69	;'E'
  2250  0827  3445               	retlw	69	;'E'
  2251  0828  3445               	retlw	69	;'E'
  2252  0829  3445               	retlw	69	;'E'
  2253  082A  3445               	retlw	69	;'E'
  2254  082B  3445               	retlw	69	;'E'
  2255  082C  3445               	retlw	69	;'E'
  2256  082D  3445               	retlw	69	;'E'
  2257  082E  3445               	retlw	69	;'E'
  2258  082F  3445               	retlw	69	;'E'
  2259  0830  3445               	retlw	69	;'E'
  2260  0831  3445               	retlw	69	;'E'
  2261  0832  3445               	retlw	69	;'E'
  2262  0833  3445               	retlw	69	;'E'
  2263  0834  3445               	retlw	69	;'E'
  2264  0835  3473               	retlw	115	;'s'
  2265  0836  3465               	retlw	101	;'e'
  2266  0837  3474               	retlw	116	;'t'
  2267  0838  340A               	retlw	10
  2268  0839  3400               	retlw	0
  2269                           
  2270                           	psect	stringtext3
  2271  083A                     __pstringtext3:	
  2272  083A                     STR_10:	
  2273  083A  3473               	retlw	115	;'s'
  2274  083B  3465               	retlw	101	;'e'
  2275  083C  3474               	retlw	116	;'t'
  2276  083D  3420               	retlw	32	;' '
  2277  083E  3473               	retlw	115	;'s'
  2278  083F  3463               	retlw	99	;'c'
  2279  0840  3461               	retlw	97	;'a'
  2280  0841  346E               	retlw	110	;'n'
  2281  0842  346E               	retlw	110	;'n'
  2282  0843  3469               	retlw	105	;'i'
  2283  0844  346E               	retlw	110	;'n'
  2284  0845  3467               	retlw	103	;'g'
  2285  0846  3420               	retlw	32	;' '
  2286  0847  3474               	retlw	116	;'t'
  2287  0848  346F               	retlw	111	;'o'
  2288  0849  3420               	retlw	32	;' '
  2289  084A  3439               	retlw	57	;'9'
  2290  084B  3430               	retlw	48	;'0'
  2291  084C  3464               	retlw	100	;'d'
  2292  084D  3465               	retlw	101	;'e'
  2293  084E  3467               	retlw	103	;'g'
  2294  084F  3472               	retlw	114	;'r'
  2295  0850  3465               	retlw	101	;'e'
  2296  0851  3465               	retlw	101	;'e'
  2297  0852  3473               	retlw	115	;'s'
  2298  0853  340A               	retlw	10
  2299  0854  3400               	retlw	0
  2300                           
  2301                           	psect	stringtext4
  2302  0855                     __pstringtext4:	
  2303  0855                     STR_5:	
  2304  0855  3453               	retlw	83	;'S'
  2305  0856  3465               	retlw	101	;'e'
  2306  0857  346E               	retlw	110	;'n'
  2307  0858  3464               	retlw	100	;'d'
  2308  0859  3469               	retlw	105	;'i'
  2309  085A  346E               	retlw	110	;'n'
  2310  085B  3467               	retlw	103	;'g'
  2311  085C  3420               	retlw	32	;' '
  2312  085D  3441               	retlw	65	;'A'
  2313  085E  3444               	retlw	68	;'D'
  2314  085F  3443               	retlw	67	;'C'
  2315  0860  3420               	retlw	32	;' '
  2316  0861  3472               	retlw	114	;'r'
  2317  0862  3465               	retlw	101	;'e'
  2318  0863  3473               	retlw	115	;'s'
  2319  0864  3475               	retlw	117	;'u'
  2320  0865  346C               	retlw	108	;'l'
  2321  0866  3474               	retlw	116	;'t'
  2322  0867  3473               	retlw	115	;'s'
  2323  0868  3420               	retlw	32	;' '
  2324  0869  340A               	retlw	10
  2325  086A  3400               	retlw	0
  2326                           
  2327                           	psect	stringtext5
  2328  086B                     __pstringtext5:	
  2329  086B                     STR_1:	
  2330  086B  3449               	retlw	73	;'I'
  2331  086C  346E               	retlw	110	;'n'
  2332  086D  3469               	retlw	105	;'i'
  2333  086E  3474               	retlw	116	;'t'
  2334  086F  3469               	retlw	105	;'i'
  2335  0870  3461               	retlw	97	;'a'
  2336  0871  346C               	retlw	108	;'l'
  2337  0872  3469               	retlw	105	;'i'
  2338  0873  347A               	retlw	122	;'z'
  2339  0874  3465               	retlw	101	;'e'
  2340  0875  3464               	retlw	100	;'d'
  2341  0876  3420               	retlw	32	;' '
  2342  0877  3441               	retlw	65	;'A'
  2343  0878  3444               	retlw	68	;'D'
  2344  0879  3443               	retlw	67	;'C'
  2345  087A  340A               	retlw	10
  2346  087B  3400               	retlw	0
  2347                           
  2348                           	psect	stringtext6
  2349  087C                     __pstringtext6:	
  2350  087C                     STR_9:	
  2351  087C  3465               	retlw	101	;'e'
  2352  087D  346E               	retlw	110	;'n'
  2353  087E  3474               	retlw	116	;'t'
  2354  087F  3465               	retlw	101	;'e'
  2355  0880  3472               	retlw	114	;'r'
  2356  0881  3420               	retlw	32	;' '
  2357  0882  3473               	retlw	115	;'s'
  2358  0883  3463               	retlw	99	;'c'
  2359  0884  3461               	retlw	97	;'a'
  2360  0885  346E               	retlw	110	;'n'
  2361  0886  340A               	retlw	10
  2362  0887  3400               	retlw	0
  2363                           
  2364                           	psect	stringtext7
  2365  0888                     __pstringtext7:	
  2366  0888                     STR_8:	
  2367  0888  3473               	retlw	115	;'s'
  2368  0889  3463               	retlw	99	;'c'
  2369  088A  3461               	retlw	97	;'a'
  2370  088B  346E               	retlw	110	;'n'
  2371  088C  3420               	retlw	32	;' '
  2372  088D  3431               	retlw	49	;'1'
  2373  088E  3432               	retlw	50	;'2'
  2374  088F  3430               	retlw	48	;'0'
  2375  0890  340A               	retlw	10
  2376  0891  3400               	retlw	0
  2377                           
  2378                           	psect	stringtext8
  2379  0892                     __pstringtext8:	
  2380  0892                     STR_7:	
  2381  0892  3473               	retlw	115	;'s'
  2382  0893  3465               	retlw	101	;'e'
  2383  0894  3472               	retlw	114	;'r'
  2384  0895  3476               	retlw	118	;'v'
  2385  0896  346F               	retlw	111	;'o'
  2386  0897  3420               	retlw	32	;' '
  2387  0898  3439               	retlw	57	;'9'
  2388  0899  3430               	retlw	48	;'0'
  2389  089A  340A               	retlw	10
  2390  089B  3400               	retlw	0
  2391                           
  2392                           	psect	stringtext9
  2393  089C                     __pstringtext9:	
  2394  089C                     STR_6:	
  2395  089C  3474               	retlw	116	;'t'
  2396  089D  3475               	retlw	117	;'u'
  2397  089E  3472               	retlw	114	;'r'
  2398  089F  346E               	retlw	110	;'n'
  2399  08A0  3420               	retlw	32	;' '
  2400  08A1  3433               	retlw	51	;'3'
  2401  08A2  3430               	retlw	48	;'0'
  2402  08A3  340A               	retlw	10
  2403  08A4  3400               	retlw	0
  2404                           
  2405                           	psect	stringtext10
  2406  08A5                     __pstringtext10:	
  2407  08A5                     STR_3:	
  2408  08A5  3453               	retlw	83	;'S'
  2409  08A6  3475               	retlw	117	;'u'
  2410  08A7  3463               	retlw	99	;'c'
  2411  08A8  3463               	retlw	99	;'c'
  2412  08A9  3465               	retlw	101	;'e'
  2413  08AA  3473               	retlw	115	;'s'
  2414  08AB  3473               	retlw	115	;'s'
  2415  08AC  340A               	retlw	10
  2416  08AD  3400               	retlw	0
  2417                           
  2418                           	psect	stringtext11
  2419  08AE                     __pstringtext11:	
  2420  08AE                     STR_2:	
  2421  08AE  3450               	retlw	80	;'P'
  2422  08AF  3449               	retlw	73	;'I'
  2423  08B0  344E               	retlw	78	;'N'
  2424  08B1  3447               	retlw	71	;'G'
  2425  08B2  340A               	retlw	10
  2426  08B3  3400               	retlw	0
  2427                           
  2428                           	psect	stringtext12
  2429  0000                     __pstringtext12:	
  2430  0800                     
  2431                           ; #config settings
  2432  0000                     
  2433                           	psect	cinit
  2434  07F2                     start_initialization:	
  2435  07F2                     __initialization:	
  2436                           
  2437                           ; Clear objects allocated to BANK0
  2438  07F2  0140               	movlb	0	; select bank0
  2439  07F3  01B0               	clrf	__pbssBANK0& (0+127)
  2440  07F4  01B1               	clrf	(__pbssBANK0+1)& (0+127)
  2441  07F5  01B2               	clrf	(__pbssBANK0+2)& (0+127)
  2442  07F6  01B3               	clrf	(__pbssBANK0+3)& (0+127)
  2443  07F7  01B4               	clrf	(__pbssBANK0+4)& (0+127)
  2444  07F8  01B5               	clrf	(__pbssBANK0+5)& (0+127)
  2445  07F9  01B6               	clrf	(__pbssBANK0+6)& (0+127)
  2446  07FA  01B7               	clrf	(__pbssBANK0+7)& (0+127)
  2447  07FB  01B8               	clrf	(__pbssBANK0+8)& (0+127)
  2448  07FC  01B9               	clrf	(__pbssBANK0+9)& (0+127)
  2449  07FD                     end_of_initialization:	
  2450                           ;End of C runtime variable initialization code
  2451                           
  2452  07FD                     __end_of__initialization:	
  2453  07FD  0140               	movlb	0
  2454  07FE  3186  2E91         	ljmp	_main	;jump to C main() function
  2455                           
  2456                           	psect	bssBANK0
  2457  0030                     __pbssBANK0:	
  2458  0030                     _scanLowerLimit:	
  2459  0030                     	ds	2
  2460  0032                     _scanUpperLimit:	
  2461  0032                     	ds	2
  2462  0034                     _isScanningUp:	
  2463  0034                     	ds	2
  2464  0036                     _scanCounter:	
  2465  0036                     	ds	2
  2466  0038                     _isScanning:	
  2467  0038                     	ds	2
  2468                           
  2469                           	psect	cstackCOMMON
  2470  0070                     __pcstackCOMMON:	
  2471  0070                     ?_PIN_MANAGER_Initialize:	
  2472  0070                     ??_PIN_MANAGER_Initialize:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ?_OSCILLATOR_Initialize:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ??_OSCILLATOR_Initialize:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ?_EUSART_Initialize:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ??_EUSART_Initialize:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ?_EUSART_Write:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ??_EUSART_Write:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ?_putch:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ?_SYSTEM_Initialize:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ?_adc_init:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ?_everything_init:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ?_handle_scan:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ?_send_nibble:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ??_send_nibble:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ?_sensor_ping:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ?_sensor_reset:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?_send_adc_results:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ?_turn_30:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ?_turn_90:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ?_turn_120:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ?_rotate_90_enable:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ?_rotate_180_enable:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ?_disable_rotate:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ?_return_bus_nibble:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ??_return_bus_nibble:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0070                     ?_receive_msg:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0070                     ?_main:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0070                     ?___lwdiv:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     EUSART_Write@txData:	
  2557                           ; 2 bytes @ 0x0
  2558                           
  2559  0070                     PIN_MANAGER_Initialize@state:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0070                     ___lwdiv@divisor:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565                           
  2566                           ; 2 bytes @ 0x0
  2567  0070                     	ds	1
  2568  0071                     ??_putch:	
  2569  0071                     ??_SYSTEM_Initialize:	
  2570                           ; 1 bytes @ 0x1
  2571                           
  2572  0071                     putch@txData:	
  2573                           ; 1 bytes @ 0x1
  2574                           
  2575                           
  2576                           ; 1 bytes @ 0x1
  2577  0071                     	ds	1
  2578  0072                     ?_printf:	
  2579  0072                     send_nibble@nibble:	
  2580                           ; 2 bytes @ 0x2
  2581                           
  2582  0072                     printf@f:	
  2583                           ; 1 bytes @ 0x2
  2584                           
  2585  0072                     ___lwdiv@dividend:	
  2586                           ; 2 bytes @ 0x2
  2587                           
  2588                           
  2589                           ; 2 bytes @ 0x2
  2590  0072                     	ds	2
  2591  0074                     ??_printf:	
  2592  0074                     ??___lwdiv:	
  2593                           ; 1 bytes @ 0x4
  2594                           
  2595                           
  2596                           ; 1 bytes @ 0x4
  2597  0074                     	ds	1
  2598  0075                     ___lwdiv@quotient:	
  2599                           
  2600                           ; 2 bytes @ 0x5
  2601  0075                     	ds	2
  2602  0077                     printf@ap:	
  2603  0077                     ___lwdiv@counter:	
  2604                           ; 1 bytes @ 0x7
  2605                           
  2606                           
  2607                           ; 1 bytes @ 0x7
  2608  0077                     	ds	1
  2609  0078                     ?_set_pwm_duty:	
  2610  0078                     printf@c:	
  2611                           ; 1 bytes @ 0x8
  2612                           
  2613  0078                     set_pwm_duty@duty:	
  2614                           ; 1 bytes @ 0x8
  2615                           
  2616                           
  2617                           ; 2 bytes @ 0x8
  2618  0078                     	ds	1
  2619  0079                     ??_adc_init:	
  2620                           
  2621                           ; 1 bytes @ 0x9
  2622  0079                     	ds	1
  2623  007A                     ??_set_pwm_duty:	
  2624                           
  2625                           ; 1 bytes @ 0xA
  2626  007A                     	ds	2
  2627  007C                     set_pwm_duty@pr:	
  2628                           
  2629                           ; 2 bytes @ 0xC
  2630  007C                     	ds	2
  2631  007E                     ??_everything_init:	
  2632                           
  2633                           	psect	cstackBANK0
  2634  0020                     __pcstackBANK0:	
  2635                           ; 1 bytes @ 0xE
  2636                           
  2637  0020                     ??_handle_scan:	
  2638                           
  2639                           ; 1 bytes @ 0x0
  2640  0020                     	ds	1
  2641  0021                     ?_wait_while_strobe:	
  2642  0021                     wait_while_strobe@state:	
  2643                           ; 1 bytes @ 0x1
  2644                           
  2645                           
  2646                           ; 2 bytes @ 0x1
  2647  0021                     	ds	2
  2648  0023                     ??_wait_while_strobe:	
  2649                           
  2650                           ; 1 bytes @ 0x3
  2651  0023                     	ds	2
  2652  0025                     ??_sensor_ping:	
  2653  0025                     ??_sensor_reset:	
  2654                           ; 1 bytes @ 0x5
  2655                           
  2656  0025                     ??_send_adc_results:	
  2657                           ; 1 bytes @ 0x5
  2658                           
  2659  0025                     ??_turn_30:	
  2660                           ; 1 bytes @ 0x5
  2661                           
  2662  0025                     ??_turn_90:	
  2663                           ; 1 bytes @ 0x5
  2664                           
  2665  0025                     ??_turn_120:	
  2666                           ; 1 bytes @ 0x5
  2667                           
  2668  0025                     ??_rotate_90_enable:	
  2669                           ; 1 bytes @ 0x5
  2670                           
  2671  0025                     ??_rotate_180_enable:	
  2672                           ; 1 bytes @ 0x5
  2673                           
  2674  0025                     ??_disable_rotate:	
  2675                           ; 1 bytes @ 0x5
  2676                           
  2677  0025                     ??_receive_msg:	
  2678                           ; 1 bytes @ 0x5
  2679                           
  2680                           
  2681                           ; 1 bytes @ 0x5
  2682  0025                     	ds	2
  2683  0027                     receive_msg@results:	
  2684                           
  2685                           ; 2 bytes @ 0x7
  2686  0027                     	ds	1
  2687  0028                     send_adc_results@nib1:	
  2688                           
  2689                           ; 1 bytes @ 0x8
  2690  0028                     	ds	1
  2691  0029                     send_adc_results@nib2:	
  2692                           
  2693                           ; 1 bytes @ 0x9
  2694  0029                     	ds	1
  2695  002A                     send_adc_results@nib3:	
  2696                           
  2697                           ; 1 bytes @ 0xA
  2698  002A                     	ds	1
  2699  002B                     send_adc_results@results:	
  2700                           
  2701                           ; 2 bytes @ 0xB
  2702  002B                     	ds	2
  2703  002D                     ??_main:	
  2704                           
  2705                           ; 1 bytes @ 0xD
  2706  002D                     	ds	2
  2707  002F                     main@msg:	
  2708                           
  2709                           ; 1 bytes @ 0xF
  2710  002F                     	ds	1
  2711                           
  2712                           	psect	maintext
  2713  0691                     __pmaintext:	
  2714 ;;
  2715 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2716 ;;
  2717 ;; *************** function _main *****************
  2718 ;; Defined at:
  2719 ;;		line 450 in file "main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  msg             1   15[BANK0 ] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : B3F/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2735 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2736 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        3 bytes
  2738 ;; Hardware stack levels required when called:    5
  2739 ;; This function calls:
  2740 ;;		_SYSTEM_Initialize
  2741 ;;		_disable_rotate
  2742 ;;		_everything_init
  2743 ;;		_handle_scan
  2744 ;;		_receive_msg
  2745 ;;		_rotate_180_enable
  2746 ;;		_rotate_90_enable
  2747 ;;		_send_adc_results
  2748 ;;		_sensor_ping
  2749 ;;		_sensor_reset
  2750 ;;		_set_pwm_duty
  2751 ;;		_turn_120
  2752 ;;		_turn_30
  2753 ;;		_turn_90
  2754 ;; This function is called by:
  2755 ;;		Startup code after reset
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _main
  2761  0691                     _main:	
  2762                           
  2763                           ;main.c: 453: SYSTEM_Initialize();
  2764                           
  2765                           ;incstack = 0
  2766                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2767  0691  3182  228D  3186   	fcall	_SYSTEM_Initialize
  2768                           
  2769                           ;main.c: 454: everything_init();
  2770  0694  3183  2336  3186   	fcall	_everything_init
  2771                           
  2772                           ;main.c: 457: unsigned char msg = 0xF;
  2773  0697  300F               	movlw	15
  2774  0698  0140               	movlb	0	; select bank0
  2775  0699  00AD               	movwf	??_main
  2776  069A  082D               	movf	??_main,w
  2777  069B  00AF               	movwf	main@msg
  2778                           
  2779                           ;main.c: 458: set_pwm_duty(50);
  2780  069C  3032               	movlw	50
  2781  069D  00F8               	movwf	set_pwm_duty@duty
  2782  069E  3000               	movlw	0
  2783  069F  00F9               	movwf	set_pwm_duty@duty+1
  2784  06A0  3183  2314  3186   	fcall	_set_pwm_duty
  2785                           
  2786                           ;main.c: 459: isScanning = 0;
  2787  06A3  0140               	movlb	0	; select bank0
  2788  06A4  01B8               	clrf	_isScanning
  2789  06A5  01B9               	clrf	_isScanning+1
  2790                           
  2791                           ;main.c: 460: scanCounter = 50;
  2792  06A6  3032               	movlw	50
  2793  06A7  00B6               	movwf	_scanCounter
  2794  06A8  3000               	movlw	0
  2795  06A9  00B7               	movwf	_scanCounter+1
  2796                           
  2797                           ;main.c: 461: scanUpperLimit = 75;
  2798  06AA  304B               	movlw	75
  2799  06AB  00B2               	movwf	_scanUpperLimit
  2800  06AC  3000               	movlw	0
  2801  06AD  00B3               	movwf	_scanUpperLimit+1
  2802                           
  2803                           ;main.c: 462: scanLowerLimit = 25;
  2804  06AE  3019               	movlw	25
  2805  06AF  00B0               	movwf	_scanLowerLimit
  2806  06B0  3000               	movlw	0
  2807  06B1  00B1               	movwf	_scanLowerLimit+1
  2808                           
  2809                           ;main.c: 467: PORTAbits.RA0 = 1;
  2810  06B2  140C               	bsf	12,0	;volatile
  2811                           
  2812                           ;main.c: 468: _delay((unsigned long)((1000)*(1000000/4000.0)));
  2813  06B3  3002               	movlw	2
  2814  06B4  0140               	movlb	0	; select bank0
  2815  06B5  00AE               	movwf	??_main+1
  2816  06B6  3045               	movlw	69
  2817  06B7  00AD               	movwf	??_main
  2818  06B8  30A9               	movlw	169
  2819  06B9                     u757:	
  2820  06B9  0B89               	decfsz	9,f
  2821  06BA  2EB9               	goto	u757
  2822  06BB  0BAD               	decfsz	??_main,f
  2823  06BC  2EB9               	goto	u757
  2824  06BD  0BAE               	decfsz	??_main+1,f
  2825  06BE  2EB9               	goto	u757
  2826  06BF  3200               	nop2
  2827                           
  2828                           ;main.c: 469: PORTAbits.RA0 = 0;
  2829  06C0  0140               	movlb	0	; select bank0
  2830  06C1  100C               	bcf	12,0	;volatile
  2831  06C2                     l1742:	
  2832                           ;main.c: 470: while(1)
  2833                           
  2834                           
  2835                           ;main.c: 471: {
  2836                           ;main.c: 473: if(isScanning)
  2837  06C2  0140               	movlb	0	; select bank0
  2838  06C3  0838               	movf	_isScanning,w
  2839  06C4  0439               	iorwf	_isScanning+1,w
  2840  06C5  1903               	btfsc	3,2
  2841  06C6  2ECC               	goto	l258
  2842                           
  2843                           ;main.c: 474: {
  2844                           ;main.c: 475: PORTAbits.RA0 = 1;
  2845  06C7  140C               	bsf	12,0	;volatile
  2846                           
  2847                           ;main.c: 476: handle_scan();
  2848  06C8  3184  24A1  3186   	fcall	_handle_scan
  2849                           
  2850                           ;main.c: 477: }
  2851  06CB  2ECD               	goto	l1748
  2852  06CC                     l258:	
  2853                           
  2854                           ;main.c: 478: else
  2855                           ;main.c: 479: {
  2856                           ;main.c: 480: PORTAbits.RA0 = 0;
  2857  06CC  100C               	bcf	12,0	;volatile
  2858  06CD                     l1748:	
  2859                           
  2860                           ;main.c: 481: }
  2861                           ;main.c: 484: msg = receive_msg();
  2862  06CD  3183  235D  3186   	fcall	_receive_msg
  2863  06D0  0140               	movlb	0	; select bank0
  2864  06D1  00AD               	movwf	??_main
  2865  06D2  082D               	movf	??_main,w
  2866  06D3  00AF               	movwf	main@msg
  2867                           
  2868                           ;main.c: 486: if(msg == 0x0) {
  2869  06D4  082F               	movf	main@msg,w
  2870  06D5  1D03               	btfss	3,2
  2871  06D6  2EDB               	goto	l1754
  2872                           
  2873                           ;main.c: 487: sensor_reset();
  2874  06D7  3186  2641  3186   	fcall	_sensor_reset
  2875                           
  2876                           ;main.c: 488: } else if(msg == 0x1) {
  2877  06DA  2EC2               	goto	l1742
  2878  06DB                     l1754:	
  2879  06DB  0140               	movlb	0	; select bank0
  2880  06DC  032F               	decf	main@msg,w
  2881  06DD  1D03               	btfss	3,2
  2882  06DE  2EE3               	goto	l1758
  2883                           
  2884                           ;main.c: 489: sensor_ping();
  2885  06DF  3184  2460  3186   	fcall	_sensor_ping
  2886                           
  2887                           ;main.c: 490: } else if(msg == 0x2) {
  2888  06E2  2EC2               	goto	l1742
  2889  06E3                     l1758:	
  2890  06E3  3002               	movlw	2
  2891  06E4  0140               	movlb	0	; select bank0
  2892  06E5  062F               	xorwf	main@msg,w
  2893  06E6  1D03               	btfss	3,2
  2894  06E7  2EEC               	goto	l1762
  2895                           
  2896                           ;main.c: 491: send_adc_results();
  2897  06E8  3187  272B  3186   	fcall	_send_adc_results
  2898                           
  2899                           ;main.c: 492: } else if(msg == 0x3) {
  2900  06EB  2EC2               	goto	l1742
  2901  06EC                     l1762:	
  2902  06EC  3003               	movlw	3
  2903  06ED  0140               	movlb	0	; select bank0
  2904  06EE  062F               	xorwf	main@msg,w
  2905  06EF  1D03               	btfss	3,2
  2906  06F0  2EF5               	goto	l1766
  2907                           
  2908                           ;main.c: 493: turn_30();
  2909  06F1  3185  25F6  3186   	fcall	_turn_30
  2910                           
  2911                           ;main.c: 494: } else if(msg == 0x4) {
  2912  06F4  2EC2               	goto	l1742
  2913  06F5                     l1766:	
  2914  06F5  3004               	movlw	4
  2915  06F6  0140               	movlb	0	; select bank0
  2916  06F7  062F               	xorwf	main@msg,w
  2917  06F8  1D03               	btfss	3,2
  2918  06F9  2EFE               	goto	l1770
  2919                           
  2920                           ;main.c: 495: turn_90();
  2921  06FA  3185  2526  3186   	fcall	_turn_90
  2922                           
  2923                           ;main.c: 496: } else if(msg == 0x5) {
  2924  06FD  2EC2               	goto	l1742
  2925  06FE                     l1770:	
  2926  06FE  3005               	movlw	5
  2927  06FF  0140               	movlb	0	; select bank0
  2928  0700  062F               	xorwf	main@msg,w
  2929  0701  1D03               	btfss	3,2
  2930  0702  2F07               	goto	l1774
  2931                           
  2932                           ;main.c: 497: turn_120();
  2933  0703  3184  24E3  3186   	fcall	_turn_120
  2934                           
  2935                           ;main.c: 498: } else if(msg == 0x6) {
  2936  0706  2EC2               	goto	l1742
  2937  0707                     l1774:	
  2938  0707  3006               	movlw	6
  2939  0708  0140               	movlb	0	; select bank0
  2940  0709  062F               	xorwf	main@msg,w
  2941  070A  1D03               	btfss	3,2
  2942  070B  2F10               	goto	l1778
  2943                           
  2944                           ;main.c: 499: rotate_90_enable();
  2945  070C  3185  25AF  3186   	fcall	_rotate_90_enable
  2946                           
  2947                           ;main.c: 500: } else if(msg == 0x7) {
  2948  070F  2EC2               	goto	l1742
  2949  0710                     l1778:	
  2950  0710  3007               	movlw	7
  2951  0711  0140               	movlb	0	; select bank0
  2952  0712  062F               	xorwf	main@msg,w
  2953  0713  1D03               	btfss	3,2
  2954  0714  2F19               	goto	l1782
  2955                           
  2956                           ;main.c: 501: rotate_180_enable();
  2957  0715  3185  256A  3186   	fcall	_rotate_180_enable
  2958                           
  2959                           ;main.c: 502: } else if(msg == 0x8) {
  2960  0718  2EC2               	goto	l1742
  2961  0719                     l1782:	
  2962  0719  3008               	movlw	8
  2963  071A  0140               	movlb	0	; select bank0
  2964  071B  062F               	xorwf	main@msg,w
  2965  071C  1D03               	btfss	3,2
  2966  071D  2F22               	goto	l1786
  2967                           
  2968                           ;main.c: 503: disable_rotate();
  2969  071E  3184  2423  3186   	fcall	_disable_rotate
  2970                           
  2971                           ;main.c: 504: } else if(msg == 0x9) {
  2972  0721  2EC2               	goto	l1742
  2973  0722                     l1786:	
  2974  0722  3009               	movlw	9
  2975  0723  0140               	movlb	0	; select bank0
  2976  0724  062F               	xorwf	main@msg,w
  2977  0725  1D03               	btfss	3,2
  2978  0726  2EC2               	goto	l1742
  2979                           
  2980                           ;main.c: 505: disable_rotate();
  2981  0727  3184  2423  3186   	fcall	_disable_rotate
  2982                           
  2983                           ;main.c: 506: } else {
  2984  072A  2EC2               	goto	l1742
  2985  072B                     __end_of_main:	
  2986                           
  2987                           	psect	text1
  2988  0526                     __ptext1:	
  2989 ;; *************** function _turn_90 *****************
  2990 ;; Defined at:
  2991 ;;		line 289 in file "main.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    4
  3012 ;; This function calls:
  3013 ;;		_printf
  3014 ;;		_send_nibble
  3015 ;;		_set_pwm_duty
  3016 ;;		_wait_while_strobe
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _turn_90
  3024  0526                     _turn_90:	
  3025                           
  3026                           ;main.c: 291: wait_while_strobe(0);
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in _turn_90: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3030  0526  3000               	movlw	0
  3031  0527  0140               	movlb	0	; select bank0
  3032  0528  00A1               	movwf	wait_while_strobe@state
  3033  0529  00A2               	movwf	wait_while_strobe@state+1
  3034  052A  3182  22AB  3185   	fcall	_wait_while_strobe
  3035                           
  3036                           ;main.c: 292: printf("servo 90\n");
  3037  052D  3092               	movlw	low (STR_7| (0+32768))
  3038  052E  00F2               	movwf	printf@f
  3039  052F  3088               	movlw	high (STR_7| (0+32768))
  3040  0530  00F3               	movwf	printf@f+1
  3041  0531  3182  22BE  3185   	fcall	_printf
  3042                           
  3043                           ;main.c: 293: wait_while_strobe(1);
  3044  0534  3001               	movlw	1
  3045  0535  0140               	movlb	0	; select bank0
  3046  0536  00A1               	movwf	wait_while_strobe@state
  3047  0537  3000               	movlw	0
  3048  0538  00A2               	movwf	wait_while_strobe@state+1
  3049  0539  3182  22AB  3185   	fcall	_wait_while_strobe
  3050                           
  3051                           ;main.c: 296: set_pwm_duty(100);
  3052  053C  3064               	movlw	100
  3053  053D  00F8               	movwf	set_pwm_duty@duty
  3054  053E  3000               	movlw	0
  3055  053F  00F9               	movwf	set_pwm_duty@duty+1
  3056  0540  3183  2314  3185   	fcall	_set_pwm_duty
  3057                           
  3058                           ;main.c: 297: isScanning = 0;
  3059  0543  0140               	movlb	0	; select bank0
  3060  0544  01B8               	clrf	_isScanning
  3061  0545  01B9               	clrf	_isScanning+1
  3062                           
  3063                           ;main.c: 301: send_nibble(0xE);
  3064  0546  300E               	movlw	14
  3065  0547  3183  23EB  3185   	fcall	_send_nibble
  3066                           
  3067                           ;main.c: 303: wait_while_strobe(0);
  3068  054A  3000               	movlw	0
  3069  054B  0140               	movlb	0	; select bank0
  3070  054C  00A1               	movwf	wait_while_strobe@state
  3071  054D  00A2               	movwf	wait_while_strobe@state+1
  3072  054E  3182  22AB  3185   	fcall	_wait_while_strobe
  3073                           
  3074                           ;main.c: 304: wait_while_strobe(1);
  3075  0551  3001               	movlw	1
  3076  0552  0140               	movlb	0	; select bank0
  3077  0553  00A1               	movwf	wait_while_strobe@state
  3078  0554  3000               	movlw	0
  3079  0555  00A2               	movwf	wait_while_strobe@state+1
  3080  0556  3182  22AB  3185   	fcall	_wait_while_strobe
  3081                           
  3082                           ;main.c: 305: wait_while_strobe(0);
  3083  0559  3000               	movlw	0
  3084  055A  0140               	movlb	0	; select bank0
  3085  055B  00A1               	movwf	wait_while_strobe@state
  3086  055C  00A2               	movwf	wait_while_strobe@state+1
  3087  055D  3182  22AB  3185   	fcall	_wait_while_strobe
  3088                           
  3089                           ;main.c: 306: _delay((unsigned long)((50)*(1000000/4000.0)));
  3090  0560  3011               	movlw	17
  3091  0561  0140               	movlb	0	; select bank0
  3092  0562  00A5               	movwf	??_turn_90
  3093  0563  303A               	movlw	58
  3094  0564                     u767:	
  3095  0564  0B89               	decfsz	9,f
  3096  0565  2D64               	goto	u767
  3097  0566  0BA5               	decfsz	??_turn_90,f
  3098  0567  2D64               	goto	u767
  3099  0568  0000               	nop
  3100  0569  0008               	return
  3101  056A                     __end_of_turn_90:	
  3102                           
  3103                           	psect	text2
  3104  05F6                     __ptext2:	
  3105 ;; *************** function _turn_30 *****************
  3106 ;; Defined at:
  3107 ;;		line 267 in file "main.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3123 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3124 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3125 ;;Total ram usage:        1 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    4
  3128 ;; This function calls:
  3129 ;;		_printf
  3130 ;;		_send_nibble
  3131 ;;		_set_pwm_duty
  3132 ;;		_wait_while_strobe
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function _turn_30
  3140  05F6                     _turn_30:	
  3141                           
  3142                           ;main.c: 269: wait_while_strobe(0);
  3143                           
  3144                           ;incstack = 0
  3145                           ; Regs used in _turn_30: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3146  05F6  3000               	movlw	0
  3147  05F7  0140               	movlb	0	; select bank0
  3148  05F8  00A1               	movwf	wait_while_strobe@state
  3149  05F9  00A2               	movwf	wait_while_strobe@state+1
  3150  05FA  3182  22AB  3185   	fcall	_wait_while_strobe
  3151                           
  3152                           ;main.c: 270: printf("turn 30\n");
  3153  05FD  309C               	movlw	low (STR_6| (0+32768))
  3154  05FE  00F2               	movwf	printf@f
  3155  05FF  3088               	movlw	high (STR_6| (0+32768))
  3156  0600  00F3               	movwf	printf@f+1
  3157  0601  3182  22BE  3185   	fcall	_printf
  3158                           
  3159                           ;main.c: 271: wait_while_strobe(0);
  3160  0604  3000               	movlw	0
  3161  0605  0140               	movlb	0	; select bank0
  3162  0606  00A1               	movwf	wait_while_strobe@state
  3163  0607  00A2               	movwf	wait_while_strobe@state+1
  3164  0608  3182  22AB  3185   	fcall	_wait_while_strobe
  3165                           
  3166                           ;main.c: 272: wait_while_strobe(1);
  3167  060B  3001               	movlw	1
  3168  060C  0140               	movlb	0	; select bank0
  3169  060D  00A1               	movwf	wait_while_strobe@state
  3170  060E  3000               	movlw	0
  3171  060F  00A2               	movwf	wait_while_strobe@state+1
  3172  0610  3182  22AB  3185   	fcall	_wait_while_strobe
  3173                           
  3174                           ;main.c: 275: set_pwm_duty(75);
  3175  0613  304B               	movlw	75
  3176  0614  00F8               	movwf	set_pwm_duty@duty
  3177  0615  3000               	movlw	0
  3178  0616  00F9               	movwf	set_pwm_duty@duty+1
  3179  0617  3183  2314  3185   	fcall	_set_pwm_duty
  3180                           
  3181                           ;main.c: 276: isScanning = 0;
  3182  061A  0140               	movlb	0	; select bank0
  3183  061B  01B8               	clrf	_isScanning
  3184  061C  01B9               	clrf	_isScanning+1
  3185                           
  3186                           ;main.c: 280: send_nibble(0xE);
  3187  061D  300E               	movlw	14
  3188  061E  3183  23EB  3185   	fcall	_send_nibble
  3189                           
  3190                           ;main.c: 282: wait_while_strobe(0);
  3191  0621  3000               	movlw	0
  3192  0622  0140               	movlb	0	; select bank0
  3193  0623  00A1               	movwf	wait_while_strobe@state
  3194  0624  00A2               	movwf	wait_while_strobe@state+1
  3195  0625  3182  22AB  3185   	fcall	_wait_while_strobe
  3196                           
  3197                           ;main.c: 283: wait_while_strobe(1);
  3198  0628  3001               	movlw	1
  3199  0629  0140               	movlb	0	; select bank0
  3200  062A  00A1               	movwf	wait_while_strobe@state
  3201  062B  3000               	movlw	0
  3202  062C  00A2               	movwf	wait_while_strobe@state+1
  3203  062D  3182  22AB  3185   	fcall	_wait_while_strobe
  3204                           
  3205                           ;main.c: 284: wait_while_strobe(0);
  3206  0630  3000               	movlw	0
  3207  0631  0140               	movlb	0	; select bank0
  3208  0632  00A1               	movwf	wait_while_strobe@state
  3209  0633  00A2               	movwf	wait_while_strobe@state+1
  3210  0634  3182  22AB  3185   	fcall	_wait_while_strobe
  3211                           
  3212                           ;main.c: 285: _delay((unsigned long)((50)*(1000000/4000.0)));
  3213  0637  3011               	movlw	17
  3214  0638  0140               	movlb	0	; select bank0
  3215  0639  00A5               	movwf	??_turn_30
  3216  063A  303A               	movlw	58
  3217  063B                     u777:	
  3218  063B  0B89               	decfsz	9,f
  3219  063C  2E3B               	goto	u777
  3220  063D  0BA5               	decfsz	??_turn_30,f
  3221  063E  2E3B               	goto	u777
  3222  063F  0000               	nop
  3223  0640  0008               	return
  3224  0641                     __end_of_turn_30:	
  3225                           
  3226                           	psect	text3
  3227  04E3                     __ptext3:	
  3228 ;; *************** function _turn_120 *****************
  3229 ;; Defined at:
  3230 ;;		line 310 in file "main.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3246 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3247 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3248 ;;Total ram usage:        1 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    4
  3251 ;; This function calls:
  3252 ;;		_printf
  3253 ;;		_send_nibble
  3254 ;;		_set_pwm_duty
  3255 ;;		_wait_while_strobe
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _turn_120
  3263  04E3                     _turn_120:	
  3264                           
  3265                           ;main.c: 312: wait_while_strobe(0);
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _turn_120: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3269  04E3  3000               	movlw	0
  3270  04E4  0140               	movlb	0	; select bank0
  3271  04E5  00A1               	movwf	wait_while_strobe@state
  3272  04E6  00A2               	movwf	wait_while_strobe@state+1
  3273  04E7  3182  22AB  3184   	fcall	_wait_while_strobe
  3274                           
  3275                           ;main.c: 313: printf("scan 120\n");
  3276  04EA  3088               	movlw	low (STR_8| (0+32768))
  3277  04EB  00F2               	movwf	printf@f
  3278  04EC  3088               	movlw	high (STR_8| (0+32768))
  3279  04ED  00F3               	movwf	printf@f+1
  3280  04EE  3182  22BE  3184   	fcall	_printf
  3281                           
  3282                           ;main.c: 314: wait_while_strobe(1);
  3283  04F1  3001               	movlw	1
  3284  04F2  0140               	movlb	0	; select bank0
  3285  04F3  00A1               	movwf	wait_while_strobe@state
  3286  04F4  3000               	movlw	0
  3287  04F5  00A2               	movwf	wait_while_strobe@state+1
  3288  04F6  3182  22AB  3184   	fcall	_wait_while_strobe
  3289                           
  3290                           ;main.c: 317: set_pwm_duty(0);
  3291  04F9  3000               	movlw	0
  3292  04FA  00F8               	movwf	set_pwm_duty@duty
  3293  04FB  00F9               	movwf	set_pwm_duty@duty+1
  3294  04FC  3183  2314  3184   	fcall	_set_pwm_duty
  3295                           
  3296                           ;main.c: 318: isScanning = 0;
  3297  04FF  0140               	movlb	0	; select bank0
  3298  0500  01B8               	clrf	_isScanning
  3299  0501  01B9               	clrf	_isScanning+1
  3300                           
  3301                           ;main.c: 322: send_nibble(0xE);
  3302  0502  300E               	movlw	14
  3303  0503  3183  23EB  3184   	fcall	_send_nibble
  3304                           
  3305                           ;main.c: 324: wait_while_strobe(0);
  3306  0506  3000               	movlw	0
  3307  0507  0140               	movlb	0	; select bank0
  3308  0508  00A1               	movwf	wait_while_strobe@state
  3309  0509  00A2               	movwf	wait_while_strobe@state+1
  3310  050A  3182  22AB  3184   	fcall	_wait_while_strobe
  3311                           
  3312                           ;main.c: 325: wait_while_strobe(1);
  3313  050D  3001               	movlw	1
  3314  050E  0140               	movlb	0	; select bank0
  3315  050F  00A1               	movwf	wait_while_strobe@state
  3316  0510  3000               	movlw	0
  3317  0511  00A2               	movwf	wait_while_strobe@state+1
  3318  0512  3182  22AB  3184   	fcall	_wait_while_strobe
  3319                           
  3320                           ;main.c: 326: wait_while_strobe(0);
  3321  0515  3000               	movlw	0
  3322  0516  0140               	movlb	0	; select bank0
  3323  0517  00A1               	movwf	wait_while_strobe@state
  3324  0518  00A2               	movwf	wait_while_strobe@state+1
  3325  0519  3182  22AB  3184   	fcall	_wait_while_strobe
  3326                           
  3327                           ;main.c: 327: _delay((unsigned long)((50)*(1000000/4000.0)));
  3328  051C  3011               	movlw	17
  3329  051D  0140               	movlb	0	; select bank0
  3330  051E  00A5               	movwf	??_turn_120
  3331  051F  303A               	movlw	58
  3332  0520                     u787:	
  3333  0520  0B89               	decfsz	9,f
  3334  0521  2D20               	goto	u787
  3335  0522  0BA5               	decfsz	??_turn_120,f
  3336  0523  2D20               	goto	u787
  3337  0524  0000               	nop
  3338  0525  0008               	return
  3339  0526                     __end_of_turn_120:	
  3340                           
  3341                           	psect	text4
  3342  0641                     __ptext4:	
  3343 ;; *************** function _sensor_reset *****************
  3344 ;; Defined at:
  3345 ;;		line 190 in file "main.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3363 ;;Total ram usage:        1 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    4
  3366 ;; This function calls:
  3367 ;;		_printf
  3368 ;;		_send_nibble
  3369 ;;		_set_pwm_duty
  3370 ;;		_wait_while_strobe
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _sensor_reset
  3378  0641                     _sensor_reset:	
  3379                           
  3380                           ;main.c: 192: wait_while_strobe(0);
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _sensor_reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3384  0641  3000               	movlw	0
  3385  0642  0140               	movlb	0	; select bank0
  3386  0643  00A1               	movwf	wait_while_strobe@state
  3387  0644  00A2               	movwf	wait_while_strobe@state+1
  3388  0645  3182  22AB  3186   	fcall	_wait_while_strobe
  3389                           
  3390                           ;main.c: 193: printf("REEEEEEEEEEEEEEEEEEEEEEEset\n");
  3391  0648  301D               	movlw	low (STR_4| (0+32768))
  3392  0649  00F2               	movwf	printf@f
  3393  064A  3088               	movlw	high (STR_4| (0+32768))
  3394  064B  00F3               	movwf	printf@f+1
  3395  064C  3182  22BE  3186   	fcall	_printf
  3396                           
  3397                           ;main.c: 194: wait_while_strobe(1);
  3398  064F  3001               	movlw	1
  3399  0650  0140               	movlb	0	; select bank0
  3400  0651  00A1               	movwf	wait_while_strobe@state
  3401  0652  3000               	movlw	0
  3402  0653  00A2               	movwf	wait_while_strobe@state+1
  3403  0654  3182  22AB  3186   	fcall	_wait_while_strobe
  3404                           
  3405                           ;main.c: 197: set_pwm_duty(50);
  3406  0657  3032               	movlw	50
  3407  0658  00F8               	movwf	set_pwm_duty@duty
  3408  0659  3000               	movlw	0
  3409  065A  00F9               	movwf	set_pwm_duty@duty+1
  3410  065B  3183  2314  3186   	fcall	_set_pwm_duty
  3411                           
  3412                           ;main.c: 198: isScanning = 0;
  3413  065E  0140               	movlb	0	; select bank0
  3414  065F  01B8               	clrf	_isScanning
  3415  0660  01B9               	clrf	_isScanning+1
  3416                           
  3417                           ;main.c: 199: scanCounter = 50;
  3418  0661  3032               	movlw	50
  3419  0662  00B6               	movwf	_scanCounter
  3420  0663  3000               	movlw	0
  3421  0664  00B7               	movwf	_scanCounter+1
  3422                           
  3423                           ;main.c: 200: scanUpperLimit = 75;
  3424  0665  304B               	movlw	75
  3425  0666  00B2               	movwf	_scanUpperLimit
  3426  0667  3000               	movlw	0
  3427  0668  00B3               	movwf	_scanUpperLimit+1
  3428                           
  3429                           ;main.c: 201: scanLowerLimit = 25;
  3430  0669  3019               	movlw	25
  3431  066A  00B0               	movwf	_scanLowerLimit
  3432  066B  3000               	movlw	0
  3433  066C  00B1               	movwf	_scanLowerLimit+1
  3434                           
  3435                           ;main.c: 205: send_nibble(0xE);
  3436  066D  300E               	movlw	14
  3437  066E  3183  23EB  3186   	fcall	_send_nibble
  3438                           
  3439                           ;main.c: 207: wait_while_strobe(0);
  3440  0671  3000               	movlw	0
  3441  0672  0140               	movlb	0	; select bank0
  3442  0673  00A1               	movwf	wait_while_strobe@state
  3443  0674  00A2               	movwf	wait_while_strobe@state+1
  3444  0675  3182  22AB  3186   	fcall	_wait_while_strobe
  3445                           
  3446                           ;main.c: 208: wait_while_strobe(1);
  3447  0678  3001               	movlw	1
  3448  0679  0140               	movlb	0	; select bank0
  3449  067A  00A1               	movwf	wait_while_strobe@state
  3450  067B  3000               	movlw	0
  3451  067C  00A2               	movwf	wait_while_strobe@state+1
  3452  067D  3182  22AB  3186   	fcall	_wait_while_strobe
  3453                           
  3454                           ;main.c: 209: wait_while_strobe(0);
  3455  0680  3000               	movlw	0
  3456  0681  0140               	movlb	0	; select bank0
  3457  0682  00A1               	movwf	wait_while_strobe@state
  3458  0683  00A2               	movwf	wait_while_strobe@state+1
  3459  0684  3182  22AB  3186   	fcall	_wait_while_strobe
  3460                           
  3461                           ;main.c: 210: _delay((unsigned long)((50)*(1000000/4000.0)));
  3462  0687  3011               	movlw	17
  3463  0688  0140               	movlb	0	; select bank0
  3464  0689  00A5               	movwf	??_sensor_reset
  3465  068A  303A               	movlw	58
  3466  068B                     u797:	
  3467  068B  0B89               	decfsz	9,f
  3468  068C  2E8B               	goto	u797
  3469  068D  0BA5               	decfsz	??_sensor_reset,f
  3470  068E  2E8B               	goto	u797
  3471  068F  0000               	nop
  3472  0690  0008               	return
  3473  0691                     __end_of_sensor_reset:	
  3474                           
  3475                           	psect	text5
  3476  0460                     __ptext5:	
  3477 ;; *************** function _sensor_ping *****************
  3478 ;; Defined at:
  3479 ;;		line 173 in file "main.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3496 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:        1 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    4
  3500 ;; This function calls:
  3501 ;;		_printf
  3502 ;;		_send_nibble
  3503 ;;		_wait_while_strobe
  3504 ;; This function is called by:
  3505 ;;		_main
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function _sensor_ping
  3511  0460                     _sensor_ping:	
  3512                           
  3513                           ;main.c: 175: wait_while_strobe(0);
  3514                           
  3515                           ;incstack = 0
  3516                           ; Regs used in _sensor_ping: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3517  0460  3000               	movlw	0
  3518  0461  0140               	movlb	0	; select bank0
  3519  0462  00A1               	movwf	wait_while_strobe@state
  3520  0463  00A2               	movwf	wait_while_strobe@state+1
  3521  0464  3182  22AB  3184   	fcall	_wait_while_strobe
  3522                           
  3523                           ;main.c: 176: printf("PING\n");
  3524  0467  30AE               	movlw	low (STR_2| (0+32768))
  3525  0468  00F2               	movwf	printf@f
  3526  0469  3088               	movlw	high (STR_2| (0+32768))
  3527  046A  00F3               	movwf	printf@f+1
  3528  046B  3182  22BE  3184   	fcall	_printf
  3529                           
  3530                           ;main.c: 177: wait_while_strobe(1);
  3531  046E  3001               	movlw	1
  3532  046F  0140               	movlb	0	; select bank0
  3533  0470  00A1               	movwf	wait_while_strobe@state
  3534  0471  3000               	movlw	0
  3535  0472  00A2               	movwf	wait_while_strobe@state+1
  3536  0473  3182  22AB  3184   	fcall	_wait_while_strobe
  3537                           
  3538                           ;main.c: 180: send_nibble(0xE);
  3539  0476  300E               	movlw	14
  3540  0477  3183  23EB  3184   	fcall	_send_nibble
  3541                           
  3542                           ;main.c: 182: wait_while_strobe(0);
  3543  047A  3000               	movlw	0
  3544  047B  0140               	movlb	0	; select bank0
  3545  047C  00A1               	movwf	wait_while_strobe@state
  3546  047D  00A2               	movwf	wait_while_strobe@state+1
  3547  047E  3182  22AB  3184   	fcall	_wait_while_strobe
  3548                           
  3549                           ;main.c: 183: wait_while_strobe(1);
  3550  0481  3001               	movlw	1
  3551  0482  0140               	movlb	0	; select bank0
  3552  0483  00A1               	movwf	wait_while_strobe@state
  3553  0484  3000               	movlw	0
  3554  0485  00A2               	movwf	wait_while_strobe@state+1
  3555  0486  3182  22AB  3184   	fcall	_wait_while_strobe
  3556                           
  3557                           ;main.c: 184: wait_while_strobe(0);
  3558  0489  3000               	movlw	0
  3559  048A  0140               	movlb	0	; select bank0
  3560  048B  00A1               	movwf	wait_while_strobe@state
  3561  048C  00A2               	movwf	wait_while_strobe@state+1
  3562  048D  3182  22AB  3184   	fcall	_wait_while_strobe
  3563                           
  3564                           ;main.c: 185: printf("Success\n");
  3565  0490  30A5               	movlw	low (STR_3| (0+32768))
  3566  0491  00F2               	movwf	printf@f
  3567  0492  3088               	movlw	high (STR_3| (0+32768))
  3568  0493  00F3               	movwf	printf@f+1
  3569  0494  3182  22BE  3184   	fcall	_printf
  3570                           
  3571                           ;main.c: 186: _delay((unsigned long)((50)*(1000000/4000.0)));
  3572  0497  3011               	movlw	17
  3573  0498  0140               	movlb	0	; select bank0
  3574  0499  00A5               	movwf	??_sensor_ping
  3575  049A  303A               	movlw	58
  3576  049B                     u807:	
  3577  049B  0B89               	decfsz	9,f
  3578  049C  2C9B               	goto	u807
  3579  049D  0BA5               	decfsz	??_sensor_ping,f
  3580  049E  2C9B               	goto	u807
  3581  049F  0000               	nop
  3582  04A0  0008               	return
  3583  04A1                     __end_of_sensor_ping:	
  3584                           
  3585                           	psect	text6
  3586  072B                     __ptext6:	
  3587 ;; *************** function _send_adc_results *****************
  3588 ;; Defined at:
  3589 ;;		line 214 in file "main.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  results         2   11[BANK0 ] unsigned int 
  3594 ;;  nib3            1   10[BANK0 ] unsigned char 
  3595 ;;  nib2            1    9[BANK0 ] unsigned char 
  3596 ;;  nib1            1    8[BANK0 ] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3607 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3608 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3609 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3610 ;;Total ram usage:        8 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    4
  3613 ;; This function calls:
  3614 ;;		_printf
  3615 ;;		_send_nibble
  3616 ;;		_wait_while_strobe
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           
  3623                           ;psect for function _send_adc_results
  3624  072B                     _send_adc_results:	
  3625                           
  3626                           ;main.c: 216: printf("Sending ADC results \n");
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _send_adc_results: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3630  072B  3055               	movlw	low (STR_5| (0+32768))
  3631  072C  00F2               	movwf	printf@f
  3632  072D  3088               	movlw	high (STR_5| (0+32768))
  3633  072E  00F3               	movwf	printf@f+1
  3634  072F  3182  22BE  3187   	fcall	_printf
  3635                           
  3636                           ;main.c: 217: unsigned results;
  3637                           ;main.c: 218: unsigned char nib1, nib2, nib3;
  3638                           ;main.c: 221: ADPCH = 1;
  3639  0732  3001               	movlw	1
  3640  0733  0141               	movlb	1	; select bank1
  3641  0734  009E               	movwf	30	;volatile
  3642                           
  3643                           ;main.c: 222: ADCON0 |= 1;
  3644  0735  1413               	bsf	19,0	;volatile
  3645  0736                     l219:	
  3646                           ;main.c: 223: while(ADCON0 & 1);
  3647                           
  3648  0736  1813               	btfsc	19,0	;volatile
  3649  0737  2F36               	goto	l219
  3650                           
  3651                           ;main.c: 224: results = (unsigned) ((ADRESH << 8) + ADRESL);
  3652  0738  080D               	movf	13,w	;volatile
  3653  0739  0140               	movlb	0	; select bank0
  3654  073A  00AC               	movwf	send_adc_results@results+1
  3655  073B  0141               	movlb	1	; select bank1
  3656  073C  080C               	movf	12,w	;volatile
  3657  073D  0140               	movlb	0	; select bank0
  3658  073E  00AB               	movwf	send_adc_results@results
  3659                           
  3660                           ;main.c: 226: nib1 = (results & 0x300) >> 8;
  3661  073F  082C               	movf	send_adc_results@results+1,w
  3662  0740  3903               	andlw	3
  3663  0741  00A5               	movwf	??_send_adc_results
  3664  0742  0825               	movf	??_send_adc_results,w
  3665  0743  00A8               	movwf	send_adc_results@nib1
  3666                           
  3667                           ;main.c: 227: nib2 = (results & 0x0F0) >> 4;
  3668  0744  082C               	movf	send_adc_results@results+1,w
  3669  0745  00A6               	movwf	??_send_adc_results+1
  3670  0746  082B               	movf	send_adc_results@results,w
  3671  0747  00A5               	movwf	??_send_adc_results
  3672  0748  3004               	movlw	4
  3673  0749                     u615:	
  3674  0749  36A6               	lsrf	??_send_adc_results+1,f
  3675  074A  0CA5               	rrf	??_send_adc_results,f
  3676  074B  0B89               	decfsz	9,f
  3677  074C  2F49               	goto	u615
  3678  074D  0825               	movf	??_send_adc_results,w
  3679  074E  390F               	andlw	15
  3680  074F  00A7               	movwf	??_send_adc_results+2
  3681  0750  0827               	movf	??_send_adc_results+2,w
  3682  0751  00A9               	movwf	send_adc_results@nib2
  3683                           
  3684                           ;main.c: 228: nib3 = (results & 0x00F);
  3685  0752  082B               	movf	send_adc_results@results,w
  3686  0753  390F               	andlw	15
  3687  0754  00A5               	movwf	??_send_adc_results
  3688  0755  0825               	movf	??_send_adc_results,w
  3689  0756  00AA               	movwf	send_adc_results@nib3
  3690                           
  3691                           ;main.c: 230: wait_while_strobe(0);
  3692  0757  3000               	movlw	0
  3693  0758  00A1               	movwf	wait_while_strobe@state
  3694  0759  00A2               	movwf	wait_while_strobe@state+1
  3695  075A  3182  22AB  3187   	fcall	_wait_while_strobe
  3696                           
  3697                           ;main.c: 232: wait_while_strobe(1);
  3698  075D  3001               	movlw	1
  3699  075E  0140               	movlb	0	; select bank0
  3700  075F  00A1               	movwf	wait_while_strobe@state
  3701  0760  3000               	movlw	0
  3702  0761  00A2               	movwf	wait_while_strobe@state+1
  3703  0762  3182  22AB  3187   	fcall	_wait_while_strobe
  3704                           
  3705                           ;main.c: 234: send_nibble(nib1);
  3706  0765  0140               	movlb	0	; select bank0
  3707  0766  0828               	movf	send_adc_results@nib1,w
  3708  0767  3183  23EB  3187   	fcall	_send_nibble
  3709                           
  3710                           ;main.c: 236: wait_while_strobe(0);
  3711  076A  3000               	movlw	0
  3712  076B  0140               	movlb	0	; select bank0
  3713  076C  00A1               	movwf	wait_while_strobe@state
  3714  076D  00A2               	movwf	wait_while_strobe@state+1
  3715  076E  3182  22AB  3187   	fcall	_wait_while_strobe
  3716                           
  3717                           ;main.c: 237: wait_while_strobe(1);
  3718  0771  3001               	movlw	1
  3719  0772  0140               	movlb	0	; select bank0
  3720  0773  00A1               	movwf	wait_while_strobe@state
  3721  0774  3000               	movlw	0
  3722  0775  00A2               	movwf	wait_while_strobe@state+1
  3723  0776  3182  22AB  3187   	fcall	_wait_while_strobe
  3724                           
  3725                           ;main.c: 238: wait_while_strobe(0);
  3726  0779  3000               	movlw	0
  3727  077A  0140               	movlb	0	; select bank0
  3728  077B  00A1               	movwf	wait_while_strobe@state
  3729  077C  00A2               	movwf	wait_while_strobe@state+1
  3730  077D  3182  22AB  3187   	fcall	_wait_while_strobe
  3731                           
  3732                           ;main.c: 240: wait_while_strobe(1);
  3733  0780  3001               	movlw	1
  3734  0781  0140               	movlb	0	; select bank0
  3735  0782  00A1               	movwf	wait_while_strobe@state
  3736  0783  3000               	movlw	0
  3737  0784  00A2               	movwf	wait_while_strobe@state+1
  3738  0785  3182  22AB  3187   	fcall	_wait_while_strobe
  3739                           
  3740                           ;main.c: 242: send_nibble(nib2);
  3741  0788  0140               	movlb	0	; select bank0
  3742  0789  0829               	movf	send_adc_results@nib2,w
  3743  078A  3183  23EB  3187   	fcall	_send_nibble
  3744                           
  3745                           ;main.c: 244: wait_while_strobe(0);
  3746  078D  3000               	movlw	0
  3747  078E  0140               	movlb	0	; select bank0
  3748  078F  00A1               	movwf	wait_while_strobe@state
  3749  0790  00A2               	movwf	wait_while_strobe@state+1
  3750  0791  3182  22AB  3187   	fcall	_wait_while_strobe
  3751                           
  3752                           ;main.c: 245: wait_while_strobe(1);
  3753  0794  3001               	movlw	1
  3754  0795  0140               	movlb	0	; select bank0
  3755  0796  00A1               	movwf	wait_while_strobe@state
  3756  0797  3000               	movlw	0
  3757  0798  00A2               	movwf	wait_while_strobe@state+1
  3758  0799  3182  22AB  3187   	fcall	_wait_while_strobe
  3759                           
  3760                           ;main.c: 246: wait_while_strobe(0);
  3761  079C  3000               	movlw	0
  3762  079D  0140               	movlb	0	; select bank0
  3763  079E  00A1               	movwf	wait_while_strobe@state
  3764  079F  00A2               	movwf	wait_while_strobe@state+1
  3765  07A0  3182  22AB  3187   	fcall	_wait_while_strobe
  3766                           
  3767                           ;main.c: 248: wait_while_strobe(1);
  3768  07A3  3001               	movlw	1
  3769  07A4  0140               	movlb	0	; select bank0
  3770  07A5  00A1               	movwf	wait_while_strobe@state
  3771  07A6  3000               	movlw	0
  3772  07A7  00A2               	movwf	wait_while_strobe@state+1
  3773  07A8  3182  22AB  3187   	fcall	_wait_while_strobe
  3774                           
  3775                           ;main.c: 250: send_nibble(nib3);
  3776  07AB  0140               	movlb	0	; select bank0
  3777  07AC  082A               	movf	send_adc_results@nib3,w
  3778  07AD  3183  23EB  3187   	fcall	_send_nibble
  3779                           
  3780                           ;main.c: 252: wait_while_strobe(0);
  3781  07B0  3000               	movlw	0
  3782  07B1  0140               	movlb	0	; select bank0
  3783  07B2  00A1               	movwf	wait_while_strobe@state
  3784  07B3  00A2               	movwf	wait_while_strobe@state+1
  3785  07B4  3182  22AB  3187   	fcall	_wait_while_strobe
  3786                           
  3787                           ;main.c: 253: wait_while_strobe(1);
  3788  07B7  3001               	movlw	1
  3789  07B8  0140               	movlb	0	; select bank0
  3790  07B9  00A1               	movwf	wait_while_strobe@state
  3791  07BA  3000               	movlw	0
  3792  07BB  00A2               	movwf	wait_while_strobe@state+1
  3793  07BC  3182  22AB  3187   	fcall	_wait_while_strobe
  3794                           
  3795                           ;main.c: 254: wait_while_strobe(0);
  3796  07BF  3000               	movlw	0
  3797  07C0  0140               	movlb	0	; select bank0
  3798  07C1  00A1               	movwf	wait_while_strobe@state
  3799  07C2  00A2               	movwf	wait_while_strobe@state+1
  3800  07C3  3182  22AB  3187   	fcall	_wait_while_strobe
  3801                           
  3802                           ;main.c: 256: wait_while_strobe(1);
  3803  07C6  3001               	movlw	1
  3804  07C7  0140               	movlb	0	; select bank0
  3805  07C8  00A1               	movwf	wait_while_strobe@state
  3806  07C9  3000               	movlw	0
  3807  07CA  00A2               	movwf	wait_while_strobe@state+1
  3808  07CB  3182  22AB  3187   	fcall	_wait_while_strobe
  3809                           
  3810                           ;main.c: 258: send_nibble(0xE);
  3811  07CE  300E               	movlw	14
  3812  07CF  3183  23EB  3187   	fcall	_send_nibble
  3813                           
  3814                           ;main.c: 260: wait_while_strobe(0);
  3815  07D2  3000               	movlw	0
  3816  07D3  0140               	movlb	0	; select bank0
  3817  07D4  00A1               	movwf	wait_while_strobe@state
  3818  07D5  00A2               	movwf	wait_while_strobe@state+1
  3819  07D6  3182  22AB  3187   	fcall	_wait_while_strobe
  3820                           
  3821                           ;main.c: 261: wait_while_strobe(1);
  3822  07D9  3001               	movlw	1
  3823  07DA  0140               	movlb	0	; select bank0
  3824  07DB  00A1               	movwf	wait_while_strobe@state
  3825  07DC  3000               	movlw	0
  3826  07DD  00A2               	movwf	wait_while_strobe@state+1
  3827  07DE  3182  22AB  3187   	fcall	_wait_while_strobe
  3828                           
  3829                           ;main.c: 262: wait_while_strobe(0);
  3830  07E1  3000               	movlw	0
  3831  07E2  0140               	movlb	0	; select bank0
  3832  07E3  00A1               	movwf	wait_while_strobe@state
  3833  07E4  00A2               	movwf	wait_while_strobe@state+1
  3834  07E5  3182  22AB  3187   	fcall	_wait_while_strobe
  3835                           
  3836                           ;main.c: 263: _delay((unsigned long)((50)*(1000000/4000.0)));
  3837  07E8  3011               	movlw	17
  3838  07E9  0140               	movlb	0	; select bank0
  3839  07EA  00A5               	movwf	??_send_adc_results
  3840  07EB  303A               	movlw	58
  3841  07EC                     u817:	
  3842  07EC  0B89               	decfsz	9,f
  3843  07ED  2FEC               	goto	u817
  3844  07EE  0BA5               	decfsz	??_send_adc_results,f
  3845  07EF  2FEC               	goto	u817
  3846  07F0  0000               	nop
  3847  07F1  0008               	return
  3848  07F2                     __end_of_send_adc_results:	
  3849                           
  3850                           	psect	text7
  3851  05AF                     __ptext7:	
  3852 ;; *************** function _rotate_90_enable *****************
  3853 ;; Defined at:
  3854 ;;		line 350 in file "main.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3870 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3872 ;;Total ram usage:        1 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    4
  3875 ;; This function calls:
  3876 ;;		_printf
  3877 ;;		_send_nibble
  3878 ;;		_wait_while_strobe
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _rotate_90_enable
  3886  05AF                     _rotate_90_enable:	
  3887                           
  3888                           ;main.c: 352: wait_while_strobe(0);
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _rotate_90_enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3892  05AF  3000               	movlw	0
  3893  05B0  0140               	movlb	0	; select bank0
  3894  05B1  00A1               	movwf	wait_while_strobe@state
  3895  05B2  00A2               	movwf	wait_while_strobe@state+1
  3896  05B3  3182  22AB  3185   	fcall	_wait_while_strobe
  3897                           
  3898                           ;main.c: 353: printf("set scanning to 90degrees\n");
  3899  05B6  303A               	movlw	low (STR_10| (0+32768))
  3900  05B7  00F2               	movwf	printf@f
  3901  05B8  3088               	movlw	high (STR_10| (0+32768))
  3902  05B9  00F3               	movwf	printf@f+1
  3903  05BA  3182  22BE  3185   	fcall	_printf
  3904                           
  3905                           ;main.c: 354: wait_while_strobe(1);
  3906  05BD  3001               	movlw	1
  3907  05BE  0140               	movlb	0	; select bank0
  3908  05BF  00A1               	movwf	wait_while_strobe@state
  3909  05C0  3000               	movlw	0
  3910  05C1  00A2               	movwf	wait_while_strobe@state+1
  3911  05C2  3182  22AB  3185   	fcall	_wait_while_strobe
  3912                           
  3913                           ;main.c: 357: isScanning = 1;
  3914  05C5  3001               	movlw	1
  3915  05C6  0140               	movlb	0	; select bank0
  3916  05C7  00B8               	movwf	_isScanning
  3917  05C8  3000               	movlw	0
  3918  05C9  00B9               	movwf	_isScanning+1
  3919                           
  3920                           ;main.c: 358: scanUpperLimit = 75;
  3921  05CA  304B               	movlw	75
  3922  05CB  00B2               	movwf	_scanUpperLimit
  3923  05CC  3000               	movlw	0
  3924  05CD  00B3               	movwf	_scanUpperLimit+1
  3925                           
  3926                           ;main.c: 359: scanLowerLimit = 25;
  3927  05CE  3019               	movlw	25
  3928  05CF  00B0               	movwf	_scanLowerLimit
  3929  05D0  3000               	movlw	0
  3930  05D1  00B1               	movwf	_scanLowerLimit+1
  3931                           
  3932                           ;main.c: 363: send_nibble(0xE);
  3933  05D2  300E               	movlw	14
  3934  05D3  3183  23EB  3185   	fcall	_send_nibble
  3935                           
  3936                           ;main.c: 365: wait_while_strobe(0);
  3937  05D6  3000               	movlw	0
  3938  05D7  0140               	movlb	0	; select bank0
  3939  05D8  00A1               	movwf	wait_while_strobe@state
  3940  05D9  00A2               	movwf	wait_while_strobe@state+1
  3941  05DA  3182  22AB  3185   	fcall	_wait_while_strobe
  3942                           
  3943                           ;main.c: 366: wait_while_strobe(1);
  3944  05DD  3001               	movlw	1
  3945  05DE  0140               	movlb	0	; select bank0
  3946  05DF  00A1               	movwf	wait_while_strobe@state
  3947  05E0  3000               	movlw	0
  3948  05E1  00A2               	movwf	wait_while_strobe@state+1
  3949  05E2  3182  22AB  3185   	fcall	_wait_while_strobe
  3950                           
  3951                           ;main.c: 367: wait_while_strobe(0);
  3952  05E5  3000               	movlw	0
  3953  05E6  0140               	movlb	0	; select bank0
  3954  05E7  00A1               	movwf	wait_while_strobe@state
  3955  05E8  00A2               	movwf	wait_while_strobe@state+1
  3956  05E9  3182  22AB  3185   	fcall	_wait_while_strobe
  3957                           
  3958                           ;main.c: 368: _delay((unsigned long)((50)*(1000000/4000.0)));
  3959  05EC  3011               	movlw	17
  3960  05ED  0140               	movlb	0	; select bank0
  3961  05EE  00A5               	movwf	??_rotate_90_enable
  3962  05EF  303A               	movlw	58
  3963  05F0                     u827:	
  3964  05F0  0B89               	decfsz	9,f
  3965  05F1  2DF0               	goto	u827
  3966  05F2  0BA5               	decfsz	??_rotate_90_enable,f
  3967  05F3  2DF0               	goto	u827
  3968  05F4  0000               	nop
  3969  05F5  0008               	return
  3970  05F6                     __end_of_rotate_90_enable:	
  3971                           
  3972                           	psect	text8
  3973  056A                     __ptext8:	
  3974 ;; *************** function _rotate_180_enable *****************
  3975 ;; Defined at:
  3976 ;;		line 371 in file "main.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3993 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        1 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    4
  3997 ;; This function calls:
  3998 ;;		_printf
  3999 ;;		_send_nibble
  4000 ;;		_wait_while_strobe
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function _rotate_180_enable
  4008  056A                     _rotate_180_enable:	
  4009                           
  4010                           ;main.c: 373: wait_while_strobe(0);
  4011                           
  4012                           ;incstack = 0
  4013                           ; Regs used in _rotate_180_enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4014  056A  3000               	movlw	0
  4015  056B  0140               	movlb	0	; select bank0
  4016  056C  00A1               	movwf	wait_while_strobe@state
  4017  056D  00A2               	movwf	wait_while_strobe@state+1
  4018  056E  3182  22AB  3185   	fcall	_wait_while_strobe
  4019                           
  4020                           ;main.c: 374: printf("set scanning to 18 0degrees\n");
  4021  0571  3000               	movlw	low (STR_11| (0+32768))
  4022  0572  00F2               	movwf	printf@f
  4023  0573  3088               	movlw	high (STR_11| (0+32768))
  4024  0574  00F3               	movwf	printf@f+1
  4025  0575  3182  22BE  3185   	fcall	_printf
  4026                           
  4027                           ;main.c: 375: wait_while_strobe(1);
  4028  0578  3001               	movlw	1
  4029  0579  0140               	movlb	0	; select bank0
  4030  057A  00A1               	movwf	wait_while_strobe@state
  4031  057B  3000               	movlw	0
  4032  057C  00A2               	movwf	wait_while_strobe@state+1
  4033  057D  3182  22AB  3185   	fcall	_wait_while_strobe
  4034                           
  4035                           ;main.c: 378: isScanning = 1;
  4036  0580  3001               	movlw	1
  4037  0581  0140               	movlb	0	; select bank0
  4038  0582  00B8               	movwf	_isScanning
  4039  0583  3000               	movlw	0
  4040  0584  00B9               	movwf	_isScanning+1
  4041                           
  4042                           ;main.c: 379: scanUpperLimit = 100;
  4043  0585  3064               	movlw	100
  4044  0586  00B2               	movwf	_scanUpperLimit
  4045  0587  3000               	movlw	0
  4046  0588  00B3               	movwf	_scanUpperLimit+1
  4047                           
  4048                           ;main.c: 380: scanLowerLimit = 0;
  4049  0589  01B0               	clrf	_scanLowerLimit
  4050  058A  01B1               	clrf	_scanLowerLimit+1
  4051                           
  4052                           ;main.c: 384: send_nibble(0xE);
  4053  058B  300E               	movlw	14
  4054  058C  3183  23EB  3185   	fcall	_send_nibble
  4055                           
  4056                           ;main.c: 386: wait_while_strobe(0);
  4057  058F  3000               	movlw	0
  4058  0590  0140               	movlb	0	; select bank0
  4059  0591  00A1               	movwf	wait_while_strobe@state
  4060  0592  00A2               	movwf	wait_while_strobe@state+1
  4061  0593  3182  22AB  3185   	fcall	_wait_while_strobe
  4062                           
  4063                           ;main.c: 387: wait_while_strobe(1);
  4064  0596  3001               	movlw	1
  4065  0597  0140               	movlb	0	; select bank0
  4066  0598  00A1               	movwf	wait_while_strobe@state
  4067  0599  3000               	movlw	0
  4068  059A  00A2               	movwf	wait_while_strobe@state+1
  4069  059B  3182  22AB  3185   	fcall	_wait_while_strobe
  4070                           
  4071                           ;main.c: 388: wait_while_strobe(0);
  4072  059E  3000               	movlw	0
  4073  059F  0140               	movlb	0	; select bank0
  4074  05A0  00A1               	movwf	wait_while_strobe@state
  4075  05A1  00A2               	movwf	wait_while_strobe@state+1
  4076  05A2  3182  22AB  3185   	fcall	_wait_while_strobe
  4077                           
  4078                           ;main.c: 389: _delay((unsigned long)((50)*(1000000/4000.0)));
  4079  05A5  3011               	movlw	17
  4080  05A6  0140               	movlb	0	; select bank0
  4081  05A7  00A5               	movwf	??_rotate_180_enable
  4082  05A8  303A               	movlw	58
  4083  05A9                     u837:	
  4084  05A9  0B89               	decfsz	9,f
  4085  05AA  2DA9               	goto	u837
  4086  05AB  0BA5               	decfsz	??_rotate_180_enable,f
  4087  05AC  2DA9               	goto	u837
  4088  05AD  0000               	nop
  4089  05AE  0008               	return
  4090  05AF                     __end_of_rotate_180_enable:	
  4091                           
  4092                           	psect	text9
  4093  035D                     __ptext9:	
  4094 ;; *************** function _receive_msg *****************
  4095 ;; Defined at:
  4096 ;;		line 420 in file "main.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  results         2    7[BANK0 ] unsigned int 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      unsigned char 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4113 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4114 ;;Total ram usage:        4 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    4
  4117 ;; This function calls:
  4118 ;;		_return_bus_nibble
  4119 ;;		_wait_while_strobe
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function _receive_msg
  4127  035D                     _receive_msg:	
  4128                           
  4129                           ;main.c: 422: unsigned results;
  4130                           ;main.c: 431: TRISC = 0b11100110;
  4131                           
  4132                           ;incstack = 0
  4133                           ; Regs used in _receive_msg: [wreg+status,2+status,0+pclath+cstack]
  4134  035D  30E6               	movlw	230
  4135  035E  0140               	movlb	0	; select bank0
  4136  035F  0093               	movwf	19	;volatile
  4137                           
  4138                           ;main.c: 433: wait_while_strobe(1);
  4139  0360  3001               	movlw	1
  4140  0361  00A1               	movwf	wait_while_strobe@state
  4141  0362  3000               	movlw	0
  4142  0363  00A2               	movwf	wait_while_strobe@state+1
  4143  0364  3182  22AB  3183   	fcall	_wait_while_strobe
  4144                           
  4145                           ;main.c: 434: wait_while_strobe(0);
  4146  0367  3000               	movlw	0
  4147  0368  0140               	movlb	0	; select bank0
  4148  0369  00A1               	movwf	wait_while_strobe@state
  4149  036A  00A2               	movwf	wait_while_strobe@state+1
  4150  036B  3182  22AB  3183   	fcall	_wait_while_strobe
  4151  036E                     l1694:	
  4152                           ;main.c: 436: while(PORTCbits.RC6 == 1)
  4153                           
  4154  036E  0140               	movlb	0	; select bank0
  4155  036F  1F0E               	btfss	14,6	;volatile
  4156  0370  2B7C               	goto	l1696
  4157                           
  4158                           ;main.c: 437: {
  4159                           ;main.c: 438: results = return_bus_nibble();
  4160  0371  3182  22F5  3183   	fcall	_return_bus_nibble
  4161  0374  0140               	movlb	0	; select bank0
  4162  0375  00A5               	movwf	??_receive_msg
  4163  0376  01A6               	clrf	??_receive_msg+1
  4164  0377  0825               	movf	??_receive_msg,w
  4165  0378  00A7               	movwf	receive_msg@results
  4166  0379  0826               	movf	??_receive_msg+1,w
  4167  037A  00A8               	movwf	receive_msg@results+1
  4168  037B  2B6E               	goto	l1694
  4169  037C                     l1696:	
  4170                           
  4171                           ;main.c: 439: }
  4172                           ;main.c: 441: wait_while_strobe(0);
  4173  037C  3000               	movlw	0
  4174  037D  00A1               	movwf	wait_while_strobe@state
  4175  037E  00A2               	movwf	wait_while_strobe@state+1
  4176  037F  3182  22AB         	fcall	_wait_while_strobe
  4177                           
  4178                           ;main.c: 444: return results;
  4179  0381  0140               	movlb	0	; select bank0
  4180  0382  0827               	movf	receive_msg@results,w
  4181  0383  0008               	return
  4182  0384                     __end_of_receive_msg:	
  4183                           
  4184                           	psect	text10
  4185  02F5                     __ptext10:	
  4186 ;; *************** function _return_bus_nibble *****************
  4187 ;; Defined at:
  4188 ;;		line 412 in file "main.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4205 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4206 ;;Total ram usage:        4 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_receive_msg
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _return_bus_nibble
  4217  02F5                     _return_bus_nibble:	
  4218                           
  4219                           ;main.c: 414: return (PORTCbits.RC5 << 3) +
  4220                           ;main.c: 415: (PORTCbits.RC7 << 2) +
  4221                           ;main.c: 416: (PORTCbits.RC1 << 1) +
  4222                           ;main.c: 417: PORTCbits.RC2;
  4223                           
  4224                           ;incstack = 0
  4225                           ; Regs used in _return_bus_nibble: [wreg+status,2+status,0]
  4226  02F5  0140               	movlb	0	; select bank0
  4227  02F6  0E0E               	swapf	14,w	;volatile
  4228  02F7  0C89               	rrf	9,f
  4229  02F8  3901               	andlw	1
  4230  02F9  00F0               	movwf	??_return_bus_nibble
  4231  02FA  3003               	movlw	3
  4232  02FB                     u585:	
  4233  02FB  35F0               	lslf	??_return_bus_nibble,f
  4234  02FC  0B89               	decfsz	9,f
  4235  02FD  2AFB               	goto	u585
  4236  02FE  0D0E               	rlf	14,w	;volatile
  4237  02FF  0D0E               	rlf	14,w	;volatile
  4238  0300  3901               	andlw	1
  4239  0301  00F1               	movwf	??_return_bus_nibble+1
  4240  0302  3001               	movlw	1
  4241  0303                     u595:	
  4242  0303  35F1               	lslf	??_return_bus_nibble+1,f
  4243  0304  3EFF               	addlw	-1
  4244  0305  1D03               	skipz
  4245  0306  2B03               	goto	u595
  4246  0307  3571               	lslf	??_return_bus_nibble+1,w
  4247  0308  0770               	addwf	??_return_bus_nibble,w
  4248  0309  00F2               	movwf	??_return_bus_nibble+2
  4249  030A  0C0E               	rrf	14,w	;volatile
  4250  030B  3901               	andlw	1
  4251  030C  0709               	addwf	9,w
  4252  030D  0772               	addwf	??_return_bus_nibble+2,w
  4253  030E  00F3               	movwf	??_return_bus_nibble+3
  4254  030F  0C0E               	rrf	14,w	;volatile
  4255  0310  0C89               	rrf	9,f
  4256  0311  3901               	andlw	1
  4257  0312  0773               	addwf	??_return_bus_nibble+3,w
  4258  0313  0008               	return
  4259  0314                     __end_of_return_bus_nibble:	
  4260                           
  4261                           	psect	text11
  4262  0336                     __ptext11:	
  4263 ;; *************** function _everything_init *****************
  4264 ;; Defined at:
  4265 ;;		line 78 in file "main.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    4
  4286 ;; This function calls:
  4287 ;;		_adc_init
  4288 ;;		_set_pwm_duty
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _everything_init
  4296  0336                     _everything_init:	
  4297                           
  4298                           ;main.c: 82: TRISC = 0;
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _everything_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4302  0336  0140               	movlb	0	; select bank0
  4303  0337  0193               	clrf	19	;volatile
  4304                           
  4305                           ;main.c: 83: ANSELC = 0;
  4306  0338  017E               	movlb	62	; select bank62
  4307  0339  01CE               	clrf	78	;volatile
  4308                           
  4309                           ;main.c: 88: PR2 = 77;
  4310  033A  304D               	movlw	77
  4311  033B  0145               	movlb	5	; select bank5
  4312  033C  008D               	movwf	13	;volatile
  4313                           
  4314                           ;main.c: 91: CCP1CON = 0x8F;
  4315  033D  308F               	movlw	143
  4316  033E  0146               	movlb	6	; select bank6
  4317  033F  008E               	movwf	14	;volatile
  4318                           
  4319                           ;main.c: 94: set_pwm_duty(50);
  4320  0340  3032               	movlw	50
  4321  0341  00F8               	movwf	set_pwm_duty@duty
  4322  0342  3000               	movlw	0
  4323  0343  00F9               	movwf	set_pwm_duty@duty+1
  4324  0344  3183  2314  3183   	fcall	_set_pwm_duty
  4325                           
  4326                           ;main.c: 97: CCPTMRS0 = 0x01;
  4327  0347  3001               	movlw	1
  4328  0348  0144               	movlb	4	; select bank4
  4329  0349  009E               	movwf	30	;volatile
  4330                           
  4331                           ;main.c: 103: T2CLKCON = 0x01;
  4332  034A  3001               	movlw	1
  4333  034B  0145               	movlb	5	; select bank5
  4334  034C  0090               	movwf	16	;volatile
  4335                           
  4336                           ;main.c: 104: T2CON = 0xE0;
  4337  034D  30E0               	movlw	224
  4338  034E  008E               	movwf	14	;volatile
  4339                           
  4340                           ;main.c: 107: PIR4 = 0;
  4341  034F  014E               	movlb	14	; select bank14
  4342  0350  0190               	clrf	16	;volatile
  4343                           
  4344                           ;main.c: 109: T2CON |= 0x80;
  4345  0351  0145               	movlb	5	; select bank5
  4346  0352  178E               	bsf	14,7	;volatile
  4347                           
  4348                           ;main.c: 112: T0CON0 = 0x90;
  4349  0353  3090               	movlw	144
  4350  0354  0140               	movlb	0	; select bank0
  4351  0355  009E               	movwf	30	;volatile
  4352                           
  4353                           ;main.c: 113: T0CON1 = 0x41;
  4354  0356  3041               	movlw	65
  4355  0357  009F               	movwf	31	;volatile
  4356                           
  4357                           ;main.c: 114: T0CON0 |= 0x80;
  4358  0358  179E               	bsf	30,7	;volatile
  4359                           
  4360                           ;main.c: 117: TRISA = 0;
  4361  0359  0191               	clrf	17	;volatile
  4362                           
  4363                           ;main.c: 120: adc_init();
  4364  035A  3182  22D9         	fcall	_adc_init
  4365  035C  0008               	return
  4366  035D                     __end_of_everything_init:	
  4367                           
  4368                           	psect	text12
  4369  02D9                     __ptext12:	
  4370 ;; *************** function _adc_init *****************
  4371 ;; Defined at:
  4372 ;;		line 44 in file "main.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    3
  4393 ;; This function calls:
  4394 ;;		_printf
  4395 ;; This function is called by:
  4396 ;;		_everything_init
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function _adc_init
  4402  02D9                     _adc_init:	
  4403                           
  4404                           ;main.c: 46: TRISA = 0;
  4405                           
  4406                           ;incstack = 0
  4407                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4408  02D9  0140               	movlb	0	; select bank0
  4409  02DA  0191               	clrf	17	;volatile
  4410                           
  4411                           ;main.c: 47: ANSELA = 0;
  4412  02DB  017E               	movlb	62	; select bank62
  4413  02DC  01B8               	clrf	56	;volatile
  4414                           
  4415                           ;main.c: 49: TRISAbits.TRISA1 = 1;
  4416  02DD  0140               	movlb	0	; select bank0
  4417  02DE  1491               	bsf	17,1	;volatile
  4418                           
  4419                           ;main.c: 50: ANSELAbits.ANSA1 = 1;
  4420  02DF  017E               	movlb	62	; select bank62
  4421  02E0  14B8               	bsf	56,1	;volatile
  4422                           
  4423                           ;main.c: 51: ADCON1 = 0;
  4424  02E1  0141               	movlb	1	; select bank1
  4425  02E2  0194               	clrf	20	;volatile
  4426                           
  4427                           ;main.c: 52: ADCON2 = 0;
  4428  02E3  0195               	clrf	21	;volatile
  4429                           
  4430                           ;main.c: 53: ADCON3 = 0;
  4431  02E4  0196               	clrf	22	;volatile
  4432                           
  4433                           ;main.c: 54: ADACT = 0;
  4434  02E5  0199               	clrf	25	;volatile
  4435                           
  4436                           ;main.c: 55: ADSTAT = 0;
  4437  02E6  0197               	clrf	23	;volatile
  4438                           
  4439                           ;main.c: 56: ADCAP = 0;
  4440  02E7  019B               	clrf	27	;volatile
  4441                           
  4442                           ;main.c: 57: ADPRE = 0;
  4443  02E8  019C               	clrf	28	;volatile
  4444                           
  4445                           ;main.c: 58: ADCON0 = 0b10000100;
  4446  02E9  3084               	movlw	132
  4447  02EA  0093               	movwf	19	;volatile
  4448                           
  4449                           ;main.c: 59: ADREF = 0;
  4450  02EB  019A               	clrf	26	;volatile
  4451                           
  4452                           ;main.c: 60: ADPCH = 0b00000001;
  4453  02EC  3001               	movlw	1
  4454  02ED  009E               	movwf	30	;volatile
  4455                           
  4456                           ;main.c: 62: printf("Initialized ADC\n");
  4457  02EE  306B               	movlw	low (STR_1| (0+32768))
  4458  02EF  00F2               	movwf	printf@f
  4459  02F0  3088               	movlw	high (STR_1| (0+32768))
  4460  02F1  00F3               	movwf	printf@f+1
  4461  02F2  3182  22BE         	fcall	_printf
  4462  02F4  0008               	return
  4463  02F5                     __end_of_adc_init:	
  4464                           
  4465                           	psect	text13
  4466  0423                     __ptext13:	
  4467 ;; *************** function _disable_rotate *****************
  4468 ;; Defined at:
  4469 ;;		line 392 in file "main.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4486 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4487 ;;Total ram usage:        1 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    4
  4490 ;; This function calls:
  4491 ;;		_printf
  4492 ;;		_send_nibble
  4493 ;;		_wait_while_strobe
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _disable_rotate
  4501  0423                     _disable_rotate:	
  4502                           
  4503                           ;main.c: 394: wait_while_strobe(0);
  4504                           
  4505                           ;incstack = 0
  4506                           ; Regs used in _disable_rotate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4507  0423  3000               	movlw	0
  4508  0424  0140               	movlb	0	; select bank0
  4509  0425  00A1               	movwf	wait_while_strobe@state
  4510  0426  00A2               	movwf	wait_while_strobe@state+1
  4511  0427  3182  22AB  3184   	fcall	_wait_while_strobe
  4512                           
  4513                           ;main.c: 395: printf("set scanning to 18 0degrees\n");
  4514  042A  3000               	movlw	low (STR_11| (0+32768))
  4515  042B  00F2               	movwf	printf@f
  4516  042C  3088               	movlw	high (STR_11| (0+32768))
  4517  042D  00F3               	movwf	printf@f+1
  4518  042E  3182  22BE  3184   	fcall	_printf
  4519                           
  4520                           ;main.c: 396: wait_while_strobe(1);
  4521  0431  3001               	movlw	1
  4522  0432  0140               	movlb	0	; select bank0
  4523  0433  00A1               	movwf	wait_while_strobe@state
  4524  0434  3000               	movlw	0
  4525  0435  00A2               	movwf	wait_while_strobe@state+1
  4526  0436  3182  22AB  3184   	fcall	_wait_while_strobe
  4527                           
  4528                           ;main.c: 399: isScanning = 0;
  4529  0439  0140               	movlb	0	; select bank0
  4530  043A  01B8               	clrf	_isScanning
  4531  043B  01B9               	clrf	_isScanning+1
  4532                           
  4533                           ;main.c: 403: send_nibble(0xE);
  4534  043C  300E               	movlw	14
  4535  043D  3183  23EB  3184   	fcall	_send_nibble
  4536                           
  4537                           ;main.c: 405: wait_while_strobe(0);
  4538  0440  3000               	movlw	0
  4539  0441  0140               	movlb	0	; select bank0
  4540  0442  00A1               	movwf	wait_while_strobe@state
  4541  0443  00A2               	movwf	wait_while_strobe@state+1
  4542  0444  3182  22AB  3184   	fcall	_wait_while_strobe
  4543                           
  4544                           ;main.c: 406: wait_while_strobe(1);
  4545  0447  3001               	movlw	1
  4546  0448  0140               	movlb	0	; select bank0
  4547  0449  00A1               	movwf	wait_while_strobe@state
  4548  044A  3000               	movlw	0
  4549  044B  00A2               	movwf	wait_while_strobe@state+1
  4550  044C  3182  22AB  3184   	fcall	_wait_while_strobe
  4551                           
  4552                           ;main.c: 407: wait_while_strobe(0);
  4553  044F  3000               	movlw	0
  4554  0450  0140               	movlb	0	; select bank0
  4555  0451  00A1               	movwf	wait_while_strobe@state
  4556  0452  00A2               	movwf	wait_while_strobe@state+1
  4557  0453  3182  22AB  3184   	fcall	_wait_while_strobe
  4558                           
  4559                           ;main.c: 408: _delay((unsigned long)((50)*(1000000/4000.0)));
  4560  0456  3011               	movlw	17
  4561  0457  0140               	movlb	0	; select bank0
  4562  0458  00A5               	movwf	??_disable_rotate
  4563  0459  303A               	movlw	58
  4564  045A                     u847:	
  4565  045A  0B89               	decfsz	9,f
  4566  045B  2C5A               	goto	u847
  4567  045C  0BA5               	decfsz	??_disable_rotate,f
  4568  045D  2C5A               	goto	u847
  4569  045E  0000               	nop
  4570  045F  0008               	return
  4571  0460                     __end_of_disable_rotate:	
  4572                           
  4573                           	psect	text14
  4574  02AB                     __ptext14:	
  4575 ;; *************** function _wait_while_strobe *****************
  4576 ;; Defined at:
  4577 ;;		line 149 in file "main.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  state           2    1[BANK0 ] int 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0, pclath, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4594 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:        4 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    3
  4598 ;; This function calls:
  4599 ;;		_handle_scan
  4600 ;; This function is called by:
  4601 ;;		_sensor_ping
  4602 ;;		_sensor_reset
  4603 ;;		_send_adc_results
  4604 ;;		_turn_30
  4605 ;;		_turn_90
  4606 ;;		_turn_120
  4607 ;;		_rotate_90_enable
  4608 ;;		_rotate_180_enable
  4609 ;;		_disable_rotate
  4610 ;;		_receive_msg
  4611 ;;		_enter_scan_mode
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           
  4616                           ;psect for function _wait_while_strobe
  4617  02AB                     _wait_while_strobe:	
  4618  02AB                     l1414:	
  4619                           ;main.c: 151: while(PORTCbits.RC6 == state)
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _wait_while_strobe: [wreg+status,2+status,0+pclath+cstack]
  4623                           
  4624  02AB  0140               	movlb	0	; select bank0
  4625  02AC  0E0E               	swapf	14,w	;volatile
  4626  02AD  0C89               	rrf	9,f
  4627  02AE  0C89               	rrf	9,f
  4628  02AF  3901               	andlw	1
  4629  02B0  00A3               	movwf	??_wait_while_strobe
  4630  02B1  01A4               	clrf	??_wait_while_strobe+1
  4631  02B2  0822               	movf	wait_while_strobe@state+1,w
  4632  02B3  0624               	xorwf	??_wait_while_strobe+1,w
  4633  02B4  1D03               	skipz
  4634  02B5  2AB8               	goto	u555
  4635  02B6  0821               	movf	wait_while_strobe@state,w
  4636  02B7  0623               	xorwf	??_wait_while_strobe,w
  4637  02B8                     u555:	
  4638  02B8  1D03               	btfss	3,2
  4639  02B9  0008               	return
  4640                           
  4641                           ;main.c: 152: {
  4642                           ;main.c: 153: handle_scan();
  4643  02BA  3184  24A1  3182   	fcall	_handle_scan
  4644  02BD  2AAB               	goto	l1414
  4645  02BE                     __end_of_wait_while_strobe:	
  4646                           
  4647                           	psect	text15
  4648  04A1                     __ptext15:	
  4649 ;; *************** function _handle_scan *****************
  4650 ;; Defined at:
  4651 ;;		line 124 in file "main.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0, pclath, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:        1 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    2
  4672 ;; This function calls:
  4673 ;;		_set_pwm_duty
  4674 ;; This function is called by:
  4675 ;;		_wait_while_strobe
  4676 ;;		_main
  4677 ;;		_test_scan
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function _handle_scan
  4683  04A1                     _handle_scan:	
  4684                           
  4685                           ;main.c: 127: if(PIR0bits.TMR0IF && isScanning)
  4686                           
  4687                           ;incstack = 0
  4688                           ; Regs used in _handle_scan: [wreg+status,2+status,0+pclath+cstack]
  4689  04A1  014E               	movlb	14	; select bank14
  4690  04A2  1E8C               	btfss	12,5	;volatile
  4691  04A3  0008               	return
  4692  04A4  0140               	movlb	0	; select bank0
  4693  04A5  0838               	movf	_isScanning,w
  4694  04A6  0439               	iorwf	_isScanning+1,w
  4695  04A7  1903               	btfsc	3,2
  4696  04A8  0008               	return
  4697                           
  4698                           ;main.c: 128: {
  4699                           ;main.c: 129: PIR0bits.TMR0IF = 0;
  4700  04A9  014E               	movlb	14	; select bank14
  4701  04AA  128C               	bcf	12,5	;volatile
  4702                           
  4703                           ;main.c: 132: if(isScanningUp)
  4704  04AB  0140               	movlb	0	; select bank0
  4705  04AC  0834               	movf	_isScanningUp,w
  4706  04AD  0435               	iorwf	_isScanningUp+1,w
  4707  04AE  1903               	btfsc	3,2
  4708  04AF  2CB4               	goto	l1348
  4709                           
  4710                           ;main.c: 133: scanCounter +=2;
  4711  04B0  3002               	movlw	2
  4712  04B1  07B6               	addwf	_scanCounter,f
  4713  04B2  3000               	movlw	0
  4714  04B3  2CB7               	goto	L1
  4715  04B4                     l1348:	
  4716                           
  4717                           ;main.c: 134: else
  4718                           ;main.c: 135: scanCounter -=2;
  4719  04B4  30FE               	movlw	254
  4720  04B5  07B6               	addwf	_scanCounter,f
  4721  04B6  30FF               	movlw	255
  4722  04B7                     L1:	
  4723  04B7  3DB7               	addwfc	_scanCounter+1,f
  4724                           
  4725                           ;main.c: 138: set_pwm_duty(scanCounter);
  4726  04B8  0837               	movf	_scanCounter+1,w
  4727  04B9  00F9               	movwf	set_pwm_duty@duty+1
  4728  04BA  0836               	movf	_scanCounter,w
  4729  04BB  00F8               	movwf	set_pwm_duty@duty
  4730  04BC  3183  2314  3184   	fcall	_set_pwm_duty
  4731                           
  4732                           ;main.c: 141: if(scanCounter >= scanUpperLimit)
  4733  04BF  0140               	movlb	0	; select bank0
  4734  04C0  0837               	movf	_scanCounter+1,w
  4735  04C1  3A80               	xorlw	128
  4736  04C2  00A0               	movwf	??_handle_scan
  4737  04C3  0833               	movf	_scanUpperLimit+1,w
  4738  04C4  3A80               	xorlw	128
  4739  04C5  0220               	subwf	??_handle_scan,w
  4740  04C6  1D03               	skipz
  4741  04C7  2CCA               	goto	u515
  4742  04C8  0832               	movf	_scanUpperLimit,w
  4743  04C9  0236               	subwf	_scanCounter,w
  4744  04CA                     u515:	
  4745  04CA  1C03               	skipc
  4746  04CB  2CD0               	goto	l1356
  4747                           
  4748                           ;main.c: 142: isScanningUp = 0;
  4749  04CC  0140               	movlb	0	; select bank0
  4750  04CD  01B4               	clrf	_isScanningUp
  4751  04CE  01B5               	clrf	_isScanningUp+1
  4752  04CF  0008               	return
  4753  04D0                     l1356:	
  4754                           
  4755                           ;main.c: 143: else if(scanCounter <= scanLowerLimit)
  4756  04D0  0140               	movlb	0	; select bank0
  4757  04D1  0831               	movf	_scanLowerLimit+1,w
  4758  04D2  3A80               	xorlw	128
  4759  04D3  00A0               	movwf	??_handle_scan
  4760  04D4  0837               	movf	_scanCounter+1,w
  4761  04D5  3A80               	xorlw	128
  4762  04D6  0220               	subwf	??_handle_scan,w
  4763  04D7  1D03               	skipz
  4764  04D8  2CDB               	goto	u525
  4765  04D9  0836               	movf	_scanCounter,w
  4766  04DA  0230               	subwf	_scanLowerLimit,w
  4767  04DB                     u525:	
  4768  04DB  1C03               	skipc
  4769  04DC  0008               	return
  4770                           
  4771                           ;main.c: 144: isScanningUp = 1;
  4772  04DD  3001               	movlw	1
  4773  04DE  0140               	movlb	0	; select bank0
  4774  04DF  00B4               	movwf	_isScanningUp
  4775  04E0  3000               	movlw	0
  4776  04E1  00B5               	movwf	_isScanningUp+1
  4777  04E2  0008               	return
  4778  04E3                     __end_of_handle_scan:	
  4779                           
  4780                           	psect	text16
  4781  0314                     __ptext16:	
  4782 ;; *************** function _set_pwm_duty *****************
  4783 ;; Defined at:
  4784 ;;		line 66 in file "main.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  duty            2    8[COMMON] unsigned int 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  pr              2   12[COMMON] unsigned int 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, pclath, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:        6 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		___lwdiv
  4807 ;; This function is called by:
  4808 ;;		_everything_init
  4809 ;;		_handle_scan
  4810 ;;		_sensor_reset
  4811 ;;		_turn_30
  4812 ;;		_turn_90
  4813 ;;		_turn_120
  4814 ;;		_main
  4815 ;;		_test_scan
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           
  4820                           ;psect for function _set_pwm_duty
  4821  0314                     _set_pwm_duty:	
  4822                           
  4823                           ;main.c: 68: unsigned pr;
  4824                           ;main.c: 72: pr = 15 + duty*16/100;
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _set_pwm_duty: [wreg+status,2+status,0+pclath+cstack]
  4828  0314  3064               	movlw	100
  4829  0315  00F0               	movwf	___lwdiv@divisor
  4830  0316  3000               	movlw	0
  4831  0317  00F1               	movwf	___lwdiv@divisor+1
  4832  0318  0879               	movf	set_pwm_duty@duty+1,w
  4833  0319  00FB               	movwf	??_set_pwm_duty+1
  4834  031A  0878               	movf	set_pwm_duty@duty,w
  4835  031B  00FA               	movwf	??_set_pwm_duty
  4836  031C  0EFA               	swapf	??_set_pwm_duty,f
  4837  031D  0EFB               	swapf	??_set_pwm_duty+1,f
  4838  031E  30F0               	movlw	240
  4839  031F  05FB               	andwf	??_set_pwm_duty+1,f
  4840  0320  087A               	movf	??_set_pwm_duty,w
  4841  0321  390F               	andlw	15
  4842  0322  04FB               	iorwf	??_set_pwm_duty+1,f
  4843  0323  30F0               	movlw	240
  4844  0324  05FA               	andwf	??_set_pwm_duty,f
  4845  0325  087A               	movf	??_set_pwm_duty,w
  4846  0326  00F2               	movwf	___lwdiv@dividend
  4847  0327  087B               	movf	??_set_pwm_duty+1,w
  4848  0328  00F3               	movwf	___lwdiv@dividend+1
  4849  0329  3183  23B7         	fcall	___lwdiv
  4850  032B  0870               	movf	?___lwdiv,w
  4851  032C  3E0F               	addlw	15
  4852  032D  00FC               	movwf	set_pwm_duty@pr
  4853  032E  3000               	movlw	0
  4854  032F  3D71               	addwfc	?___lwdiv+1,w
  4855  0330  00FD               	movwf	set_pwm_duty@pr+1
  4856                           
  4857                           ;main.c: 73: CCPR1H = 0;
  4858  0331  0146               	movlb	6	; select bank6
  4859  0332  018D               	clrf	13	;volatile
  4860                           
  4861                           ;main.c: 74: CCPR1L = pr;
  4862  0333  087C               	movf	set_pwm_duty@pr,w
  4863  0334  008C               	movwf	12	;volatile
  4864  0335  0008               	return
  4865  0336                     __end_of_set_pwm_duty:	
  4866                           
  4867                           	psect	text17
  4868  03B7                     __ptext17:	
  4869 ;; *************** function ___lwdiv *****************
  4870 ;; Defined at:
  4871 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  divisor         2    0[COMMON] unsigned int 
  4874 ;;  dividend        2    2[COMMON] unsigned int 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  quotient        2    5[COMMON] unsigned int 
  4877 ;;  counter         1    7[COMMON] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    0[COMMON] unsigned int 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4890 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:        8 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_set_pwm_duty
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function ___lwdiv
  4902  03B7                     ___lwdiv:	
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4906  03B7  01F5               	clrf	___lwdiv@quotient
  4907  03B8  01F6               	clrf	___lwdiv@quotient+1
  4908  03B9  0870               	movf	___lwdiv@divisor,w
  4909  03BA  0471               	iorwf	___lwdiv@divisor+1,w
  4910  03BB  1903               	btfsc	3,2
  4911  03BC  2BE6               	goto	l1320
  4912  03BD  01F7               	clrf	___lwdiv@counter
  4913  03BE  0AF7               	incf	___lwdiv@counter,f
  4914  03BF                     l1308:	
  4915  03BF  1BF1               	btfsc	___lwdiv@divisor+1,7
  4916  03C0  2BCB               	goto	l1310
  4917  03C1  3001               	movlw	1
  4918  03C2                     u415:	
  4919  03C2  35F0               	lslf	___lwdiv@divisor,f
  4920  03C3  0DF1               	rlf	___lwdiv@divisor+1,f
  4921  03C4  0B89               	decfsz	9,f
  4922  03C5  2BC2               	goto	u415
  4923  03C6  3001               	movlw	1
  4924  03C7  00F4               	movwf	??___lwdiv
  4925  03C8  0874               	movf	??___lwdiv,w
  4926  03C9  07F7               	addwf	___lwdiv@counter,f
  4927  03CA  2BBF               	goto	l1308
  4928  03CB                     l1310:	
  4929  03CB  3001               	movlw	1
  4930  03CC                     u435:	
  4931  03CC  35F5               	lslf	___lwdiv@quotient,f
  4932  03CD  0DF6               	rlf	___lwdiv@quotient+1,f
  4933  03CE  0B89               	decfsz	9,f
  4934  03CF  2BCC               	goto	u435
  4935  03D0  0871               	movf	___lwdiv@divisor+1,w
  4936  03D1  0273               	subwf	___lwdiv@dividend+1,w
  4937  03D2  1D03               	skipz
  4938  03D3  2BD6               	goto	u445
  4939  03D4  0870               	movf	___lwdiv@divisor,w
  4940  03D5  0272               	subwf	___lwdiv@dividend,w
  4941  03D6                     u445:	
  4942  03D6  1C03               	skipc
  4943  03D7  2BDD               	goto	l1316
  4944  03D8  0870               	movf	___lwdiv@divisor,w
  4945  03D9  02F2               	subwf	___lwdiv@dividend,f
  4946  03DA  0871               	movf	___lwdiv@divisor+1,w
  4947  03DB  3BF3               	subwfb	___lwdiv@dividend+1,f
  4948  03DC  1475               	bsf	___lwdiv@quotient,0
  4949  03DD                     l1316:	
  4950  03DD  3001               	movlw	1
  4951  03DE                     u455:	
  4952  03DE  36F1               	lsrf	___lwdiv@divisor+1,f
  4953  03DF  0CF0               	rrf	___lwdiv@divisor,f
  4954  03E0  0B89               	decfsz	9,f
  4955  03E1  2BDE               	goto	u455
  4956  03E2  3001               	movlw	1
  4957  03E3  02F7               	subwf	___lwdiv@counter,f
  4958  03E4  1D03               	btfss	3,2
  4959  03E5  2BCB               	goto	l1310
  4960  03E6                     l1320:	
  4961  03E6  0876               	movf	___lwdiv@quotient+1,w
  4962  03E7  00F1               	movwf	?___lwdiv+1
  4963  03E8  0875               	movf	___lwdiv@quotient,w
  4964  03E9  00F0               	movwf	?___lwdiv
  4965  03EA  0008               	return
  4966  03EB                     __end_of___lwdiv:	
  4967                           
  4968                           	psect	text18
  4969  03EB                     __ptext18:	
  4970 ;; *************** function _send_nibble *****************
  4971 ;; Defined at:
  4972 ;;		line 160 in file "main.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  nibble          1    wreg     unsigned char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  nibble          1    2[COMMON] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4990 ;;Total ram usage:        3 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_sensor_ping
  4996 ;;		_sensor_reset
  4997 ;;		_send_adc_results
  4998 ;;		_turn_30
  4999 ;;		_turn_90
  5000 ;;		_turn_120
  5001 ;;		_rotate_90_enable
  5002 ;;		_rotate_180_enable
  5003 ;;		_disable_rotate
  5004 ;;		_enter_scan_mode
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function _send_nibble
  5010  03EB                     _send_nibble:	
  5011                           
  5012                           ;incstack = 0
  5013                           ; Regs used in _send_nibble: [wreg+status,2+status,0]
  5014                           ;send_nibble@nibble stored from wreg
  5015  03EB  00F2               	movwf	send_nibble@nibble
  5016                           
  5017                           ;main.c: 163: TRISC = 0;
  5018  03EC  0140               	movlb	0	; select bank0
  5019  03ED  0193               	clrf	19	;volatile
  5020                           
  5021                           ;main.c: 164: TRISCbits.TRISC6 = 1;
  5022  03EE  1713               	bsf	19,6	;volatile
  5023                           
  5024                           ;main.c: 166: PORTCbits.RC2 = (nibble) & 1;
  5025  03EF  0872               	movf	send_nibble@nibble,w
  5026  03F0  3901               	andlw	1
  5027  03F1  00F0               	movwf	??_send_nibble
  5028  03F2  0DF0               	rlf	??_send_nibble,f
  5029  03F3  0DF0               	rlf	??_send_nibble,f
  5030  03F4  080E               	movf	14,w	;volatile
  5031  03F5  0670               	xorwf	??_send_nibble,w
  5032  03F6  39FB               	andlw	-5
  5033  03F7  0670               	xorwf	??_send_nibble,w
  5034  03F8  008E               	movwf	14	;volatile
  5035                           
  5036                           ;main.c: 167: PORTCbits.RC1 = (nibble >> 1) & 1 ;
  5037  03F9  3672               	lsrf	send_nibble@nibble,w
  5038  03FA  3901               	andlw	1
  5039  03FB  00F0               	movwf	??_send_nibble
  5040  03FC  0DF0               	rlf	??_send_nibble,f
  5041  03FD  080E               	movf	14,w	;volatile
  5042  03FE  0670               	xorwf	??_send_nibble,w
  5043  03FF  39FD               	andlw	-3
  5044  0400  0670               	xorwf	??_send_nibble,w
  5045  0401  008E               	movwf	14	;volatile
  5046                           
  5047                           ;main.c: 168: PORTCbits.RC7 = (nibble >> 2) & 1 ;
  5048  0402  0872               	movf	send_nibble@nibble,w
  5049  0403  00F0               	movwf	??_send_nibble
  5050  0404  3002               	movlw	2
  5051  0405                     u565:	
  5052  0405  36F0               	lsrf	??_send_nibble,f
  5053  0406  0B89               	decfsz	9,f
  5054  0407  2C05               	goto	u565
  5055  0408  0870               	movf	??_send_nibble,w
  5056  0409  3901               	andlw	1
  5057  040A  00F1               	movwf	??_send_nibble+1
  5058  040B  0CF1               	rrf	??_send_nibble+1,f
  5059  040C  0CF1               	rrf	??_send_nibble+1,f
  5060  040D  080E               	movf	14,w	;volatile
  5061  040E  0671               	xorwf	??_send_nibble+1,w
  5062  040F  397F               	andlw	-129
  5063  0410  0671               	xorwf	??_send_nibble+1,w
  5064  0411  008E               	movwf	14	;volatile
  5065                           
  5066                           ;main.c: 169: PORTCbits.RC5 = (nibble >> 3) & 1;
  5067  0412  0872               	movf	send_nibble@nibble,w
  5068  0413  00F0               	movwf	??_send_nibble
  5069  0414  3003               	movlw	3
  5070  0415                     u575:	
  5071  0415  36F0               	lsrf	??_send_nibble,f
  5072  0416  0B89               	decfsz	9,f
  5073  0417  2C15               	goto	u575
  5074  0418  0870               	movf	??_send_nibble,w
  5075  0419  3901               	andlw	1
  5076  041A  00F1               	movwf	??_send_nibble+1
  5077  041B  0EF1               	swapf	??_send_nibble+1,f
  5078  041C  0DF1               	rlf	??_send_nibble+1,f
  5079  041D  080E               	movf	14,w	;volatile
  5080  041E  0671               	xorwf	??_send_nibble+1,w
  5081  041F  39DF               	andlw	-33
  5082  0420  0671               	xorwf	??_send_nibble+1,w
  5083  0421  008E               	movwf	14	;volatile
  5084  0422  0008               	return
  5085  0423                     __end_of_send_nibble:	
  5086                           
  5087                           	psect	text19
  5088  02BE                     __ptext19:	
  5089 ;; *************** function _printf *****************
  5090 ;; Defined at:
  5091 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  f               2    2[COMMON] PTR const unsigned char 
  5094 ;;		 -> STR_12(29), STR_11(29), STR_10(27), STR_9(12), 
  5095 ;;		 -> STR_8(10), STR_7(10), STR_6(9), STR_5(22), 
  5096 ;;		 -> STR_4(29), STR_3(9), STR_2(6), STR_1(17), 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  tmpval          4    0        struct .
  5099 ;;  cp              2    0        PTR const unsigned char 
  5100 ;;  len             2    0        unsigned int 
  5101 ;;  val             2    0        unsigned int 
  5102 ;;  c               1    8[COMMON] char 
  5103 ;;  ap              1    7[COMMON] PTR void [1]
  5104 ;;		 -> ?_printf(2), 
  5105 ;;  flag            1    0        unsigned char 
  5106 ;;  prec            1    0        char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2    2[COMMON] int 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5118 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5119 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5120 ;;Total ram usage:        7 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    2
  5123 ;; This function calls:
  5124 ;;		_putch
  5125 ;; This function is called by:
  5126 ;;		_adc_init
  5127 ;;		_sensor_ping
  5128 ;;		_sensor_reset
  5129 ;;		_send_adc_results
  5130 ;;		_turn_30
  5131 ;;		_turn_90
  5132 ;;		_turn_120
  5133 ;;		_rotate_90_enable
  5134 ;;		_rotate_180_enable
  5135 ;;		_disable_rotate
  5136 ;;		_enter_scan_mode
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function _printf
  5142  02BE                     _printf:	
  5143                           
  5144                           ;doprnt.c: 466: va_list ap;
  5145                           ;doprnt.c: 499: signed char c;
  5146                           ;doprnt.c: 506: signed char prec;
  5147                           ;doprnt.c: 508: unsigned char flag;
  5148                           ;doprnt.c: 523: union {
  5149                           ;doprnt.c: 524: unsigned long vd;
  5150                           ;doprnt.c: 525: double integ;
  5151                           ;doprnt.c: 526: } tmpval;
  5152                           ;doprnt.c: 528: unsigned int val;
  5153                           ;doprnt.c: 529: unsigned len;
  5154                           ;doprnt.c: 530: const char * cp;
  5155                           ;doprnt.c: 533: *ap = __va_start();
  5156                           
  5157                           ;incstack = 0
  5158                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5159  02BE  3074               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5160  02BF  00F4               	movwf	??_printf
  5161  02C0  0874               	movf	??_printf,w
  5162  02C1  00F7               	movwf	printf@ap
  5163  02C2                     l1336:	
  5164                           ;doprnt.c: 543: }
  5165                           ;doprnt.c: 1422: {
  5166                           
  5167                           ;doprnt.c: 542: continue;
  5168                           
  5169                           ;doprnt.c: 536: while(c = *f++) {
  5170                           
  5171  02C2  0873               	movf	printf@f+1,w
  5172  02C3  00F5               	movwf	??_printf+1
  5173  02C4  0872               	movf	printf@f,w
  5174  02C5  00F4               	movwf	??_printf
  5175  02C6  0AF2               	incf	printf@f,f
  5176  02C7  1903               	skipnz
  5177  02C8  0AF3               	incf	printf@f+1,f
  5178  02C9  0874               	movf	??_printf,w
  5179  02CA  0084               	movwf	4
  5180  02CB  0875               	movf	??_printf+1,w
  5181  02CC  0085               	movwf	5
  5182  02CD  0800               	movf	0,w	;code access
  5183  02CE  00F6               	movwf	??_printf+2
  5184  02CF  0876               	movf	??_printf+2,w
  5185  02D0  00F8               	movwf	printf@c
  5186  02D1  0878               	movf	printf@c,w
  5187  02D2  1903               	btfsc	3,2
  5188  02D3  0008               	return
  5189                           
  5190                           ;doprnt.c: 540: {
  5191                           ;doprnt.c: 541: (putch(c) );
  5192  02D4  0878               	movf	printf@c,w
  5193  02D5  3182  2280  3182   	fcall	_putch
  5194  02D8  2AC2               	goto	l1336
  5195  02D9                     __end_of_printf:	
  5196                           ;doprnt.c: 1469: }
  5197                           ;doprnt.c: 1533: }
  5198                           ;doprnt.c: 1540: return 0;
  5199                           ;	Return value of _printf is never used
  5200                           
  5201                           
  5202                           	psect	text20
  5203  0280                     __ptext20:	
  5204 ;; *************** function _putch *****************
  5205 ;; Defined at:
  5206 ;;		line 111 in file "mcc_generated_files/eusart.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  txData          1    wreg     unsigned char 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  txData          1    1[COMMON] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0, pclath, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5224 ;;Total ram usage:        1 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    1
  5227 ;; This function calls:
  5228 ;;		_EUSART_Write
  5229 ;; This function is called by:
  5230 ;;		_printf
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function _putch
  5236  0280                     _putch:	
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  5240                           ;putch@txData stored from wreg
  5241  0280  00F1               	movwf	putch@txData
  5242                           
  5243                           ;eusart.c: 113: EUSART_Write(txData);
  5244  0281  0871               	movf	putch@txData,w
  5245  0282  3182  2285         	fcall	_EUSART_Write
  5246  0284  0008               	return
  5247  0285                     __end_of_putch:	
  5248                           
  5249                           	psect	text21
  5250  0285                     __ptext21:	
  5251 ;; *************** function _EUSART_Write *****************
  5252 ;; Defined at:
  5253 ;;		line 97 in file "mcc_generated_files/eusart.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  txData          1    wreg     unsigned char 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  txData          1    0[COMMON] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5271 ;;Total ram usage:        1 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_putch
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           
  5281                           ;psect for function _EUSART_Write
  5282  0285                     _EUSART_Write:	
  5283                           
  5284                           ;incstack = 0
  5285                           ; Regs used in _EUSART_Write: [wreg]
  5286                           ;EUSART_Write@txData stored from wreg
  5287  0285  00F0               	movwf	EUSART_Write@txData
  5288  0286                     l31:	
  5289                           ;eusart.c: 100: {
  5290                           
  5291                           ;eusart.c: 99: while(0 == PIR3bits.TXIF)
  5292                           
  5293  0286  014E               	movlb	14	; select bank14
  5294  0287  1E0F               	btfss	15,4	;volatile
  5295  0288  2A86               	goto	l31
  5296                           
  5297                           ;eusart.c: 101: }
  5298                           ;eusart.c: 103: TX1REG = txData;
  5299  0289  0870               	movf	EUSART_Write@txData,w
  5300  028A  0142               	movlb	2	; select bank2
  5301  028B  009A               	movwf	26	;volatile
  5302  028C  0008               	return
  5303  028D                     __end_of_EUSART_Write:	
  5304                           
  5305                           	psect	text22
  5306  028D                     __ptext22:	
  5307 ;; *************** function _SYSTEM_Initialize *****************
  5308 ;; Defined at:
  5309 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0, pclath, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5327 ;;Total ram usage:        0 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    1
  5330 ;; This function calls:
  5331 ;;		_EUSART_Initialize
  5332 ;;		_OSCILLATOR_Initialize
  5333 ;;		_PIN_MANAGER_Initialize
  5334 ;; This function is called by:
  5335 ;;		_main
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           
  5340                           ;psect for function _SYSTEM_Initialize
  5341  028D                     _SYSTEM_Initialize:	
  5342                           
  5343                           ;mcc.c: 85: PIN_MANAGER_Initialize();
  5344                           
  5345                           ;incstack = 0
  5346                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5347  028D  3183  2384  3182   	fcall	_PIN_MANAGER_Initialize
  5348                           
  5349                           ;mcc.c: 86: OSCILLATOR_Initialize();
  5350  0290  3182  2296  3182   	fcall	_OSCILLATOR_Initialize
  5351                           
  5352                           ;mcc.c: 87: EUSART_Initialize();
  5353  0293  3182  22A0         	fcall	_EUSART_Initialize
  5354  0295  0008               	return
  5355  0296                     __end_of_SYSTEM_Initialize:	
  5356                           
  5357                           	psect	text23
  5358  0384                     __ptext23:	
  5359 ;; *************** function _PIN_MANAGER_Initialize *****************
  5360 ;; Defined at:
  5361 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  state           1    0[COMMON] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5379 ;;Total ram usage:        1 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_SYSTEM_Initialize
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           
  5389                           ;psect for function _PIN_MANAGER_Initialize
  5390  0384                     _PIN_MANAGER_Initialize:	
  5391                           
  5392                           ;pin_manager.c: 52: LATB = 0x0;
  5393                           
  5394                           ;incstack = 0
  5395                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5396  0384  0140               	movlb	0	; select bank0
  5397  0385  0197               	clrf	23	;volatile
  5398                           
  5399                           ;pin_manager.c: 53: LATA = 0x0;
  5400  0386  0196               	clrf	22	;volatile
  5401                           
  5402                           ;pin_manager.c: 54: LATC = 0x0;
  5403  0387  0198               	clrf	24	;volatile
  5404                           
  5405                           ;pin_manager.c: 55: WPUA = 0x0;
  5406  0388  017E               	movlb	62	; select bank62
  5407  0389  01B9               	clrf	57	;volatile
  5408                           
  5409                           ;pin_manager.c: 56: WPUB = 0x0;
  5410  038A  01C4               	clrf	68	;volatile
  5411                           
  5412                           ;pin_manager.c: 57: WPUC = 0x0;
  5413  038B  01CF               	clrf	79	;volatile
  5414                           
  5415                           ;pin_manager.c: 58: ANSELA = 0xFF;
  5416  038C  30FF               	movlw	255
  5417  038D  00B8               	movwf	56	;volatile
  5418                           
  5419                           ;pin_manager.c: 59: ANSELB = 0xFF;
  5420  038E  30FF               	movlw	255
  5421  038F  00C3               	movwf	67	;volatile
  5422                           
  5423                           ;pin_manager.c: 60: ANSELC = 0x7F;
  5424  0390  307F               	movlw	127
  5425  0391  00CE               	movwf	78	;volatile
  5426                           
  5427                           ;pin_manager.c: 61: TRISB = 0xFF;
  5428  0392  30FF               	movlw	255
  5429  0393  0140               	movlb	0	; select bank0
  5430  0394  0092               	movwf	18	;volatile
  5431                           
  5432                           ;pin_manager.c: 62: TRISC = 0xBF;
  5433  0395  30BF               	movlw	191
  5434  0396  0093               	movwf	19	;volatile
  5435                           
  5436                           ;pin_manager.c: 63: TRISA = 0xFF;
  5437  0397  30FF               	movlw	255
  5438  0398  0091               	movwf	17	;volatile
  5439                           
  5440                           ;pin_manager.c: 68: bool state = GIE;
  5441  0399  3000               	movlw	0
  5442  039A  1B8B               	btfsc	11,7	;volatile
  5443  039B  3001               	movlw	1
  5444  039C  00F0               	movwf	PIN_MANAGER_Initialize@state
  5445                           
  5446                           ;pin_manager.c: 69: GIE = 0;
  5447  039D  138B               	bcf	11,7	;volatile
  5448                           
  5449                           ;pin_manager.c: 70: PPSLOCK = 0x55;
  5450  039E  3055               	movlw	85
  5451  039F  017D               	movlb	61	; select bank61
  5452  03A0  008F               	movwf	15	;volatile
  5453                           
  5454                           ;pin_manager.c: 71: PPSLOCK = 0xAA;
  5455  03A1  30AA               	movlw	170
  5456  03A2  008F               	movwf	15	;volatile
  5457                           
  5458                           ;pin_manager.c: 72: PPSLOCKbits.PPSLOCKED = 0x00;
  5459  03A3  100F               	bcf	15,0	;volatile
  5460                           
  5461                           ;pin_manager.c: 74: RXPPS = 0x17;
  5462  03A4  3017               	movlw	23
  5463  03A5  00CB               	movwf	75	;volatile
  5464                           
  5465                           ;pin_manager.c: 75: RC6PPS = 0x10;
  5466  03A6  3010               	movlw	16
  5467  03A7  017E               	movlb	62	; select bank62
  5468  03A8  00A6               	movwf	38	;volatile
  5469                           
  5470                           ;pin_manager.c: 77: RC3PPS = 0x09;
  5471  03A9  3009               	movlw	9
  5472  03AA  00A3               	movwf	35	;volatile
  5473                           
  5474                           ;pin_manager.c: 79: PPSLOCK = 0x55;
  5475  03AB  3055               	movlw	85
  5476  03AC  017D               	movlb	61	; select bank61
  5477  03AD  008F               	movwf	15	;volatile
  5478                           
  5479                           ;pin_manager.c: 80: PPSLOCK = 0xAA;
  5480  03AE  30AA               	movlw	170
  5481  03AF  008F               	movwf	15	;volatile
  5482                           
  5483                           ;pin_manager.c: 81: PPSLOCKbits.PPSLOCKED = 0x01;
  5484  03B0  140F               	bsf	15,0	;volatile
  5485                           
  5486                           ;pin_manager.c: 83: GIE = state;
  5487  03B1  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  5488  03B2  2BB5               	goto	u530
  5489  03B3  178B               	bsf	11,7	;volatile
  5490  03B4  0008               	return
  5491  03B5                     u530:	
  5492  03B5  138B               	bcf	11,7	;volatile
  5493  03B6  0008               	return
  5494  03B7                     __end_of_PIN_MANAGER_Initialize:	
  5495                           
  5496                           	psect	text24
  5497  0296                     __ptext24:	
  5498 ;; *************** function _OSCILLATOR_Initialize *****************
  5499 ;; Defined at:
  5500 ;;		line 90 in file "mcc_generated_files/mcc.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5518 ;;Total ram usage:        0 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_SYSTEM_Initialize
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function _OSCILLATOR_Initialize
  5529  0296                     _OSCILLATOR_Initialize:	
  5530                           
  5531                           ;mcc.c: 93: OSCCON1 = 0x62;
  5532                           
  5533                           ;incstack = 0
  5534                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5535  0296  3062               	movlw	98
  5536  0297  0151               	movlb	17	; select bank17
  5537  0298  008D               	movwf	13	;volatile
  5538                           
  5539                           ;mcc.c: 95: OSCCON3 = 0x00;
  5540  0299  018F               	clrf	15	;volatile
  5541                           
  5542                           ;mcc.c: 97: OSCEN = 0x00;
  5543  029A  0191               	clrf	17	;volatile
  5544                           
  5545                           ;mcc.c: 99: OSCFRQ = 0x02;
  5546  029B  3002               	movlw	2
  5547  029C  0093               	movwf	19	;volatile
  5548                           
  5549                           ;mcc.c: 101: OSCSTAT = 0x00;
  5550  029D  0190               	clrf	16	;volatile
  5551                           
  5552                           ;mcc.c: 103: OSCTUNE = 0x00;
  5553  029E  0192               	clrf	18	;volatile
  5554  029F  0008               	return
  5555  02A0                     __end_of_OSCILLATOR_Initialize:	
  5556                           
  5557                           	psect	text25
  5558  02A0                     __ptext25:	
  5559 ;; *************** function _EUSART_Initialize *****************
  5560 ;; Defined at:
  5561 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      void 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_SYSTEM_Initialize
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _EUSART_Initialize
  5590  02A0                     _EUSART_Initialize:	
  5591                           
  5592                           ;eusart.c: 60: BAUD1CON = 0x08;
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5596  02A0  3008               	movlw	8
  5597  02A1  0142               	movlb	2	; select bank2
  5598  02A2  009F               	movwf	31	;volatile
  5599                           
  5600                           ;eusart.c: 63: RC1STA = 0x90;
  5601  02A3  3090               	movlw	144
  5602  02A4  009D               	movwf	29	;volatile
  5603                           
  5604                           ;eusart.c: 66: TX1STA = 0x24;
  5605  02A5  3024               	movlw	36
  5606  02A6  009E               	movwf	30	;volatile
  5607                           
  5608                           ;eusart.c: 69: SP1BRGL = 0x19;
  5609  02A7  3019               	movlw	25
  5610  02A8  009B               	movwf	27	;volatile
  5611                           
  5612                           ;eusart.c: 72: SP1BRGH = 0x00;
  5613  02A9  019C               	clrf	28	;volatile
  5614  02AA  0008               	return
  5615  02AB                     __end_of_EUSART_Initialize:	
  5616  007E                     btemp	set	126	;btemp
  5617  007E                     wtemp0	set	126


Data Sizes:
    Strings     180
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      26
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_12(CODE[29]), STR_11(CODE[29]), STR_10(CODE[27]), STR_9(CODE[12]), 
		 -> STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[22]), 
		 -> STR_4(CODE[29]), STR_3(CODE[9]), STR_2(CODE[6]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_set_pwm_duty
    _turn_90->_set_pwm_duty
    _turn_30->_set_pwm_duty
    _turn_120->_set_pwm_duty
    _sensor_reset->_set_pwm_duty
    _everything_init->_set_pwm_duty
    _adc_init->_printf
    _handle_scan->_set_pwm_duty
    _set_pwm_duty->___lwdiv
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _main in BANK0

    _main->_send_adc_results
    _turn_90->_wait_while_strobe
    _turn_30->_wait_while_strobe
    _turn_120->_wait_while_strobe
    _sensor_reset->_wait_while_strobe
    _sensor_ping->_wait_while_strobe
    _send_adc_results->_wait_while_strobe
    _rotate_90_enable->_wait_while_strobe
    _rotate_180_enable->_wait_while_strobe
    _receive_msg->_wait_while_strobe
    _disable_rotate->_wait_while_strobe
    _wait_while_strobe->_handle_scan

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   66635
                                             13 BANK0      3     3      0
                  _SYSTEM_Initialize
                     _disable_rotate
                    _everything_init
                        _handle_scan
                        _receive_msg
                  _rotate_180_enable
                   _rotate_90_enable
                   _send_adc_results
                        _sensor_ping
                       _sensor_reset
                       _set_pwm_duty
                           _turn_120
                            _turn_30
                            _turn_90
 ---------------------------------------------------------------------------------
 (1) _turn_90                                              1     1      0    6886
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _turn_30                                              1     1      0    6886
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _turn_120                                             1     1      0    6886
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _sensor_reset                                         1     1      0    6886
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                       _set_pwm_duty
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _sensor_ping                                          1     1      0    6039
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _send_adc_results                                     8     8      0    6175
                                              5 BANK0      8     8      0
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _rotate_90_enable                                     1     1      0    6039
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _rotate_180_enable                                    1     1      0    6039
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (1) _receive_msg                                          4     4      0    5116
                                              5 BANK0      4     4      0
                  _return_bus_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (2) _return_bus_nibble                                    4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _everything_init                                      0     0      0    1705
                           _adc_init
                       _set_pwm_duty
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0     858
                             _printf
 ---------------------------------------------------------------------------------
 (1) _disable_rotate                                       1     1      0    6039
                                              5 BANK0      1     1      0
                             _printf
                        _send_nibble
                  _wait_while_strobe
 ---------------------------------------------------------------------------------
 (2) _wait_while_strobe                                    4     2      2    5093
                                              1 BANK0      4     2      2
                        _handle_scan
 ---------------------------------------------------------------------------------
 (3) _handle_scan                                          1     1      0     847
                                              0 BANK0      1     1      0
                       _set_pwm_duty
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty                                         6     4      2     847
                                              8 COMMON     6     4      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _send_nibble                                          3     3      0      88
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     858
                                              2 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _disable_rotate
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _everything_init
     _adc_init
       _printf
         _putch
           _EUSART_Write
     _set_pwm_duty
       ___lwdiv
   _handle_scan
     _set_pwm_duty
       ___lwdiv
   _receive_msg
     _return_bus_nibble
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _rotate_180_enable
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _rotate_90_enable
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _send_adc_results
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _sensor_ping
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _sensor_reset
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _set_pwm_duty
     ___lwdiv
   _turn_120
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _turn_30
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv
   _turn_90
     _printf
       _putch
         _EUSART_Write
     _send_nibble
     _set_pwm_duty
       ___lwdiv
     _wait_while_strobe
       _handle_scan
         _set_pwm_duty
           ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      1A       5       32.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      28      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      28      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Dec 13 04:12:42 2017

               _rotate_90_enable 05AF                      __CFG_CP$OFF 0000                               l31 0286  
               ??_disable_rotate 0025         __size_of_everything_init 0027                      __CFG_LVP$ON 0000  
                    __CFG_ZCD$ON 0000                              l219 0736                              l258 06CC  
                            _GIE 005F                              _PR2 028D                              u415 03C2  
                            u530 03B5                     __CFG_CPD$OFF 0000                              u435 03CC  
                            u515 04CA                              u445 03D6                              u525 04DB  
                            u455 03DE                              u615 0749                              u555 02B8  
                            u565 0405                              u575 0415                              u807 049B  
                            u585 02FB                              u817 07EC                              u595 0303  
                            u827 05F0                              u837 05A9                              u757 06B9  
                            u847 045A                              u767 0564                              u777 063B  
                            u787 0520                              u797 068B         __end_of_send_adc_results 07F2  
                   __CFG_BORV$LO 0000                              wreg 0009                             l1310 03CB  
                           l1320 03E6                             l1316 03DD                             l1308 03BF  
                           l1414 02AB                             l1336 02C2                             l1356 04D0  
                           l1348 04B4                             l1742 06C2                             l1770 06FE  
                           l1762 06EC                             l1754 06DB                             l1748 06CD  
                           l1694 036E                             l1782 0719                             l1774 0707  
                           l1766 06F5                             l1758 06E3                             l1696 037C  
                           l1786 0722                             l1778 0710                             STR_1 086B  
                           STR_2 08AE                             STR_3 08A5                             STR_4 081D  
                           STR_5 0855                             STR_6 089C                             STR_7 0892  
                           STR_8 0888                             STR_9 087C                             _LATA 0016  
                           _LATB 0017                             _LATC 0018                             _PIR4 0710  
                           _WPUA 1F39                             _WPUB 1F44                             _WPUC 1F4F  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                             _main 0691  
                           fsr0h 0005                             indf0 0000                             fsr0l 0004  
                           btemp 007E                    __CFG_BOREN$ON 0000       __size_of_rotate_180_enable 0045  
                           start 0002                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                  ?_EUSART_Write 0070   __size_of_OSCILLATOR_Initialize 000A    __end_of_OSCILLATOR_Initialize 02A0  
                          _ADACT 0099                            _ADCAP 009B                            ?_main 0070  
                          _ADPCH 009E                            _ADREF 009A                            _ADPRE 009C  
                          STR_10 083A                            STR_11 0800                            STR_12 0800  
                  __CFG_WDTE$OFF 0000                            _T2CON 028E                  __end_of___lwdiv 03EB  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013                            _RXPPS 1ECB                            _putch 0280  
                          status 0003                            wtemp0 007E                  __end_of_turn_30 0641  
                __end_of_turn_90 056A                     ?_receive_msg 0070                  __initialization 07F2  
                   __end_of_main 072B                   ??_EUSART_Write 0070                _return_bus_nibble 02F5  
                         ??_main 002D               ?_return_bus_nibble 0070                ??_everything_init 007E  
            ??_return_bus_nibble 0070             __size_of_handle_scan 0042                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                   ?_send_nibble 0070                           _ADRESH 008D                           _ADRESL 008C  
                         _CCPR1H 030D                           _CCPR1L 030C                           _ADSTAT 0097  
                         _ANSELA 1F38                           ?_putch 0070                           _ANSELB 1F43  
                         _ANSELC 1F4E               __CFG_RSTOSC$HFINT1 0000                           _T0CON0 001E  
                         _T0CON1 001F                           _RC1REG 0119                 __end_of_adc_init 02F5  
                         _RC1STA 011D                           _RC3PPS 1F23                           _RC6PPS 1F26  
                 __CFG_WDTCCS$SC 0000                           _OSCFRQ 0893                           _TX1REG 011A  
                         _TX1STA 011E                   __CFG_PWRTE$OFF 0000        __end_of_return_bus_nibble 0314  
                 __CFG_STVREN$ON 0000                        ??___lwdiv 0074           wait_while_strobe@state 0021  
                         _printf 02BE                     ?_sensor_ping 0070         __end_of_rotate_90_enable 05F6  
                      ??_turn_30 0025                        ??_turn_90 0025                 __end_of_turn_120 0526  
              _SYSTEM_Initialize 028D          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0071                    __end_of_putch 0285  
              ?_send_adc_results 0070               ??_send_adc_results 0025        __end_of_SYSTEM_Initialize 0296  
                        ??_putch 0071                       __pbssBANK0 0030             __end_of_EUSART_Write 028D  
                     __pmaintext 0691             __size_of_receive_msg 0027       __size_of_return_bus_nibble 001F  
                __CFG_PPS1WAY$ON 0000                          _CCP1CON 030E                          ?_printf 0072  
                      ?_adc_init 0070                          _SP1BRGH 011C                          _SP1BRGL 011B  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCSTAT 0890  
                        _OSCTUNE 0892                          _PPSLOCK 1E8F                       _isScanning 0038  
           __size_of_send_nibble 0038             __CFG_SCANE$available 0000                  _everything_init 0336  
                        ___lwdiv 03B7                        ?_turn_120 0070                       ??_adc_init 0079  
                        __ptext1 0526                          __ptext2 05F6                          __ptext3 04E3  
                        __ptext4 0641                          __ptext5 0460                          __ptext6 072B  
                        __ptext7 05AF                          __ptext8 056A                          __ptext9 035D  
                __size_of_printf 001B                    ?_set_pwm_duty 0078            _OSCILLATOR_Initialize 0296  
       ??_PIN_MANAGER_Initialize 0070             __size_of_sensor_ping 0041          __size_of_disable_rotate 003D  
     __size_of_SYSTEM_Initialize 0009                          main@msg 002F                          _turn_30 05F6  
                        _turn_90 0526             end_of_initialization 07FD                    ?_sensor_reset 0070  
              _wait_while_strobe 02AB                _EUSART_Initialize 02A0               ?_wait_while_strobe 0021  
             ?_EUSART_Initialize 0070                          printf@c 0078                          printf@f 0072  
              send_nibble@nibble 0072              ??_wait_while_strobe 0023                       ??_turn_120 0025  
          __CFG_WDTCPS$WDTCPS_31 0000              ??_EUSART_Initialize 0070                        _PORTAbits 000C  
                      _PORTCbits 000E                   ??_set_pwm_duty 007A                     _isScanningUp 0034  
                  ??_handle_scan 0020                        _TRISAbits 0011                        _TRISCbits 0013  
          __size_of_EUSART_Write 0008                 __CFG_FEXTOSC$OFF 0000                ?_rotate_90_enable 0070  
      __end_of_wait_while_strobe 02BE                   ??_sensor_reset 0025               ??_rotate_90_enable 0025  
      __end_of_EUSART_Initialize 02AB          __end_of_everything_init 035D                     _EUSART_Write 0285  
         ?_OSCILLATOR_Initialize 0070                   __end_of_printf 02D9              start_initialization 07F2  
__size_of_PIN_MANAGER_Initialize 0033                      putch@txData 0071              __end_of_handle_scan 04E3  
      __size_of_send_adc_results 00C7                 __CFG_LPBOREN$OFF 0000                         ??_printf 0074  
              __size_of_adc_init 001C                        ___latbits 0004                    __pcstackBANK0 0020  
                 _disable_rotate 0423       __size_of_wait_while_strobe 0013       __size_of_EUSART_Initialize 000B  
                  ??_receive_msg 0025             __end_of_set_pwm_duty 0336                 ?_everything_init 0070  
               ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 0384                         ?___lwdiv 0070  
           __end_of_sensor_reset 0691                   set_pwm_duty@pr 007C                         _BAUD1CON 011F  
              __size_of_turn_120 0043           __end_of_disable_rotate 0460                      _handle_scan 04A1  
                       _CCPTMRS0 021E                    ??_send_nibble 0070                 ___lwdiv@quotient 0075  
                       ?_turn_30 0070                         ?_turn_90 0070                         _T2CLKCON 0290  
                 __size_of_putch 0005                         _PIR0bits 070C                         _PIR3bits 070F  
                 _scanLowerLimit 0030              __end_of_receive_msg 0384                 set_pwm_duty@duty 0078  
                  ??_sensor_ping 0025                  ?_disable_rotate 0070              __end_of_send_nibble 0423  
               _send_adc_results 072B                   _scanUpperLimit 0032        __size_of_rotate_90_enable 0047  
        ??_OSCILLATOR_Initialize 0070                 __size_of___lwdiv 0034                         _adc_init 02D9  
                     _ANSELAbits 1F38                  ___lwdiv@divisor 0070                      _scanCounter 0036  
                ___lwdiv@counter 0077                         __ptext10 02F5                         __ptext11 0336  
                       __ptext20 0280                         __ptext12 02D9                         __ptext21 0285  
                       __ptext13 0423                         __ptext22 028D                         __ptext14 02AB  
                       __ptext23 0384                         __ptext15 04A1                         __ptext24 0296  
                       __ptext16 0314                         __ptext25 02A0                         __ptext17 03B7  
                       __ptext18 03EB                         __ptext19 02BE              __end_of_sensor_ping 04A1  
          __size_of_set_pwm_duty 0022                 __size_of_turn_30 004B                 __size_of_turn_90 0044  
                  __size_of_main 009A             __CFG_WDTCWS$WDTCWS_7 0000                      _receive_msg 035D  
                     _RC1STAbits 011D                _rotate_180_enable 056A            __size_of_sensor_reset 0050  
             ?_rotate_180_enable 0070                         _turn_120 04E3      PIN_MANAGER_Initialize@state 0070  
        send_adc_results@results 002B              ??_rotate_180_enable 0025                     _set_pwm_duty 0314  
                 __pstringtext10 08A5                   __pstringtext11 08AE                   __pstringtext12 0000  
                    _send_nibble 03EB               receive_msg@results 0027                     _sensor_reset 0641  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 1E8F  
      __end_of_rotate_180_enable 05AF                         printf@ap 0077                    __pstringtext1 0800  
                  __pstringtext2 081D                    __pstringtext3 083A                    __pstringtext4 0855  
                  __pstringtext5 086B                    __pstringtext6 087C                    __pstringtext7 0888  
                  __pstringtext8 0892                    __pstringtext9 089C                      _sensor_ping 0460  
                   ?_handle_scan 0070               EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 03B7  
           send_adc_results@nib1 0028             send_adc_results@nib2 0029             send_adc_results@nib3 002A  
